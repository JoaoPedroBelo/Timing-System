{"version":3,"sources":["languages/Wrapper.js","components/Pages/trails.jsx","components/structure/carousel.jsx","components/structure/HeaderHome.jsx","components/structure/LanguageSelector.jsx","components/structure/footerHome.jsx","components/Loader/Loader.jsx","components/Pages/Home.jsx","App.js","components/structure/Header.jsx","components/structure/Footer.jsx","components/structure/Menu.jsx","components/Notifications/subscription.jsx","components/favorites/favoritesChecker.jsx","components/Scripts/PaginationHelper.js","components/Tables/TableParticipants.jsx","components/Widgets/NumberParticipants.jsx","components/Widgets/NumberCategories.jsx","components/Widgets/NumberTeams.jsx","components/Widgets/NumberNationalities.jsx","components/Pages/Participants.jsx","components/Tables/TableGiveUp.jsx","components/Tables/TableDisqualified.jsx","components/Pages/DontFinished.jsx","components/Tables/TableParticipantsCompetition.jsx","components/Pages/ParicipantsCompetiton.jsx","components/Scripts/time.js","components/Tables/TableCheckpoints.jsx","components/Chart/Velocity.jsx","components/Chart/Position.jsx","components/Chart/bar.jsx","components/Chart/pie.jsx","components/Chart/GenderComp.jsx","components/Chart/Ground.jsx","components/Chart/Checkpoint.jsx","components/Widgets/FasterMale.jsx","components/Widgets/FasterFemale.jsx","components/Pages/Checkpoints.jsx","components/Tables/TableWinners.jsx","components/Pages/Winners.jsx","components/Widgets/Faster.jsx","components/Tables/TableTier.jsx","components/Tables/TableGlobal.jsx","components/Tables/TableGender.jsx","components/Widgets/Position.jsx","components/Widgets/Loading.jsx","components/Widgets/Time.jsx","components/Widgets/velocity.jsx","components/Widgets/LastPlace.jsx","components/Pages/AthleteDetail.jsx","components/Tables/TableTeams.jsx","components/Pages/Teams.jsx","components/Tables/TableFavorites.jsx","components/Widgets/NumberFavorites.jsx","components/Pages/Favorites.jsx","components/Pages/StatsGlobal.jsx","components/Pages/StatsCompetition.jsx","components/Pages/feedback.jsx","components/Errors/404.jsx","components/router.jsx","registerServiceWorker.js","serviceWorker.js","index.js","../node_modules/react-flags-select/flags sync /^/.//.*/.svg$"],"names":["local","lang","Trails","props","className","trails","map","trail","today","Date","dd","String","getDate","padStart","mm","getMonth","date","getFullYear","hours","getHours","minutes","getMinutes","seconds","getSeconds","dateTime","key","trail_event_id","style","marginBottom","to","pathname","width","height","src","imageHome_url","alt","name","init_date","end_date","color","id","substring","size","window","innerWidth","Carousel","0","items","1","handleOnDragStart","e","preventDefault","autoPlay","responsive","this","getSize","fadeOutAnimation","mouseDragEnabled","buttonsDisabled","dotsDisabled","autoPlayInterval","onDragStart","React","Component","Header","location","fontSize","href","onClick","GoToHomePage","Context","createContext","localStorage","getItem","navigator","language","toUpperCase","Portuguese","Spanish","French","English","Wrapper","useState","locale","setLocale","messages","setMessages","Provider","value","selectLang","newLocale","removeItem","setItem","children","LanguageSelector","context","useContext","defaultCountry","onSelect","countryCode","countries","showSelectedLabel","showOptionLabel","FooterPage","position","Math","floor","random","length","App","prevProps","type","API_KEY","process","API_URL","TOKEN","getTrailEvents","a","fetch","headers","Headers","Authorization","API_CALL","json","data","setState","showMore","loading","getALLTrailEvents","scrollTo","checkShow","state","backgroundColor","LoadingAthletes","Button","background","Home","getEventInfo","eventID","EventInfo","data-toggle","role","JSON","parse","rehydrate","CheckSize","stringify","float","eventLogo_url","class","Footer","maxWidth","SponserLogo_url","menuSizeTop","menuSizeItem","fontWeight","Menu","getCompetitionList","CompetitionList","OnInit","compList","reload","feedback","activeStyle","menuStatic","competitionID","short_name","data-widget","Competition","parseInt","competition_id","long_name","convertedVapidKey","base64String","padding","repeat","base64","replace","rawData","atob","outputArray","Uint8Array","i","charCodeAt","urlBase64ToUint8Array","sendSubscription","subscription","userID","status","body","method","subscribeUser","serviceWorker","ready","then","registration","pushManager","getSubscription","existedSubscription","console","log","subscribe","applicationServerKey","userVisibleOnly","newSubscription","catch","Notification","permission","error","favoritesChecker","ListaFavoritos","userAgent","toLowerCase","indexOf","tableFav","removeFavoritesTable","removeFavorites","addFavorites","AthleteDetail","checkFavoritesResume","checkFavorites","checkIfTableorResume","calculatePagination","minimalSize","sizeArray","push","TableSubscribers","category","athleteList","athelete","Tableuniquecategory","Set","sort","nacionality","athlete","Tableuniquenacionality","competition","Tableuniquecompetition","club","Tableuniqueclub","inscription_status_code","Tableuniqueinscription_status_code","columns","accessor","sortable","textAlign","show","d","Number","dorsal_number","Filter","filter","onChange","txt","event","target","placeholder","Cell","row","original","athlete_id","filterMethod","includes","textAlignLast","k","toString","filterable","defaultSorted","desc","previousText","nextText","noDataText","defaultPageSize","pageSizeOptions","showPagination","showPaginationTop","showPaginationBottom","showPageSizeOptions","showPageJump","collapseOnSortingChange","collapseOnPageChange","collapseOnDataChange","freezeWhenExpanded","multiSort","resizable","defaultSortDesc","pageText","rowsText","NumberParticipants","NumberCategories","NumberTeams","NumberNationalities","giveup","country","EventSubscribers","getAthletsList","match","params","EventID","clear","athList","closeQuestionForm","data-dismiss","aria-hidden","display","justifyContent","checkQuestionForm","TableGiveUP","escalao","Tableuniquelocal","mimWidth","peitoral","TableDisqualified","getAthletesGiveUPList","CompID","atheleGiveUPList","loadingGiveUP","getAthletesDisqualifiedList","atheleDisqualifiedList","loadingDisqualified","bind","CompName","FormatTime","time","TimeSplit","split","H","M","S","options","TableCheckpoints","checkPosition","FasterMale","Array","el","sexo","fasterTime","acumulated_time","fasterName","FasterFemale","AthleteListSize","sizeCheckpointList","GetFirstRunCheckpointList","CheckpointList","loadingCheckpoints","Getlastcheckpoint","GetCheckpointList","GetAthleteList","Checkpointid","AthleteList","loadingAthlets","checkpointname","checkpointnameShow","AtheletsTotal","AtheletsTotalLoaded","CheckpointTotalLoaded","CheckpointTotal","PopulateBadgesvalues","checkpointID","checkpointName","checkpoint","checkpoint_id","GetTotalAthlets","total","checkpointValue","CheckpointID","Value","checkpoint_order","Tooltip","placement","title","arrow","UpdateStateCheckpoint","GetBadgesvalues","paddingBottom","zIndex","border","LoadingCheckpoints","alignItems","ListAthletes","Winners","GetCategoryList","dataSlice","slice","CategoryList","loadingAthlete","loadingCategory","GetAthleteListGender","Gender","GetAthleteListCategory","CategoryName","Positon","GetCategorysMenuList","Category","LoadingCategory","StaticElementGlobal","StaticElementGlobalM","StaticElementGlobalF","LoadingAthlete","TableTier","distance","distancia_acumulada","km","finaltime","parseFloat","KMperH","isNaN","toFixed","MInperKM","CalculateKMperH","isFinite","Altitude","altitude","getaltitude","getDistance","CalculateMINperKM","TableGlobal","TableGender","Velocity","Faster","Normal","labels","datasets","label","Name","fill","lineTension","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","chartDataVerification","Position","Global","Tier","legend","scales","yAxes","ticks","max","maxY","min","stepSize","PositionGlobal","positionGlobal","positionTier","positionGender","text","velocity","speedKM","speedMIN","LastPlace","place","MICROSERVICE_PDFS","arrayGlobal","arrayGender","arrayTier","arrayFaster","LastCheckpointID","FasterID","GetListGlobal","AthleteID","ListGlobal","loadingGlobal","PersonalInfo","GetListGlobalFaster","ListFaster","loadingFaster","GetListTier","ListTier","loadingTier","GetListGender","ListGender","loadingGender","GetCheckpointInfo","CheckpointInfo","loadingCheckpoint","Athlete","athleteListStatus","loadingList","GetFaster","getFasterTimes","list","Listinside","getLastCheckpoint","global","gender","PositionTier","PositionGender","KM","MIN","AvarageKM","AvarageMIN","ChartVelocityKMRender","ChartVelocityMINRender","ChartPositionRender","LastPositon","pop","certification","getCertificate","disabled","ID_Template","cert_tpl","Codigo_Validacao","cert_code","Nome_Atleta","encodeURIComponent","Sexo","Prova","Posicao_Escalao","Escalao","Posicao_Geral","Tempo","Peitoral","Clube","Total_Info_Recebida","Hash_Calculada","require","md5","url","PopulateArrays","PositionWidgetRender","TimeVelocityWidgetRender","photo_url","getStatus","showCertificateButton","tableGlobal","tableTier","tableGender","chartsRender","compID","athleteid","firstrun","Teams","GetLastCheckpoint","checkpointid","GetTeamsMale","teamlist","GetTeamsFemale","genderState","GetTeamsMaleorCache","GetTeamsFemaleorCache","UpdateStateGender","team","APItime","Time","timeLimited","pointerEvents","Team","LogoURL","Athlets","paddingTop","borderSpacing","borderCollapse","StaticElementTeamM","StaticElementTeamF","checkIFthereISDataTOShow","TableFavorites","index","splice","removeFav","NumberFavorites","arrayFavorites","Favorites","renderTable","bar","ISThree","Label","Inscription","Start","dataStart","Arrivals","dataLast","beginAtZero","pie","StatsGlobal","GetCategory","categoryList","GetGender","genderList","GetCompetitions","competitionList","loadingCompetitions","GetNacionality","nacionalityList","loadingNacionality","GenderComp","Ground","scaleLabel","labelString","Checkpoint","StatsCompetition","GetCategoryStart","categoryListStart","loadingCategoryStart","GetCategoryLast","categoryListLast","loadingCategoryLast","GetGenderStart","genderListStart","loadingGenderStart","GetGenderLast","genderListLast","loadingGenderLast","GetGround","GroundList","loadingGround","GetCheckpointTotal","CheckpointTotalList","NacionalityList","GetNacionalityStart","NacionalityListStart","loadingNacionalityStart","GetNacionalityLast","NacionalityListLast","loadingNacionalityLast","GetData","loadingGroundStart","Starts","Inscriptions","email","message","subject","isClicked","onSubmit","handleSubmit","onNameChange","required","autoComplete","backgroundImage","backgroundRepeat","backgroundAttachment","backgroundSize","backgroundPosition","cursor","htmlFor","onEmailChange","onSubjecthange","onMessageChange","rows","Erro404","Router","path","component","exact","PageSubscribers","PageAthleteDetail","PageGiveUp","PageSubscriversCompetiton","PageCheckpoints","PageTeams","PageWinners","PageFavorites","PageStatsGlobal","PageFeedback","PageStatsComp","isLocalhost","Boolean","hostname","registerValidSW","swUrl","register","onupdatefound","installingWorker","installing","onstatechange","controller","config","onUpdate","onSuccess","self","addEventListener","icon","waitUntil","showNotification","ReactDOM","render","document","getElementById","URL","origin","response","get","unregister","checkValidServiceWorker","registerServiceWorker","contentType","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","keys","Object","resolve","module","exports"],"mappings":"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","file":"static/js/main.83b8d3ce.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport {IntlProvider} from \"react-intl\"\nimport Portuguese from \"./../languages/pt.json\"\nimport Spanish from \"./../languages/es.json\"\nimport French from \"./../languages/fr.json\"\nimport English from \"./../languages/en.json\"\n\n\nexport const Context = React.createContext();\nvar local\nlet lang;\n//check if is save any languague\nif(!!localStorage.getItem(\"Languague\")){\n  local=localStorage.getItem(\"Languague\");\n}\nelse{\n  local = navigator.language.substring(3,5).toUpperCase()\n}\nif (local === \"PT\") {\n  lang = Portuguese;\n}\nelse if (local === \"ES\") {\n  lang = Spanish;\n}\nelse if (local === \"FR\") {\n  lang = French;\n}\nelse if (local === \"GB\") {\n    lang = English;\n  }\nelse {\n  local = \"GB\"\n  lang = English;\n}\n\n const Wrapper=(props) => {\n\n  const[locale,setLocale]= useState(local);\n  const [messages,setMessages]= useState(lang);\n\n  function selectLang(language){\n    const newLocale =language ;\n    //remote from local storage the old one\n    localStorage.removeItem(\"Languague\")\n    //add new languague to storage\n    localStorage.setItem(\"Languague\", language)\n    setLocale(newLocale)\n    if (newLocale === \"PT\") {\n      setMessages(Portuguese)\n    }\n    else if (newLocale === \"ES\") {\n      setMessages(Spanish)\n    }\n    else if (newLocale === \"FR\") {\n      setMessages(French)\n    }\n    else if (newLocale === \"GB\") {\n      setMessages(English)\n      }\n    else {\n      setMessages(English)\n    }\n  }\n\n    return(\n      <Context.Provider value={{locale, selectLang}}>\n        <IntlProvider messages={messages} locale={locale}>\n            {props.children}\n        </IntlProvider>\n        </Context.Provider>\n    )\n\n}\n\nexport default Wrapper","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FormattedMessage} from 'react-intl';\n\nconst Trails = props => (\n  \n  <div className=\"container-fluid\" >\n    <div className=\"row\">\n      {props.trails.map(trail => {\n\n        var today = new Date();\n        var dd = String(today.getDate()).padStart(2, '0');\n        var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n        var yyyy = today.getFullYear();\n        \n        var date = yyyy + '-' + mm + '-' + dd;\n\n        var hours   =  today.getHours();\n        var minutes = today.getMinutes();\n        var seconds = today.getSeconds();\n        if (hours   < 10) {hours   = \"0\"+hours;}\n        if (minutes < 10) {minutes = \"0\"+minutes;}\n        if (seconds < 10) {seconds = \"0\"+seconds;}\n        \n        var time = hours+':'+minutes+':'+seconds;\n        var dateTime = date + \"T\" + time;\n        return (\n          <div\n            key={trail.trail_event_id}\n            className=\"col-md-4\"\n            style={{ marginBottom: \"2rem\" }}\n          >\n            {/* link is to redirect usando acento `*/}\n            <Link to={{pathname: `/EventParticipants/${trail.trail_event_id}`}}>\n              <div className=\"trails__box\">\n                <img style={{  width: \"100%\", height: \"100%\"}}\n                  className=\"trails__box-img\"\n                  src={trail.imageHome_url}\n                  alt={trail.name}\n                ></img>\n                <div className=\"trail__text\">\n                  <h5 className=\"trail__title\">{trail.name}</h5>\n                  <p className=\"trail__subtitle\">\n                    {/* if */}\n                    {trail.init_date < dateTime && trail.end_date > dateTime  ? (\n                      /* then */ <span style={{ color: \"#F44336\" }} >\n                        a decorrer\n                      </span>\n                    ) : (\n                      /* else */ <span style={{color:\"#3c8dbc\"}}>\n                        <FormattedMessage id=\"DATE\" />:{trail.init_date.substring(0, 10)} <FormattedMessage id=\"HOUR\" />:\n                        {trail.init_date.substring(11, 16)}\n                      </span>\n                    )}\n                  </p>\n                </div>\n              </div>\n            </Link>\n          </div>\n        );\n      })}\n    </div>\n  </div>\n);\nexport default Trails;\n","import React from \"react\";\nimport AliceCarousel from \"react-alice-carousel\";\nimport \"react-alice-carousel/lib/alice-carousel.css\";\nvar size = window.innerWidth;\nclass Carousel extends React.Component {\n \n  getSize(){\n    var responsive={};\n\n    if(size >1000){\n      return(responsive = {\n        0: { items: 1 },\n        1: { items: 2 }\n      })\n    }\n    else{\n     return( responsive = {\n        0: { items: 1 }\n      })\n\n    }\n  }\n\n  render() {\n\n    \n    const handleOnDragStart = e => e.preventDefault();\n    return (\n      \n      <AliceCarousel\n        autoPlay={true}\n        responsive={this.getSize()}\n        fadeOutAnimation={true}\n        mouseDragEnabled={true}\n        buttonsDisabled={true}\n        dotsDisabled={true}\n        autoPlayInterval={2000}\n      >\n        <img\n          alt=\"\"\n          className=\"Carousel\"\n          src=\"https://i.imgur.com/sBM8dyK.jpg\"\n          onDragStart={handleOnDragStart}\n        />\n        <img\n          alt=\"\"\n          className=\"Carousel\"\n          src=\"https://i.imgur.com/9xdqNjl.jpg\"\n          onDragStart={handleOnDragStart}\n        />\n        <img\n          alt=\"\"\n          className=\"Carousel\"\n          src=\"https://i.imgur.com/WbGrJzo.jpg\"\n          onDragStart={handleOnDragStart}\n        />\n                <img\n          alt=\"\"\n          className=\"Carousel\"\n          src=\"https://i.imgur.com/sBM8dyK.jpg\"\n          onDragStart={handleOnDragStart}\n        />\n                <img\n          alt=\"\"\n          className=\"Carousel\"\n          src=\"https://i.imgur.com/WbGrJzo.jpg\"\n          onDragStart={handleOnDragStart}\n        />\n      </AliceCarousel>\n    );\n  }\n}\nexport default Carousel;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Header extends Component {\n  GoToHomePage() {\n    window.location = '/';\n  }\n  render()\n   {\n    return (\n      <div>\n        <header className=\"main-header\">\n          {/* Logo */}\n          <Link to={{ pathname: `/` }} className=\"logo\">\n            {/* mini logo for sidebar mini 50x50 pixels */}\n            <span className=\"logo-mini\">\n              <b>T</b>S\n            </span>\n            {/* logo for regular state and mobile devices */}\n            <span style={{fontSize:\"22px\"}} className=\"logo-lg\">\n              <a href=\"#\" onClick={() => this.GoToHomePage()}> <img src=\"/logo_ts_w_32.png\"></img> <strong>Timing</strong> System</a>\n            </span>\n          </Link>\n          {/* Header Navbar: style can be found in header.less */}\n          <nav className=\"navbar navbar-static-top\">\n            {/* Sidebar toggle button*/}\n\n            {/* Navbar Right Menu */}\n            <div className=\"navbar-custom-menu\">\n              <ul className=\"nav navbar-nav\">\n                <li className=\"dropdown user user-menu\">\n                    <span className=\"hidden-xs\"></span>\n                </li>\n              </ul>\n            </div>\n          </nav>\n        </header>\n      </div>\n    );\n  }\n}\n","\nimport React, { Component, useContext } from \"react\";\nimport { Context } from \"../../languages/Wrapper\"\nimport ReactFlagsSelect from 'react-flags-select';\nimport \"../../languages/flags/react-flags-select.css\";\n\n\nconst LanguageSelector = (props) => {\n\n\n  const context = useContext(Context)\n  return (\n    <div>\n      <ReactFlagsSelect  defaultCountry={context.locale}  onSelect={(countryCode) => context.selectLang(countryCode)}\n        countries={[\"PT\", \"GB\", \"FR\", \"ES\"]}\n        showSelectedLabel={false}\n        showOptionLabel={false}\n      />\n\n    </div>\n\n\n  );\n}\nexport default LanguageSelector\n","import React from \"react\";\nimport LanguagueSelector from \"./LanguageSelector\"\n\nconst FooterPage = () => {\n  return (\n<footer className=\"App-footer \">\n<span className=\"pull-right\"><LanguagueSelector /></span>\n\n\n</footer>\n);\n  }\n\nexport default FooterPage;","import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\nimport Loader from 'react-loader-spinner'\nimport React from \"react\";\n\nvar style = [\"BallTriangle\", \"ThreeDots\", \"Bars\", \"Circles\", \"Grid\", \"Puff\", \"TailSpin\", \"Triangle\", \"RevolvingDot\", \"Watch\", \"MutatingDots\"];\nvar position = Math.floor(Math.random() * style.length)\n\n\n\nexport default class App extends React.Component {\n   \n   componentDidUpdate(prevProps) {\n      position = Math.floor(Math.random() * style.length)\n   }\n\n   render() {\n      return (\n         <Loader\n            type={style[position]}\n            color=\"#3c8dbc\"\n            height={100}\n            width={100}\n         />\n      );\n   }\n}","import React, { Component } from \"react\";\nimport \"../../AppHome.css\";\nimport \"../../App.css\";\nimport \"../../AdminLTE.css\";\nimport ListTrails from \"./trails\";\nimport Carousel from \"../structure/carousel\";\nimport NavBar from \"../structure/HeaderHome\";\nimport FooterPage from \"../structure/footerHome\";\nimport { Button } from \"reactstrap\";\nimport Loader from \"../Loader/Loader\";\nimport { FormattedMessage} from 'react-intl';\n\nconst API_KEY =`${process.env.REACT_APP_API_TRAIL_KEY}`\nconst API_URL =`${process.env.REACT_APP_API_TRAIL_URL}`\nconst TOKEN = API_KEY;\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      trails: [],\n      showMore: false,\n      loading: false,\n    };\n    this.getTrailEvents();\n  }\n\n\n /*show recent trails events */\n  getTrailEvents = async () => {\n    const API_CALL = await fetch(\n      `${API_URL}/trail/EventRecents/`,\n      {\n        headers: new Headers({\n          Authorization: TOKEN\n        })\n      }\n    );\n    const data = await API_CALL.json();\n    this.setState({ trails: data, showMore: false , loading:true});\n  };\n\n  /*show all trails events */\n  getALLTrailEvents = async () => {\n    this.setState({ loading:false});\n    const API_CALL = await fetch(\n      `${API_URL}/trail/Event/`,\n      {\n        headers: new Headers({\n          Authorization: TOKEN\n        })\n      }\n    );\n    const data = await API_CALL.json();\n    this.setState({ trails: data, showMore: true, loading:true });\n    window.scrollTo(0, 0)\n\n  };\n\n\n  /*used to check if user click button, hide and show more trails */\n  checkShow= () => {\n    if (this.state.showMore) {\n      this.getTrailEvents();\n    } else {\n      this.getALLTrailEvents();\n    }\n  }\n\n    /*Loading message for the checkpoints*/\n    LoadingAthletes() {\n      if (this.state.loading === true) {\n        return (\n         \n          <ListTrails trails={this.state.trails} />\n\n        )\n      }\n      else {\n        return (\n          <Loader/>\n        )\n      }\n    }\n\n  render() {\n    return (\n      <div style={{backgroundColor:\"White\"}} className=\"App\">\n        <NavBar />\n        <Carousel />\n        \n        {/* Listar os trails e imagens*/}\n        {this.LoadingAthletes()}\n        {/* Listar todos os trails */}\n        <Button\n          onClick={this.checkShow}\n          style={{ background: \"#3c8dbc\", color:\"white\" }}\n        >\n          \n          {this.state.showMore === false ? <FormattedMessage id=\"BUTTONHOMEMORE\" /> : <FormattedMessage id=\"BUTTONHOMELESS\" /> }\n        </Button>{\" \"}\n        \n        <FooterPage/>\n\n      </div>\n    );\n  }\n}\n\nexport default App;","import React, { Component } from \"react\";\nimport HomePage from \"./components/Pages/Home\";\nimport { IntlProvider} from 'react-intl';\nimport \"./AdminLTE.css\";\n\n\nexport default class App extends Component {\n  render() {\n\n    return (\n        <div>\n          <HomePage />\n        </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport LanguagueSelector from \"./LanguageSelector\"\n\nconst API_KEY = `${process.env.REACT_APP_API_TRAIL_KEY}`;\nconst API_URL = `${process.env.REACT_APP_API_TRAIL_URL}`;\nconst TOKEN = API_KEY;\nvar size = window.innerWidth;\n\nexport default class Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      EventInfo: [],\n      loading: false,\n    };\n    this.getEventInfo();\n  }\n  CheckSize() {\n    if (size < 800) {\n      return (\n        <a style={{fontSize:\"22px\"}}\n          href=\"##\"\n          className=\"sidebar-toggle\"\n          data-toggle=\"push-menu\"\n          role=\"button\"\n        >\n          <span  className=\"sr-only\">Toggle navigation</span>\n        </a>\n\n      )\n    }\n  }\n  getEventInfo = async e => {\n\n    const API_CALL = await fetch(\n      `${API_URL}/trail/Event/${this.props.eventID}/`,\n      {\n        headers: new Headers({\n          Authorization: TOKEN\n        })\n      }\n    );\n    const data = await API_CALL.json();\n    this.setState({ EventInfo: data, loading: true });\n\n  };\n\n  componentWillMount() {\n    if(localStorage.getItem(`State${this.props.eventID}`)){\n      if(JSON.parse(localStorage.getItem(`EventID${this.props.eventID}`))===this.props.eventID){\n        const rehydrate = JSON.parse(localStorage.getItem(`State${this.props.eventID}`))\n        this.setState(rehydrate)\n      }\n      else{\n        this.getEventInfo();\n        this.CheckSize();\n\n      }\n    }\n    else{\n      this.getEventInfo();\n      this.CheckSize();\n    }\n\n  }\n  componentWillUnmount() {\n    localStorage.setItem(`State${this.props.eventID}`, JSON.stringify(this.state))\n    localStorage.setItem(`EventID${this.props.eventID}`,JSON.stringify(this.props.eventID))\n  }\n\n  GoToHomePage() {\n    window.location = '/';\n  }\n  render() {\n    return (\n      <div>\n        <header className=\"main-header\">\n          {/* Logo */}\n          <div className=\"logo\">\n\n            {/* mini logo for sidebar mini 50x50 pixels */}\n            <span className=\"logo-mini\">\n              <a href=\"#\" onClick={() => this.GoToHomePage()}><img src=\"/logo_ts_w_32.png\"/></a>\n            </span>\n            {/* logo for regular state and mobile devices */}\n            <span style={{fontSize:\"22px\"}} className=\"logo-lg\">\n              <a href=\"#\" onClick={() => this.GoToHomePage()}> <img src=\"/logo_ts_w_32.png\"></img> <strong>Timing</strong> System</a>\n            </span>\n          </div>\n          {/* Header Navbar: style can be found in header.less */}\n          <nav className=\"navbar navbar-static-top\">\n            {/* Sidebar toggle button*/}\n            {this.CheckSize()}\n            {/* Navbar Right Menu */}\n            <div className=\"navbar-custom-menu\">\n              <ul className=\"nav navbar-nav\">\n\n              {/* imagem aqui maximo 100 width */}\n                <li className=\"dropdown user user-menu\">\n                \n\n                  <div style={{ float: \"left\" }} className=\"logoText\" >\n                    \n                  <img src={this.state.EventInfo.eventLogo_url} class=\"margin\" style={{height: size >800 ? \"60px\" : \"40px\", width: \"auto\" }}></img> \n\n                    <strong>{this.state.EventInfo.name}</strong> \n                  </div>\n                  \n                </li>\n              </ul>\n            </div>\n          </nav>\n        </header>\n      </div >\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport LanguagueSelector from \"./LanguageSelector\"\nconst API_KEY = `${process.env.REACT_APP_API_TRAIL_KEY}`;\nconst API_URL = `${process.env.REACT_APP_API_TRAIL_URL}`;\nconst TOKEN = API_KEY;\nexport default class Footer extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      EventInfo: [],\n      loading: false,\n    };\n    this.getEventInfo();\n  }\n\n  getEventInfo = async e => {\n\n    const API_CALL = await fetch(\n      `${API_URL}/trail/Event/${this.props.eventID}/`,\n      {\n        headers: new Headers({\n          Authorization: TOKEN\n        })\n      }\n    );\n    const data = await API_CALL.json();\n    this.setState({ EventInfo: data, loading: true });\n\n  };\n  componentWillMount() {\n    if(localStorage.getItem(`State${this.props.eventID}`)){\n      if(JSON.parse(localStorage.getItem(`EventID${this.props.eventID}`))===this.props.eventID){\n        const rehydrate = JSON.parse(localStorage.getItem(`State${this.props.eventID}`))\n        this.setState(rehydrate)\n      }\n      else{\n        this.getEventInfo();\n\n      }\n    }\n    else{\n      this.getEventInfo();\n    }\n\n  }\n  componentWillUnmount() {\n    localStorage.setItem(`State${this.props.eventID}`, JSON.stringify(this.state))\n    localStorage.setItem(`EventID${this.props.eventID}`,JSON.stringify(this.props.eventID))\n  }\n\n  \n\n  render() {\n\n    return (\n      <div >\n\n        <footer className=\"main-footer \">\n          <span className=\"pull-right\"><LanguagueSelector /></span>\n          <div style={{ maxWidth: \"800px\" }}>\n            <img src={this.state.EventInfo.SponserLogo_url} style={{ maxWidth: \"100%\", height: \"auto\", width: \"auto\" }} class=\"imgFooter\" />\n          </div>\n        </footer>\n\n      </div>\n    );\n  }\n}\n\n","import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { FormattedMessage } from 'react-intl';\n\n\nconst API_KEY = `${process.env.REACT_APP_API_TRAIL_KEY}`;\nconst API_URL = `${process.env.REACT_APP_API_TRAIL_URL}`;\nconst TOKEN = API_KEY;\nvar size = window.innerWidth;\nvar menuSizeTop = 16;\nvar menuSizeItem = 14;\n\nconst style = { fontWeight: \"bold\", color: \"#3c8dbc\" };\nexport default class Menu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      CompetitionList: [],\n      EventInfo: [],\n      loading: false,\n    };\n    this.OnInit();\n    this.CheckSize();\n\n\n  }\n\n  componentWillMount() {\n    if (JSON.parse(localStorage.getItem(`EventID${this.props.eventID}`)) === this.props.eventID) {\n      if (localStorage.getItem(`State${this.props.eventID}`)) {\n        const rehydrate = JSON.parse(localStorage.getItem(`State${this.props.eventID}`))\n        this.setState(rehydrate)\n        const compList=JSON.parse(localStorage.getItem(`competitionList${this.props.eventID}`))\n        this.setState({CompetitionList : compList})\n      }\n      else {\n        this.getEventInfo();\n        this.getCompetitionList();\n      }\n    }\n    else {\n      this.getEventInfo();\n      this.getCompetitionList();\n    }\n\n  }\n\n  //for menu open and close\n  OnInit() {\n    if (window.localStorage) {\n      if (!localStorage.getItem('firstLoad')) {\n        localStorage['firstLoad'] = true;\n        window.location.reload();\n      }\n      else\n        localStorage.removeItem('firstLoad');\n    }\n  }\n\n  componentWillUnmount() {\n    localStorage.setItem(`State${this.props.eventID}`, JSON.stringify(this.state))\n    localStorage.setItem(`competitionList${this.props.eventID}`, JSON.stringify(this.state.CompetitionList))\n    localStorage.setItem(`EventID${this.props.eventID}`, JSON.stringify(this.props.eventID))\n  }\n\n  CheckSize() {\n    if (size < 800) {\n      menuSizeItem = 21;\n      menuSizeTop = 23;\n    }\n  }\n\n  getCompetitionList = async () => {\n\n    const API_CALL = await fetch(\n      `${API_URL}/trail/Competitions/${this.props.eventID}/`,\n      {\n        headers: new Headers({\n          Authorization: TOKEN\n        })\n      }\n    );\n    const data = await API_CALL.json();\n    this.setState({ CompetitionList: data });\n\n  };\n\n  getEventInfo = async () => {\n\n    const API_CALL = await fetch(\n      `${API_URL}/trail/Event/${this.props.eventID}/`,\n      {\n        headers: new Headers({\n          Authorization: TOKEN\n        })\n      }\n    );\n    const data = await API_CALL.json();\n    this.setState({ EventInfo: data, loading: true });\n  };\n\n  getFeedBackPage() {\n    if (this.state.EventInfo.feedback === 1) {\n      return (<li>\n        <NavLink activeStyle={style} style={{ fontSize: `${menuSizeItem}px` }} to={{ pathname: `/feedback/${this.props.eventID}` }}>\n          <i style={{ fontSize: `${menuSizeItem}px` }} className=\"fa fa-circle-o\" /> <FormattedMessage id=\"FEEDBACK\" />\n        </NavLink>\n\n      </li>)\n    }\n  }\n\n  render() {\n\n    let menuStatic;\n    if (this.state.loading === true) {\n      if (this.props.competitionID === 0) {\n        menuStatic = (\n          <li className=\"treeview active\">\n            <a href=\"##\">\n              <i style={{ fontSize: `${menuSizeTop}px` }} className=\"fa  fa-road\" />\n              <span style={{ fontSize: `${menuSizeTop}px` }}>{(this.state.loading === true) ? \" \" + this.state.EventInfo.short_name : <FormattedMessage id=\"LOADING\" />}</span>\n              <span className=\"pull-right-container\">\n                <i className=\"fa fa-angle-left pull-right\" />\n              </span>\n            </a>\n            <ul className=\"treeview-menu active\">\n              <li>\n                <NavLink activeStyle={style} style={{ fontSize: `${menuSizeItem}px` }} to={{ pathname: `/EventParticipants/${this.props.eventID}` }}>\n                  <i style={{ fontSize: `${menuSizeItem}px` }} className=\"fa fa-circle-o\" /> <FormattedMessage id=\"INSCRIPTIONS\" />\n                </NavLink>\n              </li>\n              <li>\n                <NavLink activeStyle={style} style={{ fontSize: `${menuSizeItem}px` }} to={{ pathname: `/Favorites/${this.props.eventID}` }}>\n                  <i style={{ fontSize: `${menuSizeItem}px` }} className=\"fa fa-circle-o\" /> <FormattedMessage id=\"FAVORITES\" />\n                </NavLink>\n              </li>\n               {/*\n              <li>\n               <NavLink activeStyle={style} style={{ fontSize: `${menuSizeItem}px` }} to={{ pathname: `/Stats/${this.props.eventID}` }}>\n                  <i style={{ fontSize: `${menuSizeItem}px` }} className=\"fa fa-circle-o\" /> <FormattedMessage id=\"STATS\" />\n                </NavLink>\n\n              </li>\n        {this.getFeedBackPage()}*/}\n            </ul>\n          </li>\n        );\n      }\n      else {\n        menuStatic = (\n          <li className=\"treeview\">\n            <a href=\"##\">\n              <i style={{ fontSize: `${menuSizeTop}px` }} className=\"fa  fa-road\" />\n              <span style={{ fontSize: `${menuSizeTop}px` }}>{(this.state.loading === true) ? \" \" + this.state.EventInfo.short_name : <FormattedMessage id=\"LOADING\" />}</span>\n              <span className=\"pull-right-container\">\n                <i className=\"fa fa-angle-left pull-right\" />\n              </span>\n            </a>\n            <ul className=\"treeview-menu active\">\n              <li>\n                <NavLink activeStyle={style} activeStyle={{\n                  fontWeight: \"bold\",\n                  color: \"red\"\n                }} style={{ fontSize: `${menuSizeItem}px` }} to={{ pathname: `/EventParticipants/${this.props.eventID}` }}>\n                  <i style={{ fontSize: `${menuSizeItem}px` }} className=\"fa fa-circle-o\" /> <FormattedMessage id=\"INSCRIPTIONS\" />\n                </NavLink>\n              </li>\n              <li>\n                <NavLink activeStyle={style} style={{ fontSize: `${menuSizeItem}px` }} to={{ pathname: `/Favorites/${this.props.eventID}` }}>\n                  <i style={{ fontSize: `${menuSizeItem}px` }} className=\"fa fa-circle-o\" /> <FormattedMessage id=\"FAVORITES\" />\n                </NavLink>\n              </li>\n              {/*\n              <li>\n                <NavLink activeStyle={style} style={{ fontSize: `${menuSizeItem}px` }} to={{ pathname: `/Stats/${this.props.eventID}` }}>\n                  <i style={{ fontSize: `${menuSizeItem}px` }} className=\"fa fa-circle-o\" /> <FormattedMessage id=\"STATS\" />\n                </NavLink>\n              </li>\n              {this.getFeedBackPage()}*/}\n\n            </ul>\n          </li>\n        );\n      }\n\n\n\n    } else {\n      menuStatic = (\n        <li className=\"active treeview menu-open\">\n          <a href=\"##\">\n            <i className=\"fa fa-dashboard\" />\n            <span><FormattedMessage id=\"LOADING\" /> <i class=\"fa fa-refresh fa-spin\"></i></span>\n            <span className=\"pull-right-container\">\n              <i className=\"fa fa-angle-left pull-right\" />\n            </span>\n          </a>\n        </li>\n      );\n    }\n\n    return (\n\n      <div>\n        <aside className=\"main-sidebar\">\n          {/* sidebar: style can be found in sidebar.less */}\n          <section className=\"sidebar\">\n            {/* sidebar menu: : style can be found in sidebar.less */}\n            <ul class=\"sidebar-menu tree\" data-widget=\"tree\">\n              {/*MENU Event*/}\n              {menuStatic}\n              {/*MENU Dynamic*/}\n              {this.state.CompetitionList.map(Competition => {\n                if (parseInt(this.props.competitionID) === parseInt(Competition.competition_id)) {\n                  return (\n                    <li key={Competition.competition_id} className=\"treeview active\">\n                      <a href=\"##\">\n                        <i style={{ fontSize: `${menuSizeTop}px` }} className=\"fa fa-dashboard\" />\n                        <span style={{ fontSize: `${menuSizeTop}px` }}>{\" \" + Competition.name}</span>\n                        <span style={{ fontSize: `${menuSizeTop}px` }} className=\"pull-right-container\">\n                          <i className=\"fa fa-angle-left pull-right\" />\n                        </span>\n                      </a>\n                      <ul className=\"treeview-menu\">\n                        <li>\n                          <NavLink activeStyle={style} style={{ fontSize: `${menuSizeItem}px` }} to={{ pathname: `/ParticipantsCompetiton/${this.props.eventID}/${Competition.competition_id}/${Competition.long_name}` }}>\n                            <i style={{ fontSize: `${menuSizeItem}px` }} className=\"fa fa-circle-o\" /> <FormattedMessage id=\"INSCRIPTIONS\" />\n                          </NavLink>\n                        </li>\n                        <li>\n                          <NavLink activeStyle={style} style={{ fontSize: `${menuSizeItem}px` }} to={{ pathname: `/Checkpoints/${this.props.eventID}/${Competition.competition_id}/${Competition.long_name}` }}>\n                            <i style={{ fontSize: `${menuSizeItem}px` }} className=\"fa fa-circle-o\" /> <FormattedMessage id=\"CROSSING\" />\n                          </NavLink>\n                        </li>\n                        <li>\n                          <NavLink activeStyle={style} style={{ fontSize: `${menuSizeItem}px` }} to={{ pathname: `/Winners/${this.props.eventID}/${Competition.competition_id}/${Competition.long_name}` }}>\n                            <i style={{ fontSize: `${menuSizeItem}px` }} className=\"fa fa-circle-o\" /> <FormattedMessage id=\"WINNERS\" />\n                          </NavLink>\n                        </li>\n                        <li>\n                          <NavLink activeStyle={style} style={{ fontSize: `${menuSizeItem}px` }} to={{ pathname: `/Teams/${this.props.eventID}/${Competition.competition_id}/${Competition.long_name}` }}>\n                            <i style={{ fontSize: `${menuSizeItem}px` }} className=\"fa fa-circle-o\" /> <FormattedMessage id=\"TEAMS\" />\n                          </NavLink>\n                        </li>\n                        <li>\n                          <NavLink activeStyle={style} style={{ fontSize: `${menuSizeItem}px` }} to={{ pathname: `/EventGiveUp/${this.props.eventID}/${Competition.competition_id}/${Competition.long_name}` }}>\n                            <i style={{ fontSize: `${menuSizeItem}px` }} className=\"fa fa-circle-o\" /> <FormattedMessage id=\"DIDNOTFINISH\" />\n                          </NavLink>\n\n                        </li>\n                        {/*\n                        <li>\n                          <NavLink activeStyle={style} style={{ fontSize: `${menuSizeItem}px` }} to={{ pathname: `/StatsComp/${this.props.eventID}/${Competition.competition_id}/${Competition.long_name}` }}>\n                            <i style={{ fontSize: `${menuSizeItem}px` }} className=\"fa fa-circle-o\" /> <FormattedMessage id=\"STATS\" />\n                          </NavLink>\n                        </li>*/}\n\n                      </ul>\n                    </li>\n                  );\n                }\n                else {\n                  return (\n                    <li key={Competition.competition_id} className=\"treeview\">\n                      <a href=\"##\">\n                        <i style={{ fontSize: `${menuSizeTop}px` }} className=\"fa fa-dashboard\" />\n                        <span style={{ fontSize: `${menuSizeTop}px` }}>{\"  \" + Competition.name}</span>\n                        <span className=\"pull-right-container\">\n                          <i style={{ fontSize: `${menuSizeTop}px` }} className=\"fa fa-angle-left pull-right\" />\n                        </span>\n                      </a>\n                      <ul className=\"treeview-menu\">\n                        <li>\n                          <NavLink activeStyle={style} style={{ fontSize: `${menuSizeItem}px` }} to={{ pathname: `/ParticipantsCompetiton/${this.props.eventID}/${Competition.competition_id}/${Competition.long_name}` }}>\n                            <i style={{ fontSize: `${menuSizeItem}px` }} className=\"fa fa-circle-o\" /> <FormattedMessage id=\"INSCRIPTIONS\" />\n                          </NavLink>\n                        </li>\n                        <li>\n                          <NavLink activeStyle={style} style={{ fontSize: `${menuSizeItem}px` }} style={{ fontSize: `${menuSizeItem}px` }} to={{ pathname: `/Checkpoints/${this.props.eventID}/${Competition.competition_id}/${Competition.long_name}` }}>\n                            <i style={{ fontSize: `${menuSizeItem}px` }} className=\"fa fa-circle-o\" /> <FormattedMessage id=\"CROSSING\" />\n                          </NavLink>\n                        </li>\n                        <li>\n                          <NavLink activeStyle={style} style={{ fontSize: `${menuSizeItem}px` }} to={{ pathname: `/Winners/${this.props.eventID}/${Competition.competition_id}/${Competition.long_name}` }}>\n                            <i style={{ fontSize: `${menuSizeItem}px` }} className=\"fa fa-circle-o\" /> <FormattedMessage id=\"WINNERS\" />\n                          </NavLink>\n                        </li>\n                        <li>\n                          <NavLink activeStyle={style} style={{ fontSize: `${menuSizeItem}px` }} to={{ pathname: `/Teams/${this.props.eventID}/${Competition.competition_id}/${Competition.long_name}` }}>\n                            <i style={{ fontSize: `${menuSizeItem}px` }} className=\"fa fa-circle-o\" /> <FormattedMessage id=\"TEAMS\" />\n                          </NavLink>\n                        </li>\n                        <li>\n                          <NavLink activeStyle={style} style={{ fontSize: `${menuSizeItem}px` }} to={{ pathname: `/EventGiveUp/${this.props.eventID}/${Competition.competition_id}/${Competition.long_name}` }}>\n                            <i className=\"fa fa-circle-o\" /> <FormattedMessage id=\"DIDNOTFINISH\" />\n                          </NavLink>\n\n                        </li>\n                        {/*\n                        <li>\n                          <NavLink activeStyle={style} style={{ fontSize: `${menuSizeItem}px` }} to={{ pathname: `/StatsComp/${this.props.eventID}/${Competition.competition_id}/${Competition.long_name}` }}>\n                            <i style={{ fontSize: `${menuSizeItem}px` }} className=\"fa fa-circle-o\" /> <FormattedMessage id=\"STATS\" />\n                          </NavLink>\n                        </li>*/}\n                      </ul>\n                    </li>\n                  );\n                }\n\n              })}\n            </ul>\n          </section>\n\n          {/* /.sidebar */}\n        </aside>\n      </div>\n    );\n  }\n}","const convertedVapidKey = urlBase64ToUint8Array(process.env.REACT_APP_PUBLIC_VAPID_KEY)\n\nfunction urlBase64ToUint8Array(base64String) {\n  const padding = \"=\".repeat((4 - base64String.length % 4) % 4)\n  // eslint-disable-next-line\n  const base64 = (base64String + padding).replace(/\\-/g, \"+\").replace(/_/g, \"/\")\n\n  const rawData = window.atob(base64)\n  const outputArray = new Uint8Array(rawData.length)\n\n  for (let i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i)\n  }\n  return outputArray\n}\n\n\n\nfunction sendSubscription(subscription, userID, status) {\n  const body = {\n    'sub': subscription,\n    'userID': userID\n  }\n  if (status === \"Send\") {\n    return fetch(`${process.env.REACT_APP_API_URL}/notifications/subscribe/`, {\n      method: 'POST',\n      body: JSON.stringify(body),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n  }\n  else {\n    return fetch(`${process.env.REACT_APP_API_URL}/notifications/remove/`, {\n      method: 'POST',\n      body: JSON.stringify(body),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n  }\n}\n\nexport function subscribeUser(userID, status) {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(function (registration) {\n      if (!registration.pushManager) {\n        console.log('Push manager unavailable.')\n        return\n      }\n\n      registration.pushManager.getSubscription().then(function (existedSubscription) {\n        if (existedSubscription === null) {\n          console.log('No subscription detected, make a request.')\n          registration.pushManager.subscribe({\n            applicationServerKey: convertedVapidKey,\n            userVisibleOnly: true,\n          }).then(function (newSubscription) {\n            console.log('New subscription added.')\n            sendSubscription(newSubscription, userID, status)\n\n          }).catch(function (e) {\n            if (Notification.permission !== 'granted') {\n              console.log('Permission was not granted.')\n            } else {\n              console.error('An error ocurred during the subscription process.', e)\n            }\n          })\n        } else {\n          console.log('Existed subscription detected.')\n          sendSubscription(existedSubscription, userID, status)\n        }\n      })\n    })\n      .catch(function (e) {\n        console.error('An error ocurred during Service Worker registration.', e)\n      })\n  }\n}","import React, { Component } from 'react'\nimport { subscribeUser } from '../../components/Notifications/subscription';\nimport { FormattedMessage} from 'react-intl';\n\nexport default class favoritesChecker extends Component {\n\n    //to save the favorites to local storage\n    addFavorites() {\n        localStorage.setItem(parseInt(this.props.ListaFavoritos), JSON.stringify(parseInt(this.props.ListaFavoritos)))\n        subscribeUser(this.props.ListaFavoritos, \"Send\");\n        if(navigator.userAgent.toLowerCase().indexOf('firefox') > -1){\n            window.location.reload();\n        }\n    }\n\n    //to remove the favorites to local storage\n    removeFavorites() {\n\n        localStorage.removeItem(this.props.ListaFavoritos)\n        subscribeUser(this.props.ListaFavoritos, \"Remove\");\n        if(navigator.userAgent.toLowerCase().indexOf('firefox') > -1){\n            window.location.reload();\n\n        }\n    }\n\n    //Just for the favorites tables because of reload the window\n    removeFavoritesTable() {\n        localStorage.removeItem(this.props.ListaFavoritos)\n        subscribeUser(this.props.ListaFavoritos, \"Remove\");\n\n    }\n\n    //to check if is favorite (this is for the tables)\n    checkFavorites() {\n        if (parseInt(this.props.ListaFavoritos) === parseInt(localStorage.getItem(this.props.ListaFavoritos))) {\n            if (this.props.tableFav === true) {\n\n                return (\n                    <a href=\"##\" style={{ color: \"#3c8dbc\" }} onClick={() => this.removeFavoritesTable()}>\n                        <i className=\"fa fa-fw fa-heart\"></i>\n                    </a>\n                )\n            }\n            else {\n                return (\n                    <a href=\"##\" style={{ color: \"#3c8dbc\" }} onClick={() => this.removeFavorites()}>\n                        <i className=\"fa fa-fw fa-heart\"></i>\n                    </a>\n                )\n            }\n\n        }\n        else {\n            return (\n                <a href=\"##\" style={{ color: \"#3c8dbc\" }} onClick={() => this.addFavorites()}>\n                    <i className=\"fa fa-fw fa-heart-o\"></i>\n                </a>\n            )\n        }\n    }\n\n    //to check if is favorite (this is for the athletedetail)\n    checkFavoritesResume() {\n        if (parseInt(this.props.ListaFavoritos) === parseInt(localStorage.getItem(this.props.ListaFavoritos))) {\n            return (\n                <a href=\"##\" className=\"btn btn-danger btn-block\" onClick={() => this.removeFavoritesTable()}><b><FormattedMessage id=\"REMOVEFAV\" /></b></a>\n            )\n        }\n        else {\n            return (\n                <a href=\"##\" className=\"btn btn-info btn-block\" onClick={() => this.addFavorites()}><b><FormattedMessage id=\"ADDFAV\"/></b></a>\n            )\n        }\n    }\n    //check is the call comes from the detail or from a table\n    checkIfTableorResume() {\n        if (this.props.AthleteDetail === true) {\n            return (\n                this.checkFavoritesResume()\n            )\n        }\n        else {\n            return (\n                this.checkFavorites()\n            )\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {this.checkIfTableorResume()}\n            </div>\n        )\n    }\n}\n","export function calculatePagination(size, minimalSize) {\n    var sizeArray = []\n    if(minimalSize<size){\n        sizeArray.push(minimalSize)\n    }\n    if (size > 50) {\n        sizeArray.push(50)\n    }\n    if (size > 100) {\n        sizeArray.push(100)\n    }\n    if (size > 200) {\n        sizeArray.push(200)\n    }\n    if (size > 500) {\n        sizeArray.push(500)\n    }\n    if (minimalSize != size) {\n        sizeArray.push(size)\n    }\n    return (sizeArray)\n}\n\nexport function minimalSize(size, minimalSize) {\n    var sizeArray\n    if(size<minimalSize){\n        sizeArray=size\n    }\n    else{\n        sizeArray=minimalSize\n    }\n    \n\n    return (sizeArray)\n}\n\n","import React, { Component } from \"react\";\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\nimport { Link } from \"react-router-dom\";\nimport Favorites from \"../favorites/favoritesChecker\"\nimport { FormattedMessage } from 'react-intl';\nimport { calculatePagination } from \"../Scripts/PaginationHelper\"\nimport { minimalSize } from \"../Scripts/PaginationHelper\"\n\nvar size = window.innerWidth;\n\nexport default class TableSubscribers extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: this.props.loading\n    };\n    //for the columns sizes (desktop and mobile)\n  }\n\n  //to hide columns\n  CheckSize() {\n\n    if (size > 800) {\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n\n  render() {\n    //Info for the filters\n    //get the category\n    let category = this.props.athleteList.map(athelete => {\n      return athelete.category;\n    });\n    //remove duplicates\n    const Tableuniquecategory = [...new Set(category.sort())];\n    //get the nacionality\n    let nacionality = this.props.athleteList.map(athelete => {\n      return athelete.athlete.nacionality;\n    });\n    //remove duplicates\n    const Tableuniquenacionality = [...new Set(nacionality.sort())];\n    //get the competitons\n    let competition = this.props.athleteList.map(athelete => {\n      return athelete.competition.name;\n    });\n    //remove duplicates\n    const Tableuniquecompetition = [...new Set(competition.sort())];\n    //get the Club\n    let club = this.props.athleteList.map(athelete => {\n      return athelete.club;\n    });\n    //remove duplicates\n    const Tableuniqueclub = [...new Set(club.sort())];\n    //get the inscription_status_code\n    let inscription_status_code = this.props.athleteList.map(athelete => {\n      return athelete.inscription_status_code;\n    });\n    //remove duplicates\n    const Tableuniqueinscription_status_code = [\n      ...new Set(inscription_status_code.sort())\n    ];\n\n\n    //Table\n    const columns = [\n      {\n        Header: \"Id\",\n        accessor: \"athlete.athlete_id\",\n        sortable: false,\n        style: {\n          textAlign: \"Center\"\n        },\n        width: 0,\n        maxWidth: 100,\n        show: false\n      },\n      {\n\n        Header: (size > 800) ? <FormattedMessage id=\"DORSAL\" /> : \"PTL\",\n        id: \"dorsal_number\",\n        accessor: d => Number(d.dorsal_number),\n        width: (size > 800) ? 100 : 60,\n        style: {\n          textAlign: \"Center\"\n        },\n        Filter: ({ filter, onChange }) => (\n          <FormattedMessage id=\"SEARCH\" >\n          {txt => <input\n            onChange={event => onChange(event.target.value)}\n            value={filter ? filter.value : \"\"}\n            placeholder={txt}\n            style={{\n              width: \"100%\",\n              textAlign: \"Center\"\n            }}\n          />}\n        </FormattedMessage>\n        ),\n        Cell: row => (\n\n          <Link\n          to={{ pathname: `/AthleteDetail/${this.props.eventID}/${row.original.competition.competition_id}/${row.original.athlete.athlete_id}` }}\n          >\n            <span style={{ color: \"#3c8dbc\" }}>{row.value} </span>\n          </Link>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"NAME\" />,\n        accessor: \"athlete.name\",\n        width: (size > 800) ? 280 : 160,\n        style: {\n          textAlign: \"center\"\n        },\n\n        Filter: ({ filter, onChange }) => (\n          <FormattedMessage id=\"SEARCH\" >\n          {txt => <input\n            onChange={event => onChange(event.target.value)}\n            value={filter ? filter.value : \"\"}\n            placeholder={txt}\n            style={{\n              width: \"100%\",\n              textAlign: \"Center\"\n            }}\n          />}\n        </FormattedMessage>\n\n        ),\n        Cell: row => (\n\n          <Link\n            to={{ pathname: `/AthleteDetail/${this.props.eventID}/${row.original.competition.competition_id}/${row.original.athlete.athlete_id}` }}\n          >\n            <span style={{ color: \"#3c8dbc\" }}>{row.value} </span>\n          </Link>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"TEAM\" />,\n        accessor: \"club\",\n        show: this.CheckSize(),\n        style: {\n          textAlign: \"center\"\n        },\n        Cell: row => row.value,\n        filterMethod: (filter, row) => {\n          if (filter.value === \"\") {\n            return true;\n          }\n\n          if (Tableuniqueclub.includes(filter.value)) {\n            return row[filter.id] === filter.value;\n          } else {\n            return true;\n          }\n        },\n        Filter: ({ filter, onChange }) => (\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\", textAlignLast: \"center\" }}\n            value={filter ? filter.value : \"all\"}\n          >\n            <FormattedMessage id=\"ALL\">\n              {txt => <option value=\"all\">{txt}</option>}\n            </FormattedMessage>\n            {Tableuniqueclub.map(k => {\n              return (\n                <option key={k.toString()} value={k}>\n                  {k}\n                </option>\n              );\n            })}\n          </select>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"CATEGORY\" />,\n        accessor: \"category\",\n        width: (size > 800) ? 150 : 90,\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => row.value,\n        filterMethod: (filter, row) => {\n          if (filter.value === \"\") {\n            return true;\n          }\n\n          if (Tableuniquecategory.includes(filter.value)) {\n            return row[filter.id] === filter.value;\n          } else {\n            return true;\n          }\n        },\n        Filter: ({ filter, onChange }) => (\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\", textAlignLast: \"center\" }}\n            value={filter ? filter.value : \"all\"}\n          >\n            <FormattedMessage id=\"ALL\">\n              {txt => <option value=\"all\">{txt}</option>}\n            </FormattedMessage>\n            {Tableuniquecategory.map(k => {\n              return (\n                <option key={k.toString()} value={k}>\n                  {k}\n                </option>\n              );\n            })}\n          </select>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"COMPETITION\" />,\n        accessor: \"competition.name\",\n        width: (size > 800) ? 145 : 80,\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => row.value,\n        filterMethod: (filter, row) => {\n          if (filter.value === \"\") {\n            return true;\n          }\n\n          if (Tableuniquecompetition.includes(filter.value)) {\n            return row[filter.id] === filter.value;\n          } else {\n            return true;\n          }\n        },\n        Filter: ({ filter, onChange }) => (\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\", textAlignLast: \"center\" }}\n            value={filter ? filter.value : \"all\"}\n          >\n            <FormattedMessage id=\"ALL\">\n              {txt => <option value=\"all\">{txt}</option>}\n            </FormattedMessage>\n            {Tableuniquecompetition.map(k => {\n              return (\n                <option key={k.toString()} value={k}>\n                  {k}\n                </option>\n              );\n            })}\n          </select>\n        )\n      },\n      {\n        Header: \"Prova\",\n        accessor: \"competition.competition_id\",\n        show: false,\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => row.value,\n        filterMethod: (filter, row) => {\n          if (filter.value === \"\") {\n            return true;\n          }\n\n          if (Tableuniquecompetition.includes(filter.value)) {\n            return row[filter.id] === filter.value;\n          } else {\n            return true;\n          }\n        },\n        Filter: ({ filter, onChange }) => (\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\", textAlignLast: \"center\" }}\n            value={filter ? filter.value : \"all\"}\n          >\n            <option value=\"all\">Todos</option>\n            {Tableuniquecompetition.map(k => {\n              return (\n                <option key={k.toString()} value={k}>\n                  {k}\n                </option>\n              );\n            })}\n          </select>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"COUNTRY\" />,\n        accessor: \"athlete.nacionality\",\n        width: 150,\n        show: this.CheckSize(),\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => row.value,\n        filterMethod: (filter, row) => {\n          if (filter.value === \"\") {\n            return true;\n          }\n\n          if (Tableuniquenacionality.includes(filter.value)) {\n            return row[filter.id] === filter.value;\n          } else {\n            return true;\n          }\n        },\n        Filter: ({ filter, onChange }) => (\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\", textAlignLast: \"center\" }}\n            value={filter ? filter.value : \"all\"}\n          >\n            <FormattedMessage id=\"ALL\">\n              {txt => <option value=\"all\">{txt}</option>}\n            </FormattedMessage>      \n                  {Tableuniquenacionality.map(k => {\n              return (\n                <option key={k.toString()} value={k}>\n                  {k}\n                </option>\n              );\n            })}\n          </select>\n        )\n      },\n      {\n\n        Header: <FormattedMessage id=\"STATUS\" />,\n        accessor: \"inscription_status_code\",\n        width: (size > 800) ? 150 : 110,\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => {\n          if (row.value === \"I\") {\n            return <FormattedMessage id=\"I\" />;\n          } else if (row.value === \"CI\") {\n            return <FormattedMessage id=\"CI\" />;\n          } else if (row.value === \"AN\") {\n            return <FormattedMessage id=\"AN\" />;\n          } else if (row.value === \"D\") {\n            return <FormattedMessage id=\"D\" />;\n          } else if (row.value === \"PND\") {\n            return <FormattedMessage id=\"PND\" />;\n          } else if (row.value === \"DNS\") {\n            return <FormattedMessage id=\"DNS\" />;\n          }else if (row.value === \"EP\") {\n            return <FormattedMessage id=\"EP\" />;\n          }else if (row.value === \"DNF\") {\n            return <FormattedMessage id=\"DNF\" />;\n          }else if (row.value === \"DSQ\") {\n            return <FormattedMessage id=\"DSQ\" />;\n          }else if (row.value === \"EV\") {\n            return <FormattedMessage id=\"EV\" />;\n          }else if (row.value === \"FIN\") {\n            return <FormattedMessage id=\"FIN\" />;\n          }else if (row.value === \"GAP\") {\n            return <FormattedMessage id=\"GAP\" />;\n          }else\n          { return \"\"}\n        },\n        filterMethod: (filter, row) => {\n          if (filter.value === \"\") {\n            return true;\n          }\n\n          if (Tableuniqueinscription_status_code.includes(filter.value)) {\n            return row[filter.id] === filter.value;\n          } else {\n            return true;\n          }\n        },\n        Filter: ({ filter, onChange }) => (\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\", textAlignLast: \"center\" }}\n            value={filter ? filter.value : \"all\"}\n          >\n            <FormattedMessage id=\"ALL\">\n              {txt => <option value=\"all\">{txt}</option>}\n            </FormattedMessage>\n            {Tableuniqueinscription_status_code.map(k => {\n              return (\n                <FormattedMessage id={k.toString()}>\n                  {txt => <option key={k.toString()} value={k}>{txt}</option>}\n                </FormattedMessage>\n              );\n            })}\n          </select>\n        )\n      },\n      {\n        Header: (size > 800) ? <FormattedMessage id=\"FAVORITE\" /> : \"FAV\",\n        filterable: false,\n        sortable: false,\n        width: (size > 800) ? 70 : 50,\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => (\n          <Favorites ListaFavoritos={row.original.athlete.athlete_id} />\n\n        )\n      }\n    ];\n    return (\n      <ReactTable\n        defaultSorted={[\n          {\n            id: \"dorsal_number\",\n            desc: false\n          }\n        ]}\n        previousText={<FormattedMessage id=\"PREVIOUS\" />}\n        nextText={<FormattedMessage id=\"NEXT\" />}\n        columns={columns}\n        data={this.props.athleteList}\n        filterable\n        noDataText={<FormattedMessage id=\"NODATA\" />}\n        defaultPageSize={minimalSize(this.props.athleteList.length,20)}\n        pageSizeOptions={calculatePagination(this.props.athleteList.length, 20)}\n        showPagination={true}\n        showPaginationTop={false}\n        showPaginationBottom={true}\n        showPageSizeOptions={true}\n        showPageJump={true}\n        collapseOnSortingChange={true}\n        collapseOnPageChange={true}\n        collapseOnDataChange={true}\n        freezeWhenExpanded={false}\n        sortable={true}\n        multiSort={true}\n        resizable={true}\n        defaultSortDesc={false}\n        pageText={<FormattedMessage id=\"PAGE\" />}\n        rowsText={\"\"}\n        className=\"-striped -highlight\"\n\n      />\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { FormattedMessage } from 'react-intl';\n\nexport default class NumberParticipants extends Component {\n    render() {\n        return (\n            <div>\n                {/* Info boxes */}\n                <div className=\"col-md-3 col-sm-6 col-xs-12\">\n                    <div className=\"info-box\">\n                        <span className=\"info-box-icon bg-aqua\"><i className=\"ion ion-ios-contact-outline\" /></span>\n                        <div className=\"info-box-content\">\n                            <span className=\"info-box-text\"><FormattedMessage id=\"ATHLETES\" /></span>\n                            <span className=\"info-box-number\">{this.props.athleteList.length}</span>\n                        </div>\n                        {/* /.info-box-content */}\n                    </div>\n                    {/* /.info-box */}\n                </div>\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { FormattedMessage } from 'react-intl';\n\nexport default class NumberCategories extends Component {\n    render() {\n        //get the category\n        let category = this.props.athleteList.map(athelete => {\n            return athelete.category;\n        });\n        //remove duplicates\n        const Tableuniquecategory = [...new Set(category)];\n        return (\n            <div>\n                {/* Info boxes */}\n                <div className=\"col-md-3 col-sm-6 col-xs-12\">\n                    <div className=\"info-box\">\n                        <span className=\"info-box-icon bg-blue\"><i className=\"ion ion-ios-analytics-outline\" /></span>\n                        <div className=\"info-box-content\">\n                            <span className=\"info-box-text\"><FormattedMessage id=\"CATEGORY\" /></span>\n                            <span className=\"info-box-number\">{Tableuniquecategory.length}</span>\n                        </div>\n                        {/* /.info-box-content */}\n                    </div>\n                    {/* /.info-box */}\n                </div>\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from \"react\";\nimport { FormattedMessage } from 'react-intl';\nexport default class NumberTeams extends Component {\n    render() {\n        //get the Club\n        let club = this.props.athleteList.map(athelete => {\n            return athelete.club;\n        });\n        //remove duplicates\n        const Tableuniqueclub = [...new Set(club)];\n        return (\n            <div>\n                {/* Info boxes */}\n                <div className=\"col-md-3 col-sm-6 col-xs-12\">\n                    <div className=\"info-box\">\n                        <span className=\"info-box-icon bg-yellow\"><i className=\"ion ion-ios-people-outline\" /></span>\n                        <div className=\"info-box-content\">\n                            <span className=\"info-box-text\"><FormattedMessage id=\"TEAMS\" /></span>\n                            <span className=\"info-box-number\">{Tableuniqueclub.length}</span>\n                        </div>\n                        {/* /.info-box-content */}\n                    </div>\n                    {/* /.info-box */}\n                </div>\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { FormattedMessage } from 'react-intl';\n\nexport default class NumberNationalities extends Component {\n    render() {\n        var nacionality\n        //get the nacionality\n        if( this.props.giveup===true){\n            nacionality = this.props.athleteList.map(athelete => {\n                return athelete.country;});\n        }\n        else{\n             nacionality = this.props.athleteList.map(athelete => {\n                return athelete.athlete.nacionality;});\n        }\n\n        //remove duplicates\n        const Tableuniquenacionality = [...new Set(nacionality)];\n        return (\n            <div>\n                {/* Info boxes */}\n                <div className=\"col-md-3 col-sm-6 col-xs-12\">\n                    <div className=\"info-box\">\n                        <span className=\"info-box-icon bg-red\"><i className=\"fa fa-fw fa-map-o\" /></span>\n                        <div className=\"info-box-content\">\n                            <span className=\"info-box-text\"><FormattedMessage id=\"NATIONALITY\" /></span>\n                            <span className=\"info-box-number\">{Tableuniquenacionality.length}</span>\n                        </div>\n                        {/* /.info-box-content */}\n                    </div>\n                    {/* /.info-box */}\n                </div>\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from \"react\";\nimport Header from \"../structure/Header\";\nimport Footer from \"../structure/Footer\";\nimport Menu from \"../structure/Menu\";\nimport TableSubscribers from \"../Tables/TableParticipants\";\nimport WidgetNumberParticipants from \"../Widgets/NumberParticipants\";\nimport WidgetNumberCategories from \"../Widgets/NumberCategories\";\nimport WidgetNumberteams from \"../Widgets/NumberTeams\";\nimport WidgetNumberNacionalities from \"../Widgets/NumberNationalities\";\nimport Loader from \"../Loader/Loader\";\nimport { FormattedMessage } from 'react-intl';\n\n\nconst API_KEY = `${process.env.REACT_APP_API_TRAIL_KEY}`;\nconst API_URL = `${process.env.REACT_APP_API_TRAIL_URL}`;\nconst TOKEN = API_KEY;\nvar EventID = 0;\n\nexport default class EventSubscribers extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      athleteList: [],\n      loading: false,\n    };\n\n  }\n  componentWillMount() {\n    try {\n      if (localStorage.getItem(`athleteList${this.props.match.params.EventID}`)) {\n\n        const athList = JSON.parse(localStorage.getItem(`athleteList${this.props.match.params.EventID}`))\n        this.setState({ athleteList: athList, loading: true })\n      }\n\n\n    }\n    catch{\n      localStorage.clear();\n\n    }\n    this.getAthletsList();\n\n  }\n\n\n  /*List of athlets*/\n  getAthletsList = async e => {\n    const API_CALL = await fetch(`${API_URL}/trail/Athletes/${this.props.match.params.EventID}/`, {\n      headers: new Headers({\n        Authorization: TOKEN\n      })\n    });\n    const data = await API_CALL.json();\n    try {\n      localStorage.setItem(`athleteList${this.props.match.params.EventID}`, JSON.stringify(data))\n    }\n    catch{\n      localStorage.clear();\n\n    }\n    this.setState({ athleteList: data, loading: true });\n  };\n\n  closeQuestionForm()\n  {\n    localStorage.setItem(`Respondeu`, JSON.stringify(\"true\"))\n  }\n\n  checkQuestionForm()\n  {\n    { if(localStorage.getItem(\"Respondeu\"))\n    {\n      return(<div></div>)\n    }\n    else\n    {\n      return(\n        <div class=\"alert alert-info alert-dismissible\">\n        <button type=\"button\" class=\"close\" onClick={this.closeQuestionForm} data-dismiss=\"alert\" aria-hidden=\"true\">×</button>\n        <h4><i class=\"icon fa fa-info\"></i> A Sua opinião é importante!</h4>\n        Pedimos 1 minuto do seu tempo para preencher um breve inquérito, <a href=\"https://forms.gle/euXhPHpULXh3TjTYA\" target=\"_blank\">clique aqui</a> \n        </div>\n      )\n    }\n\n\n    }\n\n  }\n\n\n  render() {\n    return (\n      <div>\n        <Header eventID={this.props.match.params.EventID} />\n        {/*Send the event id to the MENU, to get the competition list*/}\n        <Menu eventID={this.props.match.params.EventID} competitionID={0} />\n        {/*CONTENT*/}\n        <div>\n          {/* Content Wrapper. Contains page content */}\n          <div className=\"content-wrapper\">\n\n            {/* Content Header (Page header) */}\n            <section className=\"content-header\">\n\n            </section>\n            {/* Main content */}\n            {/*Check if data is loading*/}\n            {(() => {\n              if (this.state.loading === false) {\n                return (\n                  <section className=\"content\">\n                    <div className=\"row\">\n                      <div className=\"col-xs-12\">\n                        <div className=\"box\">\n                          {/* /.box-body */}\n                          <div className=\"box-body\" style={{ display: 'flex', justifyContent: 'center' }}>\n                            <Loader />\n                          </div>\n\n                        </div>\n                      </div>\n                    </div>\n                  </section>\n                )\n              }\n              else {\n                return (\n                  <section className=\"content\">\n                      {this.checkQuestionForm()}\n                    <div className=\"row\">\n                      {/* widget for the number of participants */}\n                      <WidgetNumberParticipants athleteList={this.state.athleteList} />\n                      {/* widget for the number of Teams */}\n                      <WidgetNumberteams athleteList={this.state.athleteList} />\n                      {/* widget for the number of Categories */}\n                      <WidgetNumberCategories athleteList={this.state.athleteList} />\n                      {/* widget for the number of Nacionalities */}\n                      <WidgetNumberNacionalities athleteList={this.state.athleteList} />\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col-xs-12\">\n                        <div className=\"box\">\n                          {/* /.box-body */}\n                          <div className=\"box box-primary\"></div>\n                          <div style={{ width: 100 + '%!important' }}>\n                            <TableSubscribers\n                              athleteList={this.state.athleteList}\n                              loading={this.state.loading}\n                              eventID={this.props.match.params.EventID}\n                              competitionID={0}\n                            />\n                          </div>\n                          {/* Table for the list of participants */}\n\n\n                        </div>\n                      </div>\n                      {/* /.col */}\n                    </div>\n                    {/* /.row */}\n\n                  </section>\n\n\n                )\n              }\n            })()}\n          </div>\n          {/* /.content-wrapper */}\n        </div>\n        <Footer eventID={this.props.match.params.EventID} />\n      </div>\n    );\n  }\n\n}\n","import React, { Component } from \"react\";\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\nimport { Link } from \"react-router-dom\";\nimport Favorites from \"../favorites/favoritesChecker\"\nimport { FormattedMessage } from 'react-intl';\nimport { calculatePagination } from \"../Scripts/PaginationHelper\"\nimport { minimalSize } from \"../Scripts/PaginationHelper\"\n\nvar size = window.innerWidth;\n\n\nexport default class TableGiveUP extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: this.props.loading\n    };\n  }\n  CheckSize() {\n    if (size > 800) {\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n  render() {\n    //Info for the filters\n    //get the category\n    let category = this.props.athleteList.map(athelete => {\n      return athelete.escalao;\n    });\n    //remove duplicates\n    const Tableuniquecategory = [...new Set(category.sort())];\n    //get the nacionality\n    let nacionality = this.props.athleteList.map(athelete => {\n      return athelete.country;\n    });\n    //remove duplicates\n    const Tableuniquenacionality = [...new Set(nacionality.sort())];\n    //get the Local\n    let local = this.props.athleteList.map(athelete => {\n      return athelete.local;\n    });\n    //remove duplicates\n    const Tableuniquelocal = [...new Set(local.sort())];\n    //get the Club\n    let club = this.props.athleteList.map(athelete => {\n      return athelete.club;\n    });\n    //remove duplicates\n    const Tableuniqueclub = [...new Set(club.sort())];\n    //Table\n    const columns = [\n      {\n        Header: \"Id\",\n        accessor: \"athlete_id\",\n        sortable: false,\n        style: {\n          textAlign: \"Center\"\n        },\n        width: 100,\n        maxWidth: 100,\n        mimWidth: 100,\n        show: false\n      },\n      {\n        Header: (size>800)? <FormattedMessage id=\"DORSAL\" />:\"PTL\",\n        id: \"peitoral\",\n        accessor: d => Number(d.peitoral),\n        style: {\n          textAlign: \"Center\"\n        },\n        width:(size>800)?100:90,\n        Filter: ({ filter, onChange }) => (\n          <FormattedMessage id=\"SEARCH\" >\n          {txt => <input\n             onChange={event => onChange(event.target.value)}\n             value={filter ? filter.value : \"\"}\n             placeholder={txt}\n             style={{\n               width: \"100%\",\n               textAlign: \"Center\"\n             }}\n           />}\n           </FormattedMessage>\n        ),\n        Cell: row => (\n\n          <Link\n            to={{ pathname: `/AthleteDetail/${this.props.eventID}/${this.props.competitionID}/${row.original.athlete_id}` }}\n          >\n            <span style={{ color: \"#3c8dbc\" }}>{row.value} </span>\n          </Link>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"NAME\" />,\n        accessor: \"name\",\n        width:(size>800)?300:175,\n        style: {\n          textAlign: \"Center\"\n        },\n        Filter: ({ filter, onChange }) => (\n          <FormattedMessage id=\"SEARCH\" >\n          {txt => <input\n             onChange={event => onChange(event.target.value)}\n             value={filter ? filter.value : \"\"}\n             placeholder={txt}\n             style={{\n               width: \"100%\",\n               textAlign: \"Center\"\n             }}\n           />}\n           </FormattedMessage>\n        ),\n        Cell: row => (\n\n          <Link\n            to={{ pathname: `/AthleteDetail/${this.props.eventID}/${this.props.competitionID}/${row.original.athlete_id}` }}\n          >\n            <span style={{ color: \"#3c8dbc\" }}>{row.value} </span>\n          </Link>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"TEAM\" />,\n        accessor: \"club\",\n        show : this.CheckSize(),\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => row.value,\n        filterMethod: (filter, row) => {\n          if (filter.value === \"\") {\n            return true;\n          }\n\n          if (Tableuniqueclub.includes(filter.value)) {\n            return row[filter.id] === filter.value;\n          } else {\n            return true;\n          }\n        },\n        Filter: ({ filter, onChange }) => (\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\",textAlignLast:\"center\" }}\n            value={filter ? filter.value : \"all\"}\n          >\n             <FormattedMessage id=\"ALL\">\n              {txt => <option value=\"all\">{txt}</option>}\n            </FormattedMessage>\n            {Tableuniqueclub.map(k => {\n              return (\n                <option key={k.toString()} value={k}>\n                  {k}\n                </option>\n              );\n            })}\n          </select>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"CATEGORY\" />,\n        accessor: \"escalao\",\n        width:(size>800)?150:100,\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => row.value,\n        filterMethod: (filter, row) => {\n          if (filter.value === \"\") {\n            return true;\n          }\n\n          if (Tableuniquecategory.includes(filter.value)) {\n            return row[filter.id] === filter.value;\n          } else {\n            return true;\n          }\n        },\n        Filter: ({ filter, onChange }) => (\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\",textAlignLast:\"center\" }}\n            value={filter ? filter.value : \"all\"}\n          >\n            <FormattedMessage id=\"ALL\">\n              {txt => <option value=\"all\">{txt}</option>}\n            </FormattedMessage>\n            {Tableuniquecategory.map(k => {\n              return (\n                <option key={k.toString()} value={k}>\n                  {k}\n                </option>\n              );\n            })}\n          </select>\n        )\n      },\n\n      {\n        Header: <FormattedMessage id=\"COUNTRY\" />,\n        accessor: \"country\",\n        width:150,\n        show : this.CheckSize(),\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => row.value,\n        filterMethod: (filter, row) => {\n          if (filter.value === \"\") {\n            return true;\n          }\n\n          if (Tableuniquenacionality.includes(filter.value)) {\n            return row[filter.id] === filter.value;\n          } else {\n            return true;\n          }\n        },\n        Filter: ({ filter, onChange }) => (\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\",textAlignLast:\"center\" }}\n            value={filter ? filter.value : \"all\"}\n          >\n           <FormattedMessage id=\"ALL\">\n              {txt => <option value=\"all\">{txt}</option>}\n            </FormattedMessage>\n            {Tableuniquenacionality.map(k => {\n              return (\n                <option key={k.toString()} value={k}>\n                  {k}\n                </option>\n              );\n            })}\n          </select>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"PLACE\" />,\n        accessor: \"local\",\n        width:(size>800)?150:100,\n\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => row.value,\n        filterMethod: (filter, row) => {\n          if (filter.value === \"\") {\n            return true;\n          }\n\n          if (Tableuniquelocal.includes(filter.value)) {\n            return row[filter.id] === filter.value;\n          } else {\n            return true;\n          }\n        },\n        Filter: ({ filter, onChange }) => (\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\",textAlignLast:\"center\" }}\n            value={filter ? filter.value : \"all\"}\n          >\n            <option value=\"all\">Todos</option>\n            {Tableuniquelocal.map(k => {\n              return (\n                <option key={k.toString()} value={k}>\n                  {k}\n                </option>\n              );\n            })}\n          </select>\n        )\n      },\n\n      {\n        Header: (size>800)? <FormattedMessage id=\"FAVORITE\" />:\"FAV\",\n        width:(size>800)?100:50,\n\n        filterable: false,\n        sortable: false,\n\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => (\n          <Favorites ListaFavoritos={row.original.athlete_id} />\n\n        )\n      }\n    ];\n\n    return (\n      <ReactTable\n        defaultSorted={[\n          {\n            id: \"peitoral\",\n            desc: false\n          }\n        ]}\n        previousText={<FormattedMessage id=\"PREVIOUS\" />}\n        nextText={<FormattedMessage id=\"NEXT\" />}\n        columns={columns}\n        data={this.props.athleteList}\n        filterable\n        noDataText={<FormattedMessage id=\"NODATA\" />}\n        defaultPageSize={minimalSize(this.props.athleteList.length,4)}\n        pageSizeOptions={calculatePagination(this.props.athleteList.length, 4)}\n        showPaginationTop={false}\n        showPaginationBottom={true}\n        showPageSizeOptions={true}\n        showPageJump={true}\n        collapseOnSortingChange={true}\n        collapseOnPageChange={true}\n        collapseOnDataChange={true}\n        freezeWhenExpanded={false}\n        sortable={true}\n        multiSort={true}\n        resizable={true}\n        defaultSortDesc={false}\n        pageText={<FormattedMessage id=\"PAGE\" />}\n        rowsText={\"\"}\n        className=\"-striped -highlight\"\n\n      />\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\nimport { Link } from \"react-router-dom\";\nimport Favorites from \"../favorites/favoritesChecker\"\nimport { FormattedMessage } from 'react-intl';\nimport { calculatePagination } from \"../Scripts/PaginationHelper\"\nimport { minimalSize } from \"../Scripts/PaginationHelper\"\n\nvar size = window.innerWidth;\n\n\nexport default class TableDisqualified extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: this.props.loading\n    };\n  }\n  CheckSize() {\n    if (size > 800) {\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n  render() {\n    //Info for the filters\n    //get the category\n    let category = this.props.athleteList.map(athelete => {\n      return athelete.escalao;\n    });\n    //remove duplicates\n    const Tableuniquecategory = [...new Set(category.sort())];\n    //get the nacionality\n    let nacionality = this.props.athleteList.map(athelete => {\n      return athelete.country;\n    });\n    //remove duplicates\n    const Tableuniquenacionality = [...new Set(nacionality.sort())];\n    //get the Local\n    let local = this.props.athleteList.map(athelete => {\n      return athelete.local;\n    });\n    //remove duplicates\n    const Tableuniquelocal = [...new Set(local.sort())];\n    //get the Club\n    let club = this.props.athleteList.map(athelete => {\n      return athelete.club;\n    });\n    //remove duplicates\n    const Tableuniqueclub = [...new Set(club.sort())];\n    //Table\n    const columns = [\n      {\n        Header: \"Id\",\n        accessor: \"athlete_id\",\n        sortable: false,\n        style: {\n          textAlign: \"Center\"\n        },\n        width: 100,\n        maxWidth: 100,\n        mimWidth: 100,\n        show: false\n      },\n      {\n        Header: (size>800)? <FormattedMessage id=\"DORSAL\" />:\"PTL\",\n        id: \"peitoral\",\n        accessor: d => Number(d.peitoral),\n        style: {\n          textAlign: \"Center\"\n        },\n        width:(size>800)?100:90,\n        Filter: ({ filter, onChange }) => (\n          <FormattedMessage id=\"SEARCH\" >\n          {txt => <input\n             onChange={event => onChange(event.target.value)}\n             value={filter ? filter.value : \"\"}\n             placeholder={txt}\n             style={{\n               width: \"100%\",\n               textAlign: \"Center\"\n             }}\n           />}\n           </FormattedMessage>\n        ),\n        Cell: row => (\n\n          <Link\n            to={{ pathname: `/AthleteDetail/${this.props.eventID}/${this.props.competitionID}/${row.original.athlete_id}` }}\n          >\n            <span style={{ color: \"#3c8dbc\" }}>{row.value} </span>\n          </Link>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"NAME\" />,\n        accessor: \"name\",\n        width:(size>800)?300:175,\n        style: {\n          textAlign: \"Center\"\n        },\n        Filter: ({ filter, onChange }) => (\n          <FormattedMessage id=\"SEARCH\" >\n          {txt => <input\n             onChange={event => onChange(event.target.value)}\n             value={filter ? filter.value : \"\"}\n             placeholder={txt}\n             style={{\n               width: \"100%\",\n               textAlign: \"Center\"\n             }}\n           />}\n           </FormattedMessage>\n        ),\n        Cell: row => (\n\n          <Link\n            to={{ pathname: `/AthleteDetail/${this.props.eventID}/${this.props.competitionID}/${row.original.athlete_id}` }}\n          >\n            <span style={{ color: \"#3c8dbc\" }}>{row.value} </span>\n          </Link>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"TEAM\" />,\n        accessor: \"club\",\n        show : this.CheckSize(),\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => row.value,\n        filterMethod: (filter, row) => {\n          if (filter.value === \"\") {\n            return true;\n          }\n\n          if (Tableuniqueclub.includes(filter.value)) {\n            return row[filter.id] === filter.value;\n          } else {\n            return true;\n          }\n        },\n        Filter: ({ filter, onChange }) => (\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\",textAlignLast:\"center\" }}\n            value={filter ? filter.value : \"all\"}\n          >\n             <FormattedMessage id=\"ALL\">\n              {txt => <option value=\"all\">{txt}</option>}\n            </FormattedMessage>\n            {Tableuniqueclub.map(k => {\n              return (\n                <option key={k.toString()} value={k}>\n                  {k}\n                </option>\n              );\n            })}\n          </select>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"CATEGORY\" />,\n        accessor: \"escalao\",\n        width:(size>800)?150:100,\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => row.value,\n        filterMethod: (filter, row) => {\n          if (filter.value === \"\") {\n            return true;\n          }\n\n          if (Tableuniquecategory.includes(filter.value)) {\n            return row[filter.id] === filter.value;\n          } else {\n            return true;\n          }\n        },\n        Filter: ({ filter, onChange }) => (\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\",textAlignLast:\"center\" }}\n            value={filter ? filter.value : \"all\"}\n          >\n            <FormattedMessage id=\"ALL\">\n              {txt => <option value=\"all\">{txt}</option>}\n            </FormattedMessage>\n            {Tableuniquecategory.map(k => {\n              return (\n                <option key={k.toString()} value={k}>\n                  {k}\n                </option>\n              );\n            })}\n          </select>\n        )\n      },\n\n      {\n        Header: <FormattedMessage id=\"COUNTRY\" />,\n        accessor: \"country\",\n        width:150,\n        show : this.CheckSize(),\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => row.value,\n        filterMethod: (filter, row) => {\n          if (filter.value === \"\") {\n            return true;\n          }\n\n          if (Tableuniquenacionality.includes(filter.value)) {\n            return row[filter.id] === filter.value;\n          } else {\n            return true;\n          }\n        },\n        Filter: ({ filter, onChange }) => (\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\",textAlignLast:\"center\" }}\n            value={filter ? filter.value : \"all\"}\n          >\n           <FormattedMessage id=\"ALL\">\n              {txt => <option value=\"all\">{txt}</option>}\n            </FormattedMessage>\n            {Tableuniquenacionality.map(k => {\n              return (\n                <option key={k.toString()} value={k}>\n                  {k}\n                </option>\n              );\n            })}\n          </select>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"PLACE\" />,\n        accessor: \"local\",\n        width:(size>800)?150:100,\n\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => row.value,\n        filterMethod: (filter, row) => {\n          if (filter.value === \"\") {\n            return true;\n          }\n\n          if (Tableuniquelocal.includes(filter.value)) {\n            return row[filter.id] === filter.value;\n          } else {\n            return true;\n          }\n        },\n        Filter: ({ filter, onChange }) => (\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\",textAlignLast:\"center\" }}\n            value={filter ? filter.value : \"all\"}\n          >\n            <option value=\"all\">Todos</option>\n            {Tableuniquelocal.map(k => {\n              return (\n                <option key={k.toString()} value={k}>\n                  {k}\n                </option>\n              );\n            })}\n          </select>\n        )\n      },\n\n      {\n        Header: (size>800)? <FormattedMessage id=\"FAVORITE\" />:\"FAV\",\n        width:(size>800)?100:50,\n\n        filterable: false,\n        sortable: false,\n\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => (\n          <Favorites ListaFavoritos={row.original.athlete_id} />\n\n        )\n      }\n    ];\n\n    return (\n      <ReactTable\n        defaultSorted={[\n          {\n            id: \"peitoral\",\n            desc: false\n          }\n        ]}\n        previousText={<FormattedMessage id=\"PREVIOUS\" />}\n        nextText={<FormattedMessage id=\"NEXT\" />}\n        columns={columns}\n        data={this.props.athleteList}\n        filterable\n        noDataText={<FormattedMessage id=\"NODATA\" />}\n        defaultPageSize={minimalSize(this.props.athleteList.length,4)}\n        pageSizeOptions={calculatePagination(this.props.athleteList.length, 4)}\n        showPaginationTop={false}\n        showPaginationBottom={true}\n        showPageSizeOptions={true}\n        showPageJump={true}\n        collapseOnSortingChange={true}\n        collapseOnPageChange={true}\n        collapseOnDataChange={true}\n        freezeWhenExpanded={false}\n        sortable={true}\n        multiSort={true}\n        resizable={true}\n        defaultSortDesc={false}\n        pageText={<FormattedMessage id=\"PAGE\" />}\n        rowsText={\"\"}\n        className=\"-striped -highlight\"\n\n      />\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Header from \"../structure/Header\";\nimport Footer from \"../structure/Footer\";\nimport Menu from \"../structure/Menu\";\nimport TableGiveUp from \"../Tables/TableGiveUp\";\nimport TableDisqualified from \"../Tables/TableDisqualified\";\nimport WidgetNumberParticipants from \"../Widgets/NumberParticipants\"\nimport Loader from \"../Loader/Loader\";\nimport WidgetNumberNacionalities from \"../Widgets/NumberNationalities\";\nimport { FormattedMessage } from 'react-intl';\n\n\nconst API_KEY = `${process.env.REACT_APP_API_TRAIL_KEY}`;\nconst API_URL = `${process.env.REACT_APP_API_TRAIL_URL}`;\nconst TOKEN = API_KEY;\nexport default class EventSubscribers extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      atheleGiveUPList: [],\n      atheleDisqualifiedList: [],\n      loadingGiveUP: false,\n      loadingDisqualified: false,\n    };\n\n\n  }\n\n  componentWillMount() {\n    if (JSON.parse(localStorage.getItem(`atheleGiveUPList${this.props.match.params.EventID}${this.props.match.params.CompID}`)) && JSON.parse(localStorage.getItem(`atheleDisqualifiedList${this.props.match.params.EventID}${this.props.match.params.CompID}`))) {\n      const atheleGiveUPList = JSON.parse(localStorage.getItem(`atheleGiveUPList${this.props.match.params.EventID}${this.props.match.params.CompID}`))\n      const atheleDisqualifiedList = JSON.parse(localStorage.getItem(`atheleDisqualifiedList${this.props.match.params.EventID}${this.props.match.params.CompID}`))\n      this.setState({ atheleGiveUPList: atheleGiveUPList, atheleDisqualifiedList: atheleDisqualifiedList, loadingGiveUP: true, loadingDisqualified: true })\n    }\n    this.getAthletesGiveUPList = this.getAthletesGiveUPList.bind(this);\n    this.getAthletesDisqualifiedList = this.getAthletesDisqualifiedList.bind(this);\n    this.getAthletesGiveUPList();\n    this.getAthletesDisqualifiedList();\n  }\n\n  /*when props change*/\n  componentDidUpdate(prevProps) {\n    if (prevProps.match.params.CompID !== this.props.match.params.CompID) {\n      this.setState({ loadingGiveUP: false, loadingDisqualified: false })\n      try {\n        if (JSON.parse(localStorage.getItem(`atheleGiveUPList${this.props.match.params.EventID}${this.props.match.params.CompID}`)) && JSON.parse(localStorage.getItem(`atheleDisqualifiedList${this.props.match.params.EventID}${this.props.match.params.CompID}`))) {\n          const atheleGiveUPList = JSON.parse(localStorage.getItem(`atheleGiveUPList${this.props.match.params.EventID}${this.props.match.params.CompID}`))\n          const atheleDisqualifiedList = JSON.parse(localStorage.getItem(`atheleDisqualifiedList${this.props.match.params.EventID}${this.props.match.params.CompID}`))\n          this.setState({ atheleGiveUPList: atheleGiveUPList, atheleDisqualifiedList: atheleDisqualifiedList, loadingGiveUP: true, loadingDisqualified: true })\n        }\n      }\n      catch{\n        localStorage.clear();\n\n      }\n      this.getAthletesGiveUPList();\n      this.getAthletesDisqualifiedList();\n    }\n  }\n\n  /*Get giveup athletes*/\n  getAthletesGiveUPList = async e => {\n    const API_CALL = await fetch(`${API_URL}/competition/AthsGiveup/${this.props.match.params.CompID}/`, {\n      headers: new Headers({\n        Authorization: TOKEN\n      })\n    });\n    const data = await API_CALL.json();\n    try {\n      localStorage.setItem(`atheleGiveUPList${this.props.match.params.EventID}${this.props.match.params.CompID}`, JSON.stringify(data))\n    }\n    catch{\n      localStorage.clear();\n\n    }\n    this.setState({ atheleGiveUPList: data, loadingGiveUP: true });\n  };\n\n  /*Get disqualified list athletes*/\n  getAthletesDisqualifiedList = async e => {\n\n    const API_CALL = await fetch(`${API_URL}/competition/AthDisqualified/${this.props.match.params.CompID}/`, {\n      headers: new Headers({\n        Authorization: TOKEN\n      })\n    });\n    const data = await API_CALL.json();\n    try {\n      localStorage.setItem(`atheleDisqualifiedList${this.props.match.params.EventID}${this.props.match.params.CompID}`, JSON.stringify(data))\n    }\n    catch{\n      localStorage.clear();\n\n    }\n    this.setState({ atheleDisqualifiedList: data, loadingDisqualified: true });\n\n  };\n\n\n  render() {\n    return (\n      <div>\n        <Header eventID={this.props.match.params.EventID} />\n        {/*Send the event id to the MENU, to get the competition list*/}\n        <Menu eventID={this.props.match.params.EventID} competitionID={this.props.match.params.CompID} />\n        {/*CONTENT*/}\n        <div>\n          {/* Content Wrapper. Contains page content */}\n          <div className=\"content-wrapper\">\n            {/* Content Header (Page header) */}\n            <section className=\"content-header\">\n              <h1>\n                <span >{this.props.match.params.CompName}</span>\n                <span style={{ float: \"right\" }}>< FormattedMessage id=\"QUIT\" /></span>\n              </h1>\n            </section>\n            {/* Main content */}\n            {/*Check if data is loading*/}\n            {(() => {\n              if (this.state.loadingGiveUP === false) {\n                return (\n                  <section className=\"content\">\n                    <div className=\"row\">\n                      <div className=\"col-xs-12\">\n                        <div className=\"box\">\n                          {/* /.box-body */}\n                          <div className=\"box-body\" style={{ display: 'flex', justifyContent: 'center' }}>\n                            <Loader />\n                          </div>\n\n                        </div>\n                      </div>\n                    </div>\n                  </section>\n                )\n              }\n              else {\n                return (\n                  <section className=\"content\">\n                    <div className=\"row\">\n                      {/* widget for the number of participants */}\n                      <WidgetNumberParticipants athleteList={this.state.atheleGiveUPList} />\n                      <WidgetNumberNacionalities giveup={true} athleteList={this.state.atheleGiveUPList} />\n\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col-xs-12\">\n                        <div className=\"box\">\n                          {/* /.box-body */}\n                          <div className=\"box box-primary\"></div>\n                          <TableGiveUp\n                            eventID={this.props.match.params.EventID}\n                            competitionID={this.props.match.params.CompID}\n                            athleteList={this.state.atheleGiveUPList}\n                            loading={this.state.loading}\n                          />\n                        </div>\n                      </div>\n                      {/* /.col */}\n                    </div>\n                    {/* /.row */}\n                  </section>\n                )\n              }\n            })()}\n            <section className=\"content-header\">\n              <h1>\n                {/*<span >{this.props.match.params.CompName}</span> */}\n                <span style={{ float: \"right\" }}>< FormattedMessage id=\"DISUALIFIED\" /></span>\n              </h1>\n            </section>\n            {/*Check if data is loading*/}\n            {(() => {\n              if (this.state.loadingDisqualified === false) {\n                return (\n                  <section className=\"content\">\n                    <div className=\"row\">\n                      <div className=\"col-xs-12\">\n                        <div className=\"box\">\n                          {/* /.box-body */}\n                          <div className=\"box-body\" style={{ display: 'flex', justifyContent: 'center' }}>\n                            <Loader />\n                          </div>\n\n                        </div>\n                      </div>\n                    </div>\n                  </section>\n                )\n              }\n              else {\n                return (\n                  <section className=\"content\">\n                    <div className=\"row\">\n                      {/* widget for the number of participants */}\n                      <WidgetNumberParticipants athleteList={this.state.atheleDisqualifiedList} />\n                      <WidgetNumberNacionalities giveup={true} athleteList={this.state.atheleDisqualifiedList} />\n\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col-xs-12\">\n                        <div className=\"box\">\n                          {/* /.box-body */}\n                          <div className=\"box box-primary\"></div>\n                          <TableDisqualified\n                            eventID={this.props.match.params.EventID}\n                            competitionID={this.props.match.params.CompID}\n                            athleteList={this.state.atheleDisqualifiedList}\n                            loading={this.state.loading}\n                          />\n                        </div>\n                      </div>\n                      {/* /.col */}\n                    </div>\n                    {/* /.row */}\n                  </section>\n                )\n              }\n            })()}\n\n          </div>\n          {/* /.content-wrapper */}\n        </div>\n        <Footer eventID={this.props.match.params.EventID} />\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\nimport { Link } from \"react-router-dom\";\nimport Favorites from \"../favorites/favoritesChecker\"\nimport { FormattedMessage } from 'react-intl';\nimport { calculatePagination } from \"../Scripts/PaginationHelper\"\nimport { minimalSize } from \"../Scripts/PaginationHelper\"\n\n\nvar size = window.innerWidth;\n\n\nexport default class TableSubscribers extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: this.props.loading\n    };\n  }\n\n  CheckSize() {\n    if (size > 800) {\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n\n  addFavorites() {\n    localStorage.setItem(\"ListaFavoritos\", this.props.ListaFavoritos)\n  }\n  render() {\n    //Info for the filters\n    //get the category\n    let category = this.props.athleteList.map(athelete => {\n      return athelete.category;\n    });\n    //remove duplicates\n    const Tableuniquecategory = [...new Set(category.sort())];\n    //get the nacionality\n    let nacionality = this.props.athleteList.map(athelete => {\n      return athelete.athlete.nacionality;\n    });\n    //remove duplicates\n    const Tableuniquenacionality = [...new Set(nacionality.sort())];\n    //get the Club\n    let club = this.props.athleteList.map(athelete => {\n      return athelete.club;\n    });\n    //remove duplicates\n    const Tableuniqueclub = [...new Set(club.sort())];\n    //get the inscription_status_code\n    let inscription_status_code = this.props.athleteList.map(athelete => {\n      return athelete.inscription_status_code;\n    });\n    //remove duplicates\n    const Tableuniqueinscription_status_code = [\n      ...new Set(inscription_status_code.sort())\n    ];\n\n    //Table\n    const columns = [\n      {\n        Header: \"Id\",\n        accessor: \"athlete.athlete_id\",\n        sortable: false,\n        style: {\n          textAlign: \"Center\"\n        },\n        width: 100,\n        maxWidth: 100,\n        mimWidth: 100,\n        show: false\n      },\n      {\n        Header: (size > 800) ? <FormattedMessage id=\"DORSAL\" /> : \"PTL\",\n        id: \"dorsal_number\",\n        accessor: d => Number(d.dorsal_number),\n        style: {\n          textAlign: \"Center\"\n        },\n        width: (size > 800) ? 100 : 60,\n        Filter: ({ filter, onChange }) => (\n          <FormattedMessage id=\"SEARCH\" >\n            {txt => <input\n              onChange={event => onChange(event.target.value)}\n              value={filter ? filter.value : \"\"}\n              placeholder={txt}\n              style={{\n                width: \"100%\",\n                textAlign: \"Center\"\n              }}\n            />}\n          </FormattedMessage>\n        ),\n        Cell: row => (\n\n          <Link\n            to={{ pathname: `/AthleteDetail/${this.props.eventID}/${this.props.competitionID}/${row.original.athlete.athlete_id}` }}\n          >\n            <span style={{ color: \"#3c8dbc\" }}>{row.value} </span>\n          </Link>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"NAME\" />,\n        accessor: \"athlete.name\",\n        style: {\n          textAlign: \"Center\"\n        },\n        Filter: ({ filter, onChange }) => (\n          <FormattedMessage id=\"SEARCH\" >\n            {txt => <input\n              onChange={event => onChange(event.target.value)}\n              value={filter ? filter.value : \"\"}\n              placeholder={txt}\n              style={{\n                width: \"100%\",\n                textAlign: \"Center\"\n              }}\n            />}\n          </FormattedMessage>\n        ),\n        Cell: row => (\n\n          <Link\n            to={{ pathname: `/AthleteDetail/${this.props.eventID}/${this.props.competitionID}/${row.original.athlete.athlete_id}` }}\n          >\n            <span style={{ color: \"#3c8dbc\" }}>{row.value} </span>\n          </Link>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"TEAM\" />,\n        show: this.CheckSize(),\n\n        accessor: \"club\",\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => row.value,\n        filterMethod: (filter, row) => {\n          if (filter.value === \"\") {\n            return true;\n          }\n\n          if (Tableuniqueclub.includes(filter.value)) {\n            return row[filter.id] === filter.value;\n          } else {\n            return true;\n          }\n        },\n        Filter: ({ filter, onChange }) => (\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\", textAlignLast: \"center\" }}\n            value={filter ? filter.value : \"all\"}\n          >\n            <FormattedMessage id=\"ALL\">\n              {txt => <option value=\"all\">{txt}</option>}\n            </FormattedMessage>\n            {Tableuniqueclub.map(k => {\n              return (\n                <option key={k.toString()} value={k}>\n                  {k}\n                </option>\n              );\n            })}\n          </select>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"CATEGORY\" />,\n        accessor: \"category\",\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => row.value,\n        filterMethod: (filter, row) => {\n          if (filter.value === \"\") {\n            return true;\n          }\n\n          if (Tableuniquecategory.includes(filter.value)) {\n            return row[filter.id] === filter.value;\n          } else {\n            return true;\n          }\n        },\n        Filter: ({ filter, onChange }) => (\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\", textAlignLast: \"center\" }}\n            value={filter ? filter.value : \"all\"}\n          >\n            <FormattedMessage id=\"ALL\">\n              {txt => <option value=\"all\">{txt}</option>}\n            </FormattedMessage>\n            {Tableuniquecategory.map(k => {\n              return (\n                <option key={k.toString()} value={k}>\n                  {k}\n                </option>\n              );\n            })}\n          </select>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"COUNTRY\" />,\n        show: this.CheckSize(),\n\n        accessor: \"athlete.nacionality\",\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => row.value,\n        filterMethod: (filter, row) => {\n          if (filter.value === \"\") {\n            return true;\n          }\n\n          if (Tableuniquenacionality.includes(filter.value)) {\n            return row[filter.id] === filter.value;\n          } else {\n            return true;\n          }\n        },\n        Filter: ({ filter, onChange }) => (\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\", textAlignLast: \"center\" }}\n            value={filter ? filter.value : \"all\"}\n          >\n             <FormattedMessage id=\"ALL\">\n              {txt => <option value=\"all\">{txt}</option>}\n            </FormattedMessage>\n            {Tableuniquenacionality.map(k => {\n              return (\n                <option key={k.toString()} value={k}>\n                  {k}\n                </option>\n              );\n            })}\n          </select>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"STATUS\" />,\n        accessor: \"inscription_status_code\",\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => {\n                    if (row.value === \"I\") {\n            return <FormattedMessage id=\"I\" />;\n          } else if (row.value === \"CI\") {\n            return <FormattedMessage id=\"CI\" />;\n          } else if (row.value === \"AN\") {\n            return <FormattedMessage id=\"AN\" />;\n          } else if (row.value === \"D\") {\n            return <FormattedMessage id=\"D\" />;\n          } else if (row.value === \"PND\") {\n            return <FormattedMessage id=\"PND\" />;\n          } else if (row.value === \"DNS\") {\n            return <FormattedMessage id=\"DNS\" />;\n          }else if (row.value === \"EP\") {\n            return <FormattedMessage id=\"EP\" />;\n          }else if (row.value === \"DNF\") {\n            return <FormattedMessage id=\"DNF\" />;\n          }else if (row.value === \"DSQ\") {\n            return <FormattedMessage id=\"DSQ\" />;\n          }else if (row.value === \"EV\") {\n            return <FormattedMessage id=\"EV\" />;\n          }else if (row.value === \"FIN\") {\n            return <FormattedMessage id=\"FIN\" />;\n          }else if (row.value === \"GAP\") {\n            return <FormattedMessage id=\"GAP\" />;\n          }else\n          { return \"\"}\n        },\n        filterMethod: (filter, row) => {\n          if (filter.value === \"\") {\n            return true;\n          }\n\n          if (Tableuniqueinscription_status_code.includes(filter.value)) {\n            return row[filter.id] === filter.value;\n          } else {\n            return true;\n          }\n        },\n        Filter: ({ filter, onChange }) => (\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\", textAlignLast: \"center\" }}\n            value={filter ? filter.value : \"all\"}\n          >\n            <FormattedMessage id=\"ALL\">\n              {txt => <option value=\"all\">{txt}</option>}\n            </FormattedMessage>\n            {Tableuniqueinscription_status_code.map(k => {\n              return (\n                <FormattedMessage id={k.toString()}>\n                  {txt => <option key={k.toString()} value={k}>{txt}</option>}\n                </FormattedMessage>\n              );\n            })}\n          </select>\n        )\n      },\n      {\n        Header: (size > 800) ? <FormattedMessage id=\"FAVORITE\" /> : \"FAV\",\n        filterable: false,\n        sortable: false,\n        width: (size > 800) ? 100 : 50,\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => (\n          <Favorites ListaFavoritos={row.original.athlete.athlete_id} />\n        )\n      }\n    ];\n    return (\n      <ReactTable\n        defaultSorted={[\n          {\n            id: \"dorsal_number\",\n            desc: false\n          }\n        ]}\n        previousText={<FormattedMessage id=\"PREVIOUS\" />}\n        nextText={<FormattedMessage id=\"NEXT\" />}\n        columns={columns}\n        data={this.props.athleteList}\n        filterable\n        noDataText={<FormattedMessage id=\"NODATA\" />}\n        defaultPageSize={minimalSize(this.props.athleteList.length,20)}\n        pageSizeOptions={calculatePagination(this.props.athleteList.length, 20)}\n        showPagination={true}\n        showPaginationTop={false}\n        showPaginationBottom={true}\n        showPageSizeOptions={true}\n        showPageJump={true}\n        collapseOnSortingChange={true}\n        collapseOnPageChange={true}\n        collapseOnDataChange={true}\n        freezeWhenExpanded={false}\n        sortable={true}\n        multiSort={true}\n        resizable={true}\n        pageText={<FormattedMessage id=\"PAGE\" />}\n        defaultSortDesc={false}\n        rowsText={\"\"}\n        className=\"-striped -highlight\"\n\n      />\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Header from \"../structure/Header\";\nimport Footer from \"../structure/Footer\";\nimport Menu from \"../structure/Menu\";\nimport TableSubscribersCompetition from \"../Tables/TableParticipantsCompetition\";\nimport WidgetNumberParticipants from \"../Widgets/NumberParticipants\";\nimport WidgetNumberCategories from \"../Widgets/NumberCategories\";\nimport WidgetNumberteams from \"../Widgets/NumberTeams\";\nimport WidgetNumberNacionalities from \"../Widgets/NumberNationalities\";\nimport Loader from \"../Loader/Loader\";\n\nconst API_KEY = `${process.env.REACT_APP_API_TRAIL_KEY}`;\nconst API_URL = `${process.env.REACT_APP_API_TRAIL_URL}`;\nconst TOKEN = API_KEY;\n\nexport default class EventSubscribers extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      athleteList: [],\n      loading: false,\n    };\n  }\n  componentWillMount() {\n    try {\n      if (localStorage.getItem(`athleteList${this.props.match.params.EventID}${this.props.match.params.CompID}`)) {\n        const athList = JSON.parse(localStorage.getItem(`athleteList${this.props.match.params.EventID}${this.props.match.params.CompID}`))\n        this.setState({ athleteList: athList, loading: true })\n      }\n    }\n    catch{\n      localStorage.clear();\n\n    }\n    this.getAthletsList = this.getAthletsList.bind(this);\n    this.getAthletsList();\n\n  }\n  /*when props change*/\n  componentDidUpdate(prevProps) {\n    if (prevProps.match.params.CompID !== this.props.match.params.CompID) {\n      this.setState({ loading: false });\n      try {\n        if (localStorage.getItem(`athleteList${this.props.match.params.EventID}${this.props.match.params.CompID}`)) {\n          const athList = JSON.parse(localStorage.getItem(`athleteList${this.props.match.params.EventID}${this.props.match.params.CompID}`))\n          this.setState({ athleteList: athList, loading: true })\n        }\n      }\n      catch{\n        localStorage.clear();\n\n      }\n      this.getAthletsList();\n    }\n  }\n  /*get list of athlets*/\n  getAthletsList = async e => {\n\n    const API_CALL = await fetch(`${API_URL}/competition/AthsList/${this.props.match.params.CompID}/`, {\n      headers: new Headers({\n        Authorization: TOKEN\n      })\n    });\n    const data = await API_CALL.json();\n    try {\n      localStorage.setItem(`athleteList${this.props.match.params.EventID}${this.props.match.params.CompID}`, JSON.stringify(data))\n    }\n    catch{\n      localStorage.clear();\n\n    }\n    this.setState({ athleteList: data, loading: true });\n\n  };\n\n  render() {\n    return (\n      <div>\n        <Header eventID={this.props.match.params.EventID} />\n        <Menu eventID={this.props.match.params.EventID} competitionID={this.props.match.params.CompID} />\n        {/*Send the event id to the MENU, to get the competition list*/}\n        {/*CONTENT*/}\n        <div>\n          {/* Content Wrapper. Contains page content */}\n          <div className=\"content-wrapper\">\n            {/* Content Header (Page header) */}\n            <section className=\"content-header\">\n              <h1>\n                <span>{this.props.match.params.CompName}</span>\n              </h1>\n            </section>\n            {/* Main content */}\n            {/*Check if data is loading*/}\n            {(() => {\n              if (this.state.loading === false) {\n                return (\n                  <section className=\"content\">\n                    <div className=\"row\">\n                      <div className=\"col-xs-12\">\n                        <div className=\"box\">\n                          {/* /.box-body */}\n                          <div className=\"box-body\" style={{ display: 'flex', justifyContent: 'center' }}>\n                            <Loader />\n                          </div>\n\n                        </div>\n                      </div>\n                    </div>\n                  </section>\n                )\n              }\n              else {\n                return (\n                  <section className=\"content\">\n                    <div className=\"row\">\n                      {/* widget for the number of participants */}\n                      <WidgetNumberParticipants athleteList={this.state.athleteList} />\n                      {/* widget for the number of Teams */}\n                      <WidgetNumberteams athleteList={this.state.athleteList} />\n                      {/* widget for the number of Categories */}\n                      <WidgetNumberCategories athleteList={this.state.athleteList} />\n                      {/* widget for the number of Nacionalities */}\n                      <WidgetNumberNacionalities athleteList={this.state.athleteList} />\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col-xs-12\">\n                        <div className=\"box\">\n                          {/* /.box-body */}\n                          <div className=\"box box-primary\"></div>\n                          <TableSubscribersCompetition\n                            eventID={this.props.match.params.EventID}\n                            competitionID={this.props.match.params.CompID}\n                            athleteList={this.state.athleteList}\n                            loading={this.state.loading}\n                          />\n                        </div>\n                      </div>\n                      {/* /.col */}\n                    </div>\n                    {/* /.row */}\n                  </section>\n                )\n              }\n            })()}\n          </div>\n          {/* /.content-wrapper */}\n        </div>\n        <Footer eventID={this.props.match.params.EventID} />\n      </div>\n    );\n  }\n}\n","export function FormatTime(time) {\n    var TimeSplit = time.split(\":\")\n    var H = TimeSplit[0]\n    var M = TimeSplit[1]\n    var S = TimeSplit[2]\n    if (H.length === 1) {\n        H = \"0\" + H\n    }\n    if (M.length === 1) {\n        M = \"0\" + M\n    }\n    if (S.length === 1) {\n        S = \"0\" + S\n    }\n    return (H + \":\" + M + \":\" + S)\n}\n","import React, { Component } from \"react\";\nimport ReactTable from \"react-table\";\nimport { Link } from \"react-router-dom\";\nimport Favorites from \"../favorites/favoritesChecker\"\nimport { FormatTime } from \"../Scripts/time\"\nimport { FormattedMessage } from 'react-intl';\nimport { calculatePagination } from \"../Scripts/PaginationHelper\"\nimport { minimalSize } from \"../Scripts/PaginationHelper\"\n\n\nvar size = window.innerWidth;\n\nexport default class TableCheckpoints extends Component {\n\n  CheckSize() {\n    if (size > 800) {\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n\n  checkPosition(position) {\n    if (0 === parseInt(position)) {\n      return (\"-\")\n    }\n    else {\n      return (position)\n\n    }\n  }\n\n  render() {\n    //Info for the filters\n    //get the category\n    let category = this.props.athleteList.map(athelete => {\n      return athelete.escalao;\n    });\n    //remove duplicates\n    const Tableuniquecategory = [...new Set(category.sort())];\n    //get the nacionality\n    let nacionality = this.props.athleteList.map(athelete => {\n      return athelete.country;\n    });\n    //remove duplicates\n    const Tableuniquenacionality = [...new Set(nacionality.sort())];\n\n    //get the Club\n    let club = this.props.athleteList.map(athelete => {\n      return athelete.club;\n    });\n    //remove duplicates\n    const Tableuniqueclub = [...new Set(club.sort())];\n\n\n\n    //Table\n\n    const columns = [\n      {\n        Header: \"Id\",\n        accessor: \"athlete_id\",\n        sortable: false,\n        style: {\n          textAlign: \"Center\"\n        },\n        width: 100,\n        maxWidth: 100,\n        mimWidth: 100,\n        show: false\n      },\n      {\n        Header: (size > 800) ? <FormattedMessage id=\"POSITION\" /> : \"POS\",\n        accessor: \"PositionGlobal\",\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => (\n          <span> {this.checkPosition(row.value)} </span>\n        ),\n        width: (size > 800) ? 100 : 55,\n        Filter: ({ filter, onChange }) => (\n          <FormattedMessage id=\"SEARCH\" >\n          {txt => <input\n             onChange={event => onChange(event.target.value)}\n             value={filter ? filter.value : \"\"}\n             placeholder={txt}\n             style={{\n               width: \"100%\",\n               textAlign: \"Center\"\n             }}\n           />}\n           </FormattedMessage>\n        )\n      },\n      {\n        Header: (size > 800) ? <FormattedMessage id=\"DORSAL\" /> : \"PTL\",\n        id: \"peitoral\",\n        accessor: d => Number(d.peitoral),\n        style: {\n          textAlign: \"Center\"\n        },\n        width: (size > 800) ? 100 : 60,\n        Filter: ({ filter, onChange }) => (\n          <FormattedMessage id=\"SEARCH\" >\n         {txt => <input\n            onChange={event => onChange(event.target.value)}\n            value={filter ? filter.value : \"\"}\n            placeholder={txt}\n            style={{\n              width: \"100%\",\n              textAlign: \"Center\"\n            }}\n          />}\n          </FormattedMessage>\n        ),\n        Cell: row => (\n          <Link\n            to={{ pathname: `/AthleteDetail/${this.props.eventID}/${this.props.competitionID}/${row.original.athlete_id}` }}\n          >\n            <span style={{ color: \"#3c8dbc\" }}>{row.value} </span>\n          </Link>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"NAME\" />,\n        accessor: \"name\",\n        width: (size > 800) ? 260 : 150,\n        style: {\n          textAlign: \"Center\"\n        },\n        Filter: ({ filter, onChange }) => (\n          <FormattedMessage id=\"SEARCH\" >\n          {txt => <input\n             onChange={event => onChange(event.target.value)}\n             value={filter ? filter.value : \"\"}\n             placeholder={txt}\n             style={{\n               width: \"100%\",\n               textAlign: \"Center\"\n             }}\n           />}\n           </FormattedMessage>\n        ),\n        Cell: row => (\n          <Link\n            to={{ pathname: `/AthleteDetail/${this.props.eventID}/${this.props.competitionID}/${row.original.athlete_id}` }}\n          >\n            <span style={{ color: \"#3c8dbc\" }}>{row.value} </span>\n          </Link>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"TEAM\" />,\n        accessor: \"club\",\n        show: this.CheckSize(),\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => row.value,\n        filterMethod: (filter, row) => {\n          if (filter.value === \"\") {\n            return true;\n          }\n\n          if (Tableuniqueclub.includes(filter.value)) {\n            return row[filter.id] === filter.value;\n          } else {\n            return true;\n          }\n        },\n        Filter: ({ filter, onChange }) => (\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\", textAlignLast: \"center\" }}\n            value={filter ? filter.value : \"all\"}\n          >\n            <FormattedMessage id=\"ALL\">\n              {txt => <option value=\"all\">{txt}</option>}\n            </FormattedMessage>\n            {Tableuniqueclub.map(k => {\n              return (\n                <option key={k.toString()} value={k}>\n                  {k}\n                </option>\n              );\n            })}\n          </select>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"CATEGORY\" />,\n        accessor: \"escalao\",\n        width: (size > 800) ? 150 : 85,\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => row.value,\n        filterMethod: (filter, row) => {\n          if (filter.value === \"\") {\n            return true;\n          }\n\n          if (Tableuniquecategory.includes(filter.value)) {\n            return row[filter.id] === filter.value;\n          } else {\n            return true;\n          }\n        },\n        Filter: ({ filter, onChange }) => (\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\", textAlignLast: \"center\" }}\n            value={filter ? filter.value : \"all\"}\n          >\n            <FormattedMessage id=\"ALL\">\n              {txt => <option value=\"all\">{txt}</option>}\n            </FormattedMessage>\n            {Tableuniquecategory.map(k => {\n              return (\n                <option key={k.toString()} value={k}>\n                  {k}\n                </option>\n              );\n            })}\n          </select>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"COUNTRY\" />,\n        accessor: \"country\",\n        width: 150,\n        style: {\n          textAlign: \"Center\"\n        },\n        show: this.CheckSize(),\n        Cell: row => row.value,\n        filterMethod: (filter, row) => {\n          if (filter.value === \"\") {\n            return true;\n          }\n\n          if (Tableuniquenacionality.includes(filter.value)) {\n            return row[filter.id] === filter.value;\n          } else {\n            return true;\n          }\n        },\n        Filter: ({ filter, onChange }) => (\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\", textAlignLast: \"center\" }}\n            value={filter ? filter.value : \"all\"}\n          >\n            <FormattedMessage id=\"ALL\">\n              {txt => <option value=\"all\">{txt}</option>}\n            </FormattedMessage>\n            {Tableuniquenacionality.map(k => {\n              return (\n                <option key={k.toString()} value={k}>\n                  {k}\n                </option>\n              );\n            })}\n          </select>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"TIME\" />,\n        accessor: \"acumulated_time\",\n        filterable: false,\n        sortable: false,\n        width: (size > 800) ? 100 : 80,\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => FormatTime(row.value)\n\n      },\n      {\n        Header: (size > 800) ? \"Dif 1º\" : \"Dif 1º\",\n        accessor: \"dif\",\n        filterable: false,\n        sortable: false,\n        width: (size > 800) ? 100 : 80,\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => FormatTime(row.value)\n      },\n      {\n        Header: (size > 800) ? <FormattedMessage id=\"FAVORITE\" /> : \"FAV\",\n        filterable: false,\n        sortable: false,\n        width: (size > 800) ? 100 : 50,\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => (\n          <Favorites ListaFavoritos={row.original.athlete_id} />\n\n        )\n      }\n    ];\n\n    return (\n      <ReactTable\n        defaultSorted={[\n          {\n            id: \"PositionGlobal\",\n            desc: false\n          }\n        ]}\n        previousText={<FormattedMessage id=\"PREVIOUS\" />}\n        nextText={<FormattedMessage id=\"NEXT\" />}\n        columns={columns}\n        data={this.props.athleteList}\n        filterable\n        noDataText={<FormattedMessage id=\"NODATA\" />}\n        defaultPageSize={minimalSize(this.props.athleteList.length,20)}\n        pageSizeOptions={calculatePagination(this.props.athleteList.length, 20)}\n        showPagination={true}\n        showPaginationTop={false}\n        showPaginationBottom={true}\n        showPageSizeOptions={true}\n        showPageJump={true}\n        collapseOnSortingChange={true}\n        collapseOnPageChange={true}\n        collapseOnDataChange={true}\n        freezeWhenExpanded={false}\n        sortable={true}\n        multiSort={true}\n        resizable={true}\n        pageText={<FormattedMessage id=\"PAGE\" />}\n        rowsText={\"\"}\n        className=\"-striped -highlight\"\n      />\n    );\n  }\n}\n","import React, { Component } from 'react'\nimport { Line } from 'react-chartjs-2';\nimport { FormattedMessage} from 'react-intl';\n\nvar data;\n\nexport default class Velocity extends Component {\n\n  chartDataVerification() {\n    \n    if (!!(this.props.Faster) && !!(this.props.Normal)) {\n      return (<Line data={data} />)\n\n    }\n    else {\n      return (<p><FormattedMessage id=\"NODATA\" /></p>)\n\n\n    }\n  }\n\n\n  render() {\n    if (!!(this.props.Normal) && !!(this.props.Faster)) {\n      var position = []\n      this.props.checkpoint.map(data => { position.push(data.local) })\n      data = {\n        labels: (position.length > 2) ? position.slice(1) : position.Normal,\n        datasets: [\n          {\n            label: this.props.Name,\n            fill: false,\n            lineTension: 0.1,\n            backgroundColor: '#455A64',\n            borderColor: '#455A64',\n            borderCapStyle: 'butt',\n            borderDash: [],\n            borderDashOffset: 0.0,\n            borderJoinStyle: 'miter',\n            pointBorderColor: '#455A64',\n            pointBackgroundColor: '#455A64',\n            pointBorderWidth: 1,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: '#455A64',\n            pointHoverBorderColor: '#455A64',\n            pointHoverBorderWidth: 2,\n            pointRadius: 1,\n            pointHitRadius: 10,\n            data: (this.props.Normal.length > 2) ? this.props.Normal.slice(1) : this.props.Normal\n          },\n          {\n            label: 'Mais Rápido',\n            fill: false,\n            lineTension: 0.1,\n            backgroundColor: 'rgba(75,192,192,0.4)',\n            borderColor: 'rgba(75,192,192,1)',\n            borderCapStyle: 'butt',\n            borderDash: [],\n            borderDashOffset: 0.0,\n            borderJoinStyle: 'miter',\n            pointBorderColor: 'rgba(75,192,192,1)',\n            pointBackgroundColor: 'rgba(75,192,192,1)',\n            pointBorderWidth: 1,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n            pointHoverBorderColor: 'rgba(220,220,220,1)',\n            pointHoverBorderWidth: 2,\n            pointRadius: 1,\n            pointHitRadius: 10,\n            data: (this.props.Faster.length > 2) ? this.props.Faster.slice(1) : this.props.Faster\n          },\n          \n        ]\n\n      };\n    }\n\n\n\n    return (\n      this.chartDataVerification()\n\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { Line } from 'react-chartjs-2';\nimport { FormattedMessage} from 'react-intl';\n\nvar data;\n\nexport default class Position extends Component {\n\n    chartDataVerification() {\n\n        if (!!(this.props.Global) && !!(this.props.Tier) && !!(this.props.Gender)) {\n            return (<Line\n                data={data}\n\n                options={{\n                    legend: {\n                        display: true\n                    },\n                    scales: {\n                        yAxes: [{\n                            ticks: {\n                                max: this.props.maxY,\n                                min: 0,\n                                stepSize: 1\n                            }\n                        }]\n                    },\n                }} />)\n\n        }\n        else {\n            return (<p><FormattedMessage id=\"NODATA\" /></p>)\n\n\n        }\n    }\n\n    render() {\n        var position = []\n        this.props.checkpoint.map(data => { position.push(data.local) })\n        if (!!(this.props.Global) && !!(this.props.Tier) && !!(this.props.Gender)) {\n            data = {\n                labels: (position.length > 2) ? position.slice(1) : position,\n                datasets: [\n                    {\n                        label: 'Global',\n                        fill: false,\n                        lineTension: 0.1,\n                        backgroundColor: '#455A64',\n                        borderColor: '#455A64',\n                        borderCapStyle: 'butt',\n                        borderDash: [],\n                        borderDashOffset: 0.0,\n                        borderJoinStyle: 'miter',\n                        pointBorderColor: '#455A64',\n                        pointBackgroundColor: '#455A64',\n                        pointBorderWidth: 1,\n                        pointHoverRadius: 5,\n                        pointHoverBackgroundColor: '#455A64',\n                        pointHoverBorderColor: '#455A64',\n                        pointHoverBorderWidth: 2,\n                        pointRadius: 1,\n                        pointHitRadius: 10,\n                        data: (this.props.Global.length > 2) ? this.props.Global.slice(1) : this.props.Global\n                    },\n                    {\n                        label: 'Genero',\n                        fill: false,\n                        lineTension: 0.1,\n                        backgroundColor: 'rgba(75,192,192,0.4)',\n                        borderColor: 'rgba(75,192,192,1)',\n                        borderCapStyle: 'butt',\n                        borderDash: [],\n                        borderDashOffset: 0.0,\n                        borderJoinStyle: 'miter',\n                        pointBorderColor: 'rgba(75,192,192,1)',\n                        pointBackgroundColor: 'rgba(75,192,192,1)',\n                        pointBorderWidth: 1,\n                        pointHoverRadius: 5,\n                        pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n                        pointHoverBorderColor: 'rgba(220,220,220,1)',\n                        pointHoverBorderWidth: 2,\n                        pointRadius: 1,\n                        pointHitRadius: 10,\n                        data: (this.props.Gender.length > 2) ? this.props.Gender.slice(1) : this.props.Gender\n                    },\n                    {\n                        label: 'Escalão',\n                        fill: false,\n                        lineTension: 0.1,\n                        backgroundColor: '#9CCC65',\n                        borderColor: '#9CCC65',\n                        borderCapStyle: 'butt',\n                        borderDash: [],\n                        borderDashOffset: 0.0,\n                        borderJoinStyle: 'miter',\n                        pointBorderColor: '#9CCC65',\n                        pointBackgroundColor: '#9CCC65',\n                        pointBorderWidth: 1,\n                        pointHoverRadius: 5,\n                        pointHoverBackgroundColor: '#9CCC65',\n                        pointHoverBorderColor: '#9CCC65',\n                        pointHoverBorderWidth: 2,\n                        pointRadius: 1,\n                        pointHitRadius: 10,\n                        data: (this.props.Tier.length > 2) ? this.props.Tier.slice(1) : this.props.Tier\n                    }\n\n                ]\n\n            };\n\n\n        }\n\n\n\n        return (\n            this.chartDataVerification()\n\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Bar } from 'react-chartjs-2';\n\nvar options;\nvar data;\n\nexport default class bar extends Component {\n\n\n    render() {\n        if (this.props.ISThree === true) {\n            data = {\n                labels: this.props.data.map(items => { return (items.Label) }),\n                datasets: [\n                    {\n                        label: this.props.Inscription,\n                        fill: false,\n                        lineTension: 0.1,\n                        backgroundColor: [\"#EF9A9A\", \"#B0BEC5\", \"#F48FB1\", \"#B39DDB\", \"#BCAAA4\", \"#9FA8DA\", \"#FFAB91\", \"#90CAF9\", \"#FFCC80\", \"#C5E1A5\", \"#81D4FA\", \"#FFF59D\", \"#FFE082\", \"#80CBC4\", \"#E6EE9C\", \"#80DEEA\",\n                        \"#C62828\", \"#37474F\", \"#AD1457\", \"#424242\", \"#6A1B9A\", \"#4E342E\", \"#4527A0\", \"#D84315\", \"#283593\", \"#1565C0\", \"#EF6C00\", \"#0277BD\", \"#FF8F00\", \"#00838F\", \"#F9A825\", \"#00695C\", \"#9E9D24\",\n                        \"#2E7D32\", \"#558B2F\", \"#F44336\", \"#607D8B\", \"#E91E63\", \"#795548\", \"#9C27B0\", \"#795548\", \"#673AB7\", \"#FF5722\", \"#FF9800\", \"#2196F3\", \"#FF9800\", \"#03A9F4\", \"#FFC107\", \"#00BCD4\", \"#FFEB3B\", \"#009688\",\n                        \"#4CAF50\",\"#CDDC39\",\"#009688\",\"#00BCD4\",\"#CDDC39\",\"#EF9A9A\", \"#B0BEC5\", \"#F48FB1\", \"#EEEEEE\", \"#B39DDB\", \"#BCAAA4\", \"#9FA8DA\", \"#FFAB91\", \"#90CAF9\", \"#FFCC80\", \"#C5E1A5\", \"#81D4FA\", \"#FFF59D\", \"#FFE082\", \"#80CBC4\", \"#E6EE9C\", \"#80DEEA\",\n                        \"#C62828\", \"#37474F\", \"#AD1457\", \"#424242\", \"#6A1B9A\", \"#4E342E\", \"#4527A0\", \"#D84315\", \"#283593\", \"#1565C0\", \"#EF6C00\", \"#0277BD\", \"#FF8F00\", \"#00838F\", \"#F9A825\", \"#00695C\", \"#9E9D24\",\n                        \"#2E7D32\", \"#558B2F\", \"#F44336\", \"#607D8B\", \"#E91E63\", \"#795548\", \"#9C27B0\", \"#795548\", \"#673AB7\", \"#FF5722\", \"#FF9800\", \"#2196F3\", \"#FF9800\", \"#03A9F4\", \"#FFC107\", \"#00BCD4\", \"#FFEB3B\", \"#009688\",\n                        \"#4CAF50\",\"#CDDC39\",\"#009688\",\"#00BCD4\",\"#CDDC39\"],\n                        pointBorderColor: '#455A64',\n                        pointBackgroundColor: '#455A64',\n                        pointBorderWidth: 1,\n                        pointHoverRadius: 5,\n                        pointHoverBackgroundColor: '#455A64',\n                        pointHoverBorderColor: '#455A64',\n                        pointHoverBorderWidth: 2,\n                        pointRadius: 1,\n                        pointHitRadius: 10,\n                        data: this.props.data.map(items => { return (items.Value) })\n                    },\n                    {\n                        label: this.props.Start,\n                        fill: false,\n                        lineTension: 0.1,\n                        backgroundColor:[\"#EF9A9A\", \"#B0BEC5\", \"#F48FB1\", \"#B39DDB\", \"#BCAAA4\", \"#9FA8DA\", \"#FFAB91\", \"#90CAF9\", \"#FFCC80\", \"#C5E1A5\", \"#81D4FA\", \"#FFF59D\", \"#FFE082\", \"#80CBC4\", \"#E6EE9C\", \"#80DEEA\",\n                        \"#C62828\", \"#37474F\", \"#AD1457\", \"#424242\", \"#6A1B9A\", \"#4E342E\", \"#4527A0\", \"#D84315\", \"#283593\", \"#1565C0\", \"#EF6C00\", \"#0277BD\", \"#FF8F00\", \"#00838F\", \"#F9A825\", \"#00695C\", \"#9E9D24\",\n                        \"#2E7D32\", \"#558B2F\", \"#F44336\", \"#607D8B\", \"#E91E63\", \"#795548\", \"#9C27B0\", \"#795548\", \"#673AB7\", \"#FF5722\", \"#FF9800\", \"#2196F3\", \"#FF9800\", \"#03A9F4\", \"#FFC107\", \"#00BCD4\", \"#FFEB3B\", \"#009688\",\n                        \"#4CAF50\",\"#CDDC39\",\"#009688\",\"#00BCD4\",\"#CDDC39\",\"#EF9A9A\", \"#B0BEC5\", \"#F48FB1\", \"#EEEEEE\", \"#B39DDB\", \"#BCAAA4\", \"#9FA8DA\", \"#FFAB91\", \"#90CAF9\", \"#FFCC80\", \"#C5E1A5\", \"#81D4FA\", \"#FFF59D\", \"#FFE082\", \"#80CBC4\", \"#E6EE9C\", \"#80DEEA\",\n                        \"#C62828\", \"#37474F\", \"#AD1457\", \"#424242\", \"#6A1B9A\", \"#4E342E\", \"#4527A0\", \"#D84315\", \"#283593\", \"#1565C0\", \"#EF6C00\", \"#0277BD\", \"#FF8F00\", \"#00838F\", \"#F9A825\", \"#00695C\", \"#9E9D24\",\n                        \"#2E7D32\", \"#558B2F\", \"#F44336\", \"#607D8B\", \"#E91E63\", \"#795548\", \"#9C27B0\", \"#795548\", \"#673AB7\", \"#FF5722\", \"#FF9800\", \"#2196F3\", \"#FF9800\", \"#03A9F4\", \"#FFC107\", \"#00BCD4\", \"#FFEB3B\", \"#009688\",\n                        \"#4CAF50\",\"#CDDC39\",\"#009688\",\"#00BCD4\",\"#CDDC39\"],\n                        pointBackgroundColor: '#455A64',\n                        pointBorderWidth: 1,\n                        pointHoverRadius: 5,\n                        pointHoverBackgroundColor: '#455A64',\n                        pointHoverBorderColor: '#455A64',\n                        pointHoverBorderWidth: 2,\n                        pointRadius: 1,\n                        pointHitRadius: 10,\n                        data: this.props.dataStart.map(items => { return (items.Value) })\n                    },\n                    {\n                        label: this.props.Arrivals,\n                        fill: false,\n                        lineTension: 0.1,\n                        backgroundColor: [\"#EF9A9A\", \"#B0BEC5\", \"#F48FB1\", \"#B39DDB\", \"#BCAAA4\", \"#9FA8DA\", \"#FFAB91\", \"#90CAF9\", \"#FFCC80\", \"#C5E1A5\", \"#81D4FA\", \"#FFF59D\", \"#FFE082\", \"#80CBC4\", \"#E6EE9C\", \"#80DEEA\",\n                        \"#C62828\", \"#37474F\", \"#AD1457\", \"#424242\", \"#6A1B9A\", \"#4E342E\", \"#4527A0\", \"#D84315\", \"#283593\", \"#1565C0\", \"#EF6C00\", \"#0277BD\", \"#FF8F00\", \"#00838F\", \"#F9A825\", \"#00695C\", \"#9E9D24\",\n                        \"#2E7D32\", \"#558B2F\", \"#F44336\", \"#607D8B\", \"#E91E63\", \"#795548\", \"#9C27B0\", \"#795548\", \"#673AB7\", \"#FF5722\", \"#FF9800\", \"#2196F3\", \"#FF9800\", \"#03A9F4\", \"#FFC107\", \"#00BCD4\", \"#FFEB3B\", \"#009688\",\n                        \"#4CAF50\",\"#CDDC39\",\"#009688\",\"#00BCD4\",\"#CDDC39\",\"#EF9A9A\", \"#B0BEC5\", \"#F48FB1\", \"#EEEEEE\", \"#B39DDB\", \"#BCAAA4\", \"#9FA8DA\", \"#FFAB91\", \"#90CAF9\", \"#FFCC80\", \"#C5E1A5\", \"#81D4FA\", \"#FFF59D\", \"#FFE082\", \"#80CBC4\", \"#E6EE9C\", \"#80DEEA\",\n                        \"#C62828\", \"#37474F\", \"#AD1457\", \"#424242\", \"#6A1B9A\", \"#4E342E\", \"#4527A0\", \"#D84315\", \"#283593\", \"#1565C0\", \"#EF6C00\", \"#0277BD\", \"#FF8F00\", \"#00838F\", \"#F9A825\", \"#00695C\", \"#9E9D24\",\n                        \"#2E7D32\", \"#558B2F\", \"#F44336\", \"#607D8B\", \"#E91E63\", \"#795548\", \"#9C27B0\", \"#795548\", \"#673AB7\", \"#FF5722\", \"#FF9800\", \"#2196F3\", \"#FF9800\", \"#03A9F4\", \"#FFC107\", \"#00BCD4\", \"#FFEB3B\", \"#009688\",\n                        \"#4CAF50\",\"#CDDC39\",\"#009688\",\"#00BCD4\",\"#CDDC39\"],\n                        pointBorderColor: '#455A64',\n                        pointBackgroundColor: '#455A64',\n                        pointBorderWidth: 1,\n                        pointHoverRadius: 5,\n                        pointHoverBackgroundColor: '#455A64',\n                        pointHoverBorderColor: '#455A64',\n                        pointHoverBorderWidth: 2,\n                        pointRadius: 1,\n                        pointHitRadius: 10,\n                        data: this.props.dataLast.map(items => { return (items.Value) })\n                    }\n                ]\n\n            }\n        }\n        else {\n            data = {\n                labels: this.props.data.map(items => { return (items.Label) }),\n                datasets: [\n                    {\n                        label: this.props.Inscription,\n                        fill: false,\n                        lineTension: 0.1,\n                        backgroundColor:[\"#EF9A9A\", \"#B0BEC5\", \"#F48FB1\", \"#B39DDB\", \"#BCAAA4\", \"#9FA8DA\", \"#FFAB91\", \"#90CAF9\", \"#FFCC80\", \"#C5E1A5\", \"#81D4FA\", \"#FFF59D\", \"#FFE082\", \"#80CBC4\", \"#E6EE9C\", \"#80DEEA\",\n                        \"#C62828\", \"#37474F\", \"#AD1457\", \"#424242\", \"#6A1B9A\", \"#4E342E\", \"#4527A0\", \"#D84315\", \"#283593\", \"#1565C0\", \"#EF6C00\", \"#0277BD\", \"#FF8F00\", \"#00838F\", \"#F9A825\", \"#00695C\", \"#9E9D24\",\n                        \"#2E7D32\", \"#558B2F\", \"#F44336\", \"#607D8B\", \"#E91E63\", \"#795548\", \"#9C27B0\", \"#795548\", \"#673AB7\", \"#FF5722\", \"#FF9800\", \"#2196F3\", \"#FF9800\", \"#03A9F4\", \"#FFC107\", \"#00BCD4\", \"#FFEB3B\", \"#009688\",\n                        \"#4CAF50\",\"#CDDC39\",\"#009688\",\"#00BCD4\",\"#CDDC39\",\"#EF9A9A\", \"#B0BEC5\", \"#F48FB1\", \"#EEEEEE\", \"#B39DDB\", \"#BCAAA4\", \"#9FA8DA\", \"#FFAB91\", \"#90CAF9\", \"#FFCC80\", \"#C5E1A5\", \"#81D4FA\", \"#FFF59D\", \"#FFE082\", \"#80CBC4\", \"#E6EE9C\", \"#80DEEA\",\n                        \"#C62828\", \"#37474F\", \"#AD1457\", \"#424242\", \"#6A1B9A\", \"#4E342E\", \"#4527A0\", \"#D84315\", \"#283593\", \"#1565C0\", \"#EF6C00\", \"#0277BD\", \"#FF8F00\", \"#00838F\", \"#F9A825\", \"#00695C\", \"#9E9D24\",\n                        \"#2E7D32\", \"#558B2F\", \"#F44336\", \"#607D8B\", \"#E91E63\", \"#795548\", \"#9C27B0\", \"#795548\", \"#673AB7\", \"#FF5722\", \"#FF9800\", \"#2196F3\", \"#FF9800\", \"#03A9F4\", \"#FFC107\", \"#00BCD4\", \"#FFEB3B\", \"#009688\",\n                        \"#4CAF50\",\"#CDDC39\",\"#009688\",\"#00BCD4\",\"#CDDC39\"],\n                        pointBorderColor: '#455A64',\n                        pointBackgroundColor: '#455A64',\n                        pointBorderWidth: 1,\n                        pointHoverRadius: 5,\n                        pointHoverBackgroundColor: '#455A64',\n                        pointHoverBorderColor: '#455A64',\n                        pointHoverBorderWidth: 2,\n                        pointRadius: 1,\n                        pointHitRadius: 10,\n                        data: this.props.data.map(items => { return (items.Value) })\n                    }\n                ]\n\n            }\n        }\n\n        options = {\n            legend: {\n                display: false,\n                position: 'bottom',\n\n            },\n            scales: {\n                yAxes: [{\n                    ticks: {\n                        beginAtZero: true,\n                        min: 0,\n                        stepSize: 10,\n                    }\n                }]\n            }\n        };\n\n        return (\n            <div>\n                <Bar data={data} options={options} />\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Pie  } from 'react-chartjs-2';\n\nvar options;\nexport default class pie extends Component {\n\n\n    render() {\n        const data = {\n\n            labels: this.props.data.map(items => { return (items.Label) }),\n            datasets: [\n                {\n                    fill: false,\n                    lineTension: 0.1,\n                    backgroundColor: [\"#64B5F6\",\"#9575CD\",\"#EF9A9A\", \"#B0BEC5\", \"#F48FB1\", \"#EEEEEE\", \"#B39DDB\", \"#BCAAA4\", \"#9FA8DA\", \"#FFAB91\", \"#90CAF9\", \"#FFCC80\", \"#C5E1A5\", \"#81D4FA\", \"#FFF59D\", \"#FFE082\", \"#80CBC4\", \"#E6EE9C\", \"#80DEEA\",\n                    \"#C62828\", \"#37474F\", \"#AD1457\", \"#424242\", \"#6A1B9A\", \"#4E342E\", \"#4527A0\", \"#D84315\", \"#283593\", \"#1565C0\", \"#EF6C00\", \"#0277BD\", \"#FF8F00\", \"#00838F\", \"#F9A825\", \"#00695C\", \"#9E9D24\",\n                    \"#2E7D32\", \"#558B2F\", \"#F44336\", \"#607D8B\", \"#E91E63\", \"#795548\", \"#9C27B0\", \"#795548\", \"#673AB7\", \"#FF5722\", \"#FF9800\", \"#2196F3\", \"#FF9800\", \"#03A9F4\", \"#FFC107\", \"#00BCD4\", \"#FFEB3B\", \"#009688\",\n                    \"#4CAF50\",\"#CDDC39\",\"#009688\",\"#00BCD4\",\"#CDDC39\",\"#EF9A9A\", \"#B0BEC5\", \"#F48FB1\", \"#EEEEEE\", \"#B39DDB\", \"#BCAAA4\", \"#9FA8DA\", \"#FFAB91\", \"#90CAF9\", \"#FFCC80\", \"#C5E1A5\", \"#81D4FA\", \"#FFF59D\", \"#FFE082\", \"#80CBC4\", \"#E6EE9C\", \"#80DEEA\",\n                    \"#C62828\", \"#37474F\", \"#AD1457\", \"#424242\", \"#6A1B9A\", \"#4E342E\", \"#4527A0\", \"#D84315\", \"#283593\", \"#1565C0\", \"#EF6C00\", \"#0277BD\", \"#FF8F00\", \"#00838F\", \"#F9A825\", \"#00695C\", \"#9E9D24\",\n                    \"#2E7D32\", \"#558B2F\", \"#F44336\", \"#607D8B\", \"#E91E63\", \"#795548\", \"#9C27B0\", \"#795548\", \"#673AB7\", \"#FF5722\", \"#FF9800\", \"#2196F3\", \"#FF9800\", \"#03A9F4\", \"#FFC107\", \"#00BCD4\", \"#FFEB3B\", \"#009688\",\n                    \"#4CAF50\",\"#CDDC39\",\"#009688\",\"#00BCD4\",\"#CDDC39\"],\n                    pointBorderColor: '#455A64',\n                    pointBackgroundColor: '#455A64',\n                    pointBorderWidth: 1,\n                    pointHoverRadius: 5,\n                    pointHoverBackgroundColor: '#455A64',\n                    pointHoverBorderColor: '#455A64',\n                    pointHoverBorderWidth: 2,\n                    pointRadius: 1,\n                    pointHitRadius: 10,\n                    data: this.props.data.map(items => { return (items.Value) })\n                }]\n        }\n\n        options = {\n            legend: {\n                display: true,\n                position: 'bottom',\n            },\n        };\n\n        return (\n            <div>\n                <Pie  data={data} options={options} />\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Bar } from 'react-chartjs-2';\n\nvar options;\nvar data;\n\nexport default class GenderComp extends Component {\n    render() {\n             data = {\n                labels: this.props.data.map(items => { return (items.Label) }),\n                datasets: [\n                    {\n                        label: this.props.Inscription,\n                        fill: false,\n                        lineTension: 0.1,\n                        backgroundColor: [\n                            \"#64B5F6\", \"#9575CD\",\n                        ],\n                        pointBorderColor: '#455A64',\n                        pointBackgroundColor: '#455A64',\n                        pointBorderWidth: 1,\n                        pointHoverRadius: 5,\n                        pointHoverBackgroundColor: '#455A64',\n                        pointHoverBorderColor: '#455A64',\n                        pointHoverBorderWidth: 2,\n                        pointRadius: 1,\n                        pointHitRadius: 10,\n                        data: this.props.data.map(items => { return (items.Value) })\n                    },\n                    {\n                        label: this.props.Start,\n                        fill: false,\n                        lineTension: 0.1,\n                        backgroundColor: [\n                            \"#64B5F6\", \"#9575CD\",\n                        ],\n                        pointBorderColor: '#455A64',\n                        pointBackgroundColor: '#455A64',\n                        pointBorderWidth: 1,\n                        pointHoverRadius: 5,\n                        pointHoverBackgroundColor: '#455A64',\n                        pointHoverBorderColor: '#455A64',\n                        pointHoverBorderWidth: 2,\n                        pointRadius: 1,\n                        pointHitRadius: 10,\n                        data: this.props.dataStart.map(items => { return (items.Value) })\n                    },\n                    {\n                        label: this.props.Arrivals,\n                        fill: false,\n                        lineTension: 0.1,\n                        backgroundColor: [\n                            \"#64B5F6\", \"#9575CD\",\n                        ],\n                        pointBorderColor: '#455A64',\n                        pointBackgroundColor: '#455A64',\n                        pointBorderWidth: 1,\n                        pointHoverRadius: 5,\n                        pointHoverBackgroundColor: '#455A64',\n                        pointHoverBorderColor: '#455A64',\n                        pointHoverBorderWidth: 2,\n                        pointRadius: 1,\n                        pointHitRadius: 10,\n                        data: this.props.dataLast.map(items => { return (items.Value) })\n                    }\n                ]\n\n            }\n        \n\n\n        options = {\n            legend: {\n                display: false,\n            },\n            scales: {\n                yAxes: [{\n                  ticks: {\n                    beginAtZero: true,\n                    min: 0\n                  }    \n                }]\n              }   \n        };\n\n        return (\n            <div>\n            <Bar data={data} options={options} />\n        </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Line } from 'react-chartjs-2';\n\nvar data;\nvar options;\nexport default class Ground extends Component {\n    render() {\n            data = {\n            labels:this.props.data.map(items => { return (items.checkpoint.local) }),\n            datasets: [\n              {\n                label: this.props.Name,\n                fill: true,\n                lineTension: 0.1,\n                backgroundColor: '#BCAAA4',\n                borderColor: '#66BB6A',\n                borderDash: [],\n                borderDashOffset: 0.0,\n                borderJoinStyle: 'miter',\n                pointBorderColor: '#212121',\n                pointBackgroundColor: '#212121',\n                pointBorderWidth: 1,\n                pointHoverRadius: 5,\n                pointHoverBackgroundColor: '#212121',\n                pointHoverBorderColor: '#212121',\n                pointHoverBorderWidth: 2,\n                pointRadius: 1,\n                pointHitRadius: 10,\n                data: this.props.data.map(items => { return (items.checkpoint.altitude) })\n              }              \n            ]\n          };\n          \n        options = {\n            legend: {\n                display: false,\n            },\n            scales: {\n                yAxes: [{\n                  ticks: {\n                    beginAtZero: true,\n                    min: 0,\n                  },   \n                  scaleLabel: {\n                    display: true,\n                    labelString: 'm'\n                  } \n                }]\n              }   \n        };\n        \n    \n    \n    \n        return (\n            <Line data={data} options={options} />\n    \n        )\n      }\n}\n","import React, { Component } from 'react'\nimport { Line } from 'react-chartjs-2';\n\nvar options;\nvar data;\n\nexport default class Checkpoint extends Component {\n    render() {\n        data = {\n            labels: this.props.data.map(items => { return (items.Label) }),\n            datasets: [\n                {\n                    fill: true,\n                    lineTension: 0.1,\n                    backgroundColor: '#90CAF9',\n                    borderColor: '#42A5F5',\n                    borderDash: [],\n                    borderDashOffset: 0.0,\n                    borderJoinStyle: 'miter',\n                    pointBorderColor: '#263238',\n                    pointBackgroundColor: '#263238',\n                    pointBorderWidth: 1,\n                    pointHoverRadius: 5,\n                    pointHoverBackgroundColor: '#263238',\n                    pointHoverBorderColor: '#263238',\n                    pointHoverBorderWidth: 2,\n                    pointRadius: 1,\n                    pointHitRadius: 10,\n                    data: this.props.data.map(items => { return (items.Value) })\n                }\n            ]\n        };\n\n        options = {\n            legend: {\n                display: false,\n            },\n            scales: {\n                yAxes: [{\n                    ticks: {\n                        beginAtZero: true,\n                        min: 0,\n                    }\n                }]\n            }\n        };\n        return (\n            <div>\n                <Line data={data} options={options} />\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { FormattedMessage } from 'react-intl';\n\nexport default class FasterMale extends Component {\n    render() {\n        var Array = this.props.athleteList.filter(function (el) {\n            return el.sexo ===\"M\"\n                   \n          });\n        //get the faster time\n        let fasterTime = Array.map(athelete => {\n            return athelete.acumulated_time;\n        });\n        //get the faster athlete name\n        let fasterName = Array.map(athelete => {\n            return athelete.name;\n        });\n\n        return (\n\n            <div>\n                {/* Info boxes */}\n                <div className=\"col-md-3 col-sm-6 col-xs-12\">\n                    <div className=\"info-box\">\n                        <span className=\"info-box-icon bg-blue\"><i className=\"fa fa-fw fa-male\" /></span>\n                        <div className=\"info-box-content\">\n                            <span className=\"info-box-text\"><FormattedMessage id=\"FASTER\" /></span>\n                            <span className=\"info-box-text\"> <strong>{fasterName[0]} </strong></span>\n                            <span className=\"info-box-number\"> <small>{fasterTime[0]}</small></span>\n                        </div>\n                        {/* /.info-box-content */}\n                    </div>\n                    {/* /.info-box */}\n                </div>\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { FormattedMessage } from 'react-intl';\n\nexport default class FasterFemale extends Component {\n    render() {\n        var Array = this.props.athleteList.filter(function (el) {\n            return el.sexo ===\"F\"\n                   \n          });\n        //get the faster time\n        let fasterTime = Array.map(athelete => {\n            return athelete.acumulated_time;\n        });\n        //get the faster athlete name\n        let fasterName = Array.map(athelete => {\n            return athelete.name;\n        });\n        return (\n\n            <div>\n                {/* Info boxes */}\n                <div className=\"col-md-3 col-sm-6 col-xs-12\">\n                    <div className=\"info-box\">\n                        <span className=\"info-box-icon bg-blue\"><i className=\"fa fa-fw fa-female\" /></span>\n                        <div className=\"info-box-content\">\n                            <span className=\"info-box-text\"><FormattedMessage id=\"FASTERF\" /></span>\n                            <span className=\"info-box-text\"> <strong>{fasterName[0]} </strong></span>\n                            <span className=\"info-box-number\"> <small>{fasterTime[0]}</small></span>\n                        </div>\n                        {/* /.info-box-content */}\n                    </div>\n                    {/* /.info-box */}\n                </div>\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from \"react\";\nimport Header from \"../structure/Header\";\nimport Footer from \"../structure/Footer\";\nimport Menu from \"../structure/Menu\";\nimport TableCheckpoints from \"../Tables/TableCheckpoints\";\nimport WidgetNumberParticipants from \"../Widgets/NumberParticipants\"\nimport WidgetFasterMale from \"../Widgets/FasterMale\"\nimport WidgetFasterFemale from \"../Widgets/FasterFemale\"\nimport Loader from \"../Loader/Loader\";\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { FormattedMessage } from 'react-intl';\n\n\nconst API_KEY = `${process.env.REACT_APP_API_TRAIL_KEY}`;\nconst API_URL = `${process.env.REACT_APP_API_TRAIL_URL}`;\nconst TOKEN = API_KEY;\nvar AthleteListSize = 0;\nvar sizeCheckpointList = 0;\nvar arrayTotalAthlets = [];\n\nexport default class EventSubscribers extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      CheckpointList: [],\n      loadingAthlets: false,\n      loadingCheckpoints: false,\n      Checkpointid: 0,\n      checkpointname: \"\",\n      checkpointnameShow: <div>< FormattedMessage id=\"SEARCHING\" />&nbsp;&nbsp;<i class=\"fa fa-refresh fa-spin\" /></div>,\n      AtheletsTotal: 0,\n      AtheletsTotalLoaded: false,\n      CheckpointTotalLoaded: false,\n      AthleteList: [],\n      CheckpointTotal: []\n    };\n    this.GetFirstRunCheckpointList();\n    this.PopulateBadgesvalues()\n  }\n\n\n\n  /*for the first time when page is loaded */\n  GetFirstRunCheckpointList = async e => {\n    const API_CALL = await fetch(`${API_URL}/competition/Checkpoints/${this.props.match.params.CompID}/`, {\n      headers: new Headers({\n        Authorization: TOKEN\n      })\n    });\n    const data = await API_CALL.json();\n    this.setState({ CheckpointList: data, loadingCheckpoints: true });\n    this.Getlastcheckpoint();\n\n  };\n\n  /*for the  time when props change */\n  GetCheckpointList = async e => {\n    const API_CALL = await fetch(`${API_URL}/competition/Checkpoints/${this.props.match.params.CompID}/`, {\n      headers: new Headers({\n        Authorization: TOKEN\n      })\n    });\n    const data = await API_CALL.json();\n    this.setState({ CheckpointList: data, loadingCheckpoints: true });\n  };\n\n  /*get list of athlets*/\n  GetAthleteList = async e => {\n    const API_CALL = await fetch(`${API_URL}/results/AthsTimeWithGlobalPositions/${this.props.match.params.CompID}/${this.state.Checkpointid}/`, {\n      headers: new Headers({\n        Authorization: TOKEN\n      })\n    });\n    const data = await API_CALL.json();\n    AthleteListSize = await data.length;\n    this.setState({ AthleteList: data, loadingAthlets: true });\n  };\n  /*get total of athlets by checkpoint*/\n  async GetTotalAthlets() {\n    const API_CALL = await fetch(`${API_URL}/results/AthTotalByCheckpoint/${this.props.match.params.CompID}/`, {\n      headers: new Headers({\n        Authorization: TOKEN\n      })\n    });\n    const data = await API_CALL.json()\n    this.setState({ CheckpointTotal: data, CheckpointTotalLoaded: true });\n\n  };\n\n  /*when props change*/\n  async componentDidUpdate(prevProps) {\n    if (prevProps.match.params.CompID !== this.props.match.params.CompID) {\n      this.setState({ loadingAthlets: false })\n      await this.GetFirstRunCheckpointList();\n\n    }\n  }\n\n  /*when props change*/\n  UpdateStateCheckpoint(checkpointID, checkpointName) {\n    this.setState({ Checkpointid: checkpointID, checkpointname: checkpointName, loadingAthlets: false, checkpointnameShow: checkpointName }, this.GetAthleteList);\n  };\n\n  /*get last checkpoint with values in the database*/\n  async Getlastcheckpoint() {\n    let checkpointID = this.state.CheckpointList.map(checkpoint => checkpoint.checkpoint.checkpoint_id)\n    let checkpointName = this.state.CheckpointList.map(checkpoint => checkpoint.checkpoint.local)\n    sizeCheckpointList = checkpointID.length - 1; //-1 because array start in 0\n    this.setState({ Checkpointid: checkpointID[sizeCheckpointList], checkpointname: checkpointName[sizeCheckpointList] });\n    await this.GetAthleteList();\n\n    //Search for the last checkpoint with times inserted\n    if (AthleteListSize === 0) {\n      while (sizeCheckpointList >= 0) {\n        sizeCheckpointList = sizeCheckpointList - 1;\n        this.setState({ Checkpointid: checkpointID[sizeCheckpointList], checkpointname: checkpointName[sizeCheckpointList] });\n        await this.GetAthleteList();\n        if (AthleteListSize > 0) {\n          this.setState({ checkpointnameShow: this.state.checkpointname })\n          break;\n        }\n        else {\n          //if there is no times\n          if (sizeCheckpointList === 0) {\n            this.setState({ Checkpointid: checkpointID[0], checkpointname: checkpointName[0] });\n            this.setState({ checkpointnameShow: this.state.checkpointname })\n            await this.GetAthleteList();\n            break;\n          }\n        }\n\n\n      }\n    }\n    else {\n      this.setState({ checkpointnameShow: this.state.checkpointname })\n    }\n\n  }\n\n  PopulateBadgesvalues() {\n    this.GetTotalAthlets()\n  }\n\n  GetBadgesvalues(checkpoint) {\n    var total = 0;\n    this.state.CheckpointTotal.map(checkpointValue => { if (checkpointValue.CheckpointID === checkpoint) { total = checkpointValue.Value } })\n    return (total);\n  }\n\n\n  CheckpointList(checkpoint_order, length) {\n    if (checkpoint_order === '99') {\n      return (<span style={{ padding: '1px' }} class=\"fa fa-fw fa-flag-checkered\" ></span>)\n    }\n    else if (checkpoint_order === '00') {\n      return (<span style={{ padding: '1px' }} class=\"fa fa-fw fa-bell-o\" ></span>)\n    }\n    else { return (<span style={{ padding: '1px' }}>{checkpoint_order}</span>) }\n  }\n\n\n\n  /*Loading message for the checkpoints*/\n  LoadingCheckpoints() {\n    if (this.state.loadingCheckpoints === false) {\n      return (\n        <th key=\"Loading\"> <a href=\"##\">< FormattedMessage id=\"LOADING\" /><i class=\"fa fa-refresh fa-spin\" /></a></th>\n      )\n    }\n    else\n      return (\n        this.state.CheckpointList.map(checkpoint => {\n          if (checkpoint.checkpoint.checkpoint_id === this.state.Checkpointid) {\n            return (\n\n              <th key={checkpoint.checkpoint.checkpoint_id} >\n                <Tooltip placement=\"top\" title={<span style={{ fontSize: \"16px\" }}>{checkpoint.checkpoint.local}</span>} arrow>\n                  <a style={{ color: '#37474F', fontSize: '22px' }} onClick={() => this.UpdateStateCheckpoint(checkpoint.checkpoint.checkpoint_id, checkpoint.checkpoint.local)} href=\"##\">\n                    {this.CheckpointList(checkpoint.checkpoint_order, this.state.CheckpointList.length)}\n                    <span class=\"badge bg-red\">{this.GetBadgesvalues(checkpoint.checkpoint.checkpoint_id)}</span>\n\n                  </a>\n                </Tooltip>\n\n\n              </th>\n            )\n          }\n          else {\n            return (\n              <th key={checkpoint.checkpoint.checkpoint_id} >\n                <Tooltip placement=\"top\" title={<span style={{ fontSize: \"16px\" }}>{checkpoint.checkpoint.local}</span>} arrow>\n                  <a onClick={() => this.UpdateStateCheckpoint(checkpoint.checkpoint.checkpoint_id, checkpoint.checkpoint.local)} href=\"##\">\n                    {this.CheckpointList(checkpoint.checkpoint_order, this.state.CheckpointList.length)}\n                    <span class=\"badge bg-red\">{this.GetBadgesvalues(checkpoint.checkpoint.checkpoint_id)}</span>\n                  </a>\n                </Tooltip>\n\n              </th>\n\n            )\n          }\n\n\n\n        }))\n  }\n\n  /*Loading message for the athlete*/\n  LoadingAthletes() {\n    if (this.state.loadingAthlets === false) {\n      return (\n        <section className=\"content\">\n          <div className=\"row\">\n            <div className=\"col-xs-12\">\n              <div className=\"box\">\n                {/* /.box-body */}\n                <div className=\"box-body\" style={{ display: 'flex', justifyContent: 'center' }}>\n                  <Loader />\n                </div>\n\n              </div>\n            </div>\n          </div>\n        </section>\n      )\n    }\n    else {\n      return (\n        <section className=\"content\">\n          <div className=\"row\">\n            {/* widget for the number of participants */}\n            <WidgetNumberParticipants athleteList={this.state.AthleteList} />\n            {/* widget for the Faster */}\n            <WidgetFasterMale athleteList={this.state.AthleteList} />\n            <WidgetFasterFemale athleteList={this.state.AthleteList} />\n\n\n          </div>\n          <div className=\"row\">\n            <section  className=\"content-header\">\n\n              <h1 style={{paddingBottom:'20px'}}>\n                <span> {this.state.checkpointnameShow}</span>\n\n              </h1>\n            </section>\n\n          </div>\n\n\n          <div\n            style={{\n              padding: \"10px 30px\",\n              background: \"#3c8dbc\",\n              zIndex: 999999,\n              fontSize: 16,\n              fontWeight: 600\n            }}\n          >\n\n            <table className=\"text-center\" style={{ padding: \"5px\", border: \"5px\", width: \"100%\" }}>\n              <tbody>\n                <tr style={{ textAlign: \"center !important\" }} >\n                  {this.LoadingCheckpoints()} {/* load checkpoint */}\n                </tr>\n              </tbody>\n            </table>\n\n\n          </div>\n          <div className=\"row\">\n            <div className=\"col-xs-12\">\n              <div className=\"box box-primary\">\n                {/* /.box-body */}\n                <div className=\"box-body\"></div>\n                <TableCheckpoints\n                  athleteList={this.state.AthleteList}\n                  eventID={this.props.match.params.EventID}\n                  competitionID={this.props.match.params.CompID}\n                  loading={this.state.loading}\n                />\n\n              </div>\n            </div>\n            {/* /.col */}\n          </div>\n          {/* /.row */}\n        </section>\n      )\n    }\n  }\n\n  render() {\n\n    return (\n      <div>\n        <Header eventID={this.props.match.params.EventID} />\n        {/*Send the event id to the MENU, to get the competition list*/}\n        <Menu eventID={this.props.match.params.EventID} competitionID={this.props.match.params.CompID} />\n        {/*CONTENT*/}\n        <div>\n          {/* Content Wrapper. Contains page content */}\n          <div className=\"content-wrapper\">\n\n            {/* Content Header (Page header) */}\n            <section className=\"content-header\">\n              <h1>\n\n                <span >{this.props.match.params.CompName}</span>\n              </h1>\n            </section>\n\n\n            {/* Main content */}\n            {/*Check if data is loading*/}\n            {this.LoadingAthletes()} {/* loaded athletes */}\n          </div>\n          {/* /.content-wrapper */}\n        </div>\n        <Footer eventID={this.props.match.params.EventID} />\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\nimport { Link } from \"react-router-dom\";\nimport Favorites from \"../favorites/favoritesChecker\"\nimport {FormatTime} from \"../Scripts/time\"\nimport { FormattedMessage } from 'react-intl';\n\nvar size = window.innerWidth;\n\n\nexport default class TableSubscribers extends Component {\n  \n  CheckSize() {\n    if(size > 1500){\n      return true;\n    }\n    else{\n      return false;\n    }\n  }\n\n  render() {\n    \n    //Info for the filters\n    //get the category\n    let category = this.props.athleteList.map(athelete => {\n      return athelete.escalao;\n    });\n    //remove duplicates\n    const Tableuniquecategory = [...new Set(category.sort())];\n    //get the nacionality\n    let nacionality = this.props.athleteList.map(athelete => {\n      return athelete.country;\n    });\n    //remove duplicates\n    const Tableuniquenacionality = [...new Set(nacionality.sort())];\n  \n    //get the Club\n    let club = this.props.athleteList.map(athelete => {\n      return athelete.club;\n    });\n    //remove duplicates\n    const Tableuniqueclub = [...new Set(club.sort())];\n\n\n    //Table\n    const columns = [\n      {\n        Header: \"Id\",\n        accessor: \"athlete_id\",\n        sortable: false,\n        style: {\n          textAlign: \"Center\"\n        },\n        width: 100,\n        maxWidth: 100,\n        mimWidth: 100,\n        show: false\n      },\n      {\n        Header: (size>800)?<FormattedMessage id=\"POSITION\" />:\"POS\",\n        accessor: this.props.position,\n        style: {\n          display: \"flex\",\n          textAlign: \"Center\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        },\n        width:(size>800)?100:55,\n        Filter: ({ filter, onChange }) => (\n          <FormattedMessage id=\"SEARCH\" >\n          {txt => <input\n            onChange={event => onChange(event.target.value)}\n            value={filter ? filter.value : \"\"}\n            placeholder={txt}\n            style={{\n              width: \"100%\",\n              textAlign: \"Center\"\n            }}\n          />}\n        </FormattedMessage>\n        )\n      },\n      {\n        Header: (size>800)?<FormattedMessage id=\"PHOTO\" /> :\"PTL\",\n        id: \"photo\",\n        show: (size>800)?true:false,\n        accessor: \"photo\",\n        style: {\n          display: \"flex\",\n          textAlign: \"Center\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        },\n        width:(size>800)?200:60, \n        Cell: row => (\n          <img className=\"profile-user-img img-responsive img-circle\" src={row.value}></img>\n        )\n      },\n      {\n        Header: (size>800)?<FormattedMessage id=\"DORSAL\" /> :\"PTL\",\n        id: \"peitoral\",\n        accessor: d => Number(d.peitoral),\n        style: {\n          display: \"flex\",\n          textAlign: \"Center\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        },\n        width:(size>800)?100:60,\n        Filter: ({ filter, onChange }) => (\n          <FormattedMessage id=\"SEARCH\" >\n          {txt => <input\n            onChange={event => onChange(event.target.value)}\n            value={filter ? filter.value : \"\"}\n            placeholder={txt}\n            style={{\n              width: \"100%\",\n              textAlign: \"Center\"\n            }}\n          />}\n        </FormattedMessage>\n        ),\n        \n        Cell: row => (\n\n          <Link\n            to={{ pathname: `/AthleteDetail/${this.props.eventID}/${this.props.competitionID}/${row.original.athlete_id}` }}\n          >\n            <span style={{ color: \"#3c8dbc\" }}>{row.value} </span>\n          </Link>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"NAME\" />,\n        accessor: \"name\",\n        width:(size>800)?300:130,\n        style: {\n          display: \"flex\",\n          textAlign: \"Center\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        },\n        Filter: ({ filter, onChange }) => (\n          <FormattedMessage id=\"SEARCH\" >\n          {txt => <input\n            onChange={event => onChange(event.target.value)}\n            value={filter ? filter.value : \"\"}\n            placeholder={txt}\n            style={{\n              width: \"100%\",\n              textAlign: \"Center\"\n            }}\n          />}\n        </FormattedMessage>\n        ),\n        \n        Cell: row => (\n\n          <Link\n            to={{ pathname: `/AthleteDetail/${this.props.eventID}/${this.props.competitionID}/${row.original.athlete_id}` }}\n          >\n            <span style={{ color: \"#3c8dbc\" }}>{row.value} </span>\n          </Link>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"TEAM\" />,\n        accessor: \"club\",\n        show : this.CheckSize(),\n\n        style: {\n          display: \"flex\",\n          textAlign: \"Center\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        },\n        Cell: row => row.value,\n        filterMethod: (filter, row) => {\n          if (filter.value === \"\") {\n            return true;\n          }\n\n          if (Tableuniqueclub.includes(filter.value)) {\n            return row[filter.id] === filter.value;\n          } else {\n            return true;\n          }\n        },\n        Filter: ({ filter, onChange }) => (\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\", textAlignLast:\"center\" }}\n            value={filter ? filter.value : \"all\"}\n          >\n            <FormattedMessage id=\"ALL\">\n              {txt => <option value=\"all\">{txt}</option>}\n            </FormattedMessage>\n            {Tableuniqueclub.map(k => {\n              return (\n                <option key={k.toString()} value={k}>\n                  {k}\n                </option>\n              );\n            })}\n          </select>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"CATEGORY\" />,\n        accessor: \"escalao\",\n        width:(size>800)?150:80,\n        style: {\n          display: \"flex\",\n          textAlign: \"Center\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        },\n        Cell: row => row.value,\n        filterMethod: (filter, row) => {\n          if (filter.value === \"\") {\n            return true;\n          }\n\n          if (Tableuniquecategory.includes(filter.value)) {\n            return row[filter.id] === filter.value;\n          } else {\n            return true;\n          }\n        },\n        Filter: ({ filter, onChange }) => (\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\", textAlignLast:\"center\" }}\n            value={filter ? filter.value : \"all\"}\n          >\n             <FormattedMessage id=\"ALL\">\n              {txt => <option value=\"all\">{txt}</option>}\n            </FormattedMessage>\n            {Tableuniquecategory.map(k => {\n              return (\n                <option key={k.toString()} value={k}>\n                  {k}\n                </option>\n              );\n            })}\n          </select>\n        )\n      },\n      {\n        Header:  <FormattedMessage id=\"COUNTRY\" />,\n        accessor: \"country\",\n        width:150,\n        show : this.CheckSize(),\n        style: {\n          display: \"flex\",\n          textAlign: \"Center\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        },\n        Cell: row => row.value,\n        filterMethod: (filter, row) => {\n          if (filter.value === \"\") {\n            return true;\n          }\n\n          if (Tableuniquenacionality.includes(filter.value)) {\n            return row[filter.id] === filter.value;\n          } else {\n            return true;\n          }\n        },\n        Filter: ({ filter, onChange }) => (\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\", textAlignLast:\"center\" }}\n            value={filter ? filter.value : \"all\"}\n          >\n           <FormattedMessage id=\"ALL\">\n              {txt => <option value=\"all\">{txt}</option>}\n            </FormattedMessage>\n            {Tableuniquenacionality.map(k => {\n              return (\n                <option key={k.toString()} value={k}>\n                  {k}\n                </option>\n              );\n            })}\n          </select>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"TIME\" />,\n        accessor: \"acumulated_time\",\n        width:(size>800)?100:100,\n        filterable:false,\n        sortable:false,\n        style: {\n          display: \"flex\",\n          textAlign: \"Center\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        },\n        Cell: row => FormatTime(row.value)\n        \n      },\n      {\n        Header: (size>800)?\"Dif 1º\" : \"Dif 1º\",\n        width:(size>800)?100:100,\n        accessor: \"dif\",\n        filterable:false,\n        sortable:false,\n        style: {\n          display: \"flex\",\n          textAlign: \"Center\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        },\n        Cell: row => FormatTime(row.value)\n        },\n      {\n        Header: (size>800)?<FormattedMessage id=\"FAVORITE\" />:\"FAV\",\n        filterable: false,\n        sortable:false,\n        width:(size>800)?100:50,\n        style: {\n          display: \"flex\",\n          textAlign: \"Center\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        },\n        Cell: row => (\n          <Favorites ListAthletes={this.props.athleteList} ListaFavoritos={row.original.athlete_id} />\n        )\n      }\n    ];\n    return (\n      <ReactTable\n      defaultSorted={[\n        {\n          id: \"PositionGlobal\",\n          desc: false\n        }\n      ]}\n      previousText={<FormattedMessage id=\"PREVIOUS\" />}\n      nextText={<FormattedMessage id=\"NEXT\" />}\n        columns={columns}\n        data={this.props.athleteList}\n        filterable={false}\n        noDataText={<FormattedMessage id=\"NODATA\" />}\n        defaultPageSize={3}\n        showPagination={false}\n        showPaginationTop={false}\n        showPaginationBottom={false}\n        showPageSizeOptions={false}\n        showPageJump={true}\n        collapseOnSortingChange={true}\n        collapseOnPageChange={true}\n        collapseOnDataChange={true}\n        freezeWhenExpanded={false}\n        sortable={false}\n        multiSort={true}\n        resizable={true}\n        defaultSortDesc={false}\n        pageText={<FormattedMessage id=\"PAGE\" />}\n        rowsText={\"\"}\n        className=\"-striped -highlight\"\n\n      />\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Header from \"../structure/Header\";\nimport Footer from \"../structure/Footer\";\nimport Menu from \"../structure/Menu\";\nimport TableWinners from \"../Tables/TableWinners\";\nimport WidgetFaster from \"../Widgets/Faster\"\nimport Loader from \"../Loader/Loader\";\nimport { FormattedMessage } from 'react-intl';\n\n\nconst API_KEY = `${process.env.REACT_APP_API_TRAIL_KEY}`;\nconst API_URL = `${process.env.REACT_APP_API_TRAIL_URL}`;\nconst TOKEN = API_KEY;\nvar size = window.innerWidth;\n\nexport default class Winners extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            CategoryList: [],\n            loadingCategory: false,\n            loadingAthlete: false,\n            CategoryName: \"Global\",\n            Positon: \"PositionGlobal\",\n            Gender: \"M\",\n            AthleteList: []\n        };\n        this.GetCategoryList();\n        this.GetCategoryList = this.GetCategoryList.bind(this);\n\n\n    }\n\n    StaticElementGlobal() {\n        if (this.state.CategoryName === \"Global\") {\n            return (<th key=\"Global\" > <a style={{ color: '#37474F', fontSize: '22px' }} onClick={() => this.UpdateStateCheckpoint(\"Global\")} href=\"##\"><FormattedMessage id=\"GERAL\" /></a></th>\n            )\n        }\n        else {\n            return (\n                <th key=\"Global\" > <a onClick={() => this.UpdateStateCheckpoint(\"Global\")} href=\"##\"><FormattedMessage id=\"GERAL\" /></a></th>\n            )\n\n        }\n    }\n\n    StaticElementGlobalM() {\n        if (this.state.CategoryName === \"Global M\") {\n            return (<th key=\"GlobalM\" > <a style={{ color: '#37474F', fontSize: '22px' }} onClick={() => this.UpdateStateCheckpoint(\"Global M\")} href=\"##\">{(size > 800) ? <FormattedMessage id=\"MEN\" /> : <i className=\"fa fa-fw fa-male\" />}</a></th>\n            )\n        }\n        else {\n            return (\n                <th key=\"GlobalM\" > <a onClick={() => this.UpdateStateCheckpoint(\"Global M\")} href=\"##\">{(size > 800) ? <FormattedMessage id=\"MEN\" /> : <i className=\"fa fa-fw fa-male\" />}</a></th>\n            )\n\n        }\n    }\n    StaticElementGlobalF() {\n        if (this.state.CategoryName === \"Global F\") {\n            return (\n\n                <th key=\"GlobalF\" > <a style={{ color: '#37474F', fontSize: '22px' }} onClick={() => this.UpdateStateCheckpoint(\"Global F\")} href=\"##\">{(size > 800) ? <FormattedMessage id=\"WOMEN\" /> : <i className=\"fa fa-fw fa-female\" />}</a></th>\n            )\n        }\n        else {\n            return (\n\n                <th key=\"GlobalF\" > <a onClick={() => this.UpdateStateCheckpoint(\"Global F\")} href=\"##\">{(size > 800) ? <FormattedMessage id=\"WOMEN\" /> : <i className=\"fa fa-fw fa-female\" />}</a></th>\n            )\n\n        }\n    }\n\n      /*get Category for the winners*/\n      GetCategoryList = async e => {\n        const API_CALL = await fetch(`${API_URL}/results/AthsFinalTimeGlobalWithPositions/${this.props.match.params.CompID}/`, {\n            headers: new Headers({\n                Authorization: TOKEN\n            })\n        });\n        const data = await API_CALL.json();\n        const dataSlice = data.slice(0, 3); //Get the 3 winners for the podio\n\n        //get the category\n        let category = data.map(athelete => {\n            return athelete.escalao;\n        });\n        //remove duplicates\n        const Tableuniquecategory = [...new Set(category)];\n        Tableuniquecategory.sort();\n        this.setState({ CategoryList: Tableuniquecategory, AthleteList: dataSlice,  loadingAthlete: true, loadingCategory: true });\n    };\n    /*get Global winners*/\n    GetAthleteListGender = async e => {\n        const API_CALL = await fetch(`${API_URL}/results/AthsFinalTimeGenderWithPositions/${this.props.match.params.CompID}/${this.state.Gender}/`, {\n            headers: new Headers({\n                Authorization: TOKEN\n            })\n        });\n        const data = await API_CALL.json();\n        const dataSlice = data.slice(0, 3); //Get the 3 winners for the podio\n        this.setState({ AthleteList: dataSlice, loadingAthlete: true });\n    };\n    /*get Category winners*/\n    GetAthleteListCategory = async e => {\n        const API_CALL = await fetch(`${API_URL}/results/AthsFinalTimeTierWithPositions/${this.props.match.params.CompID}/${this.state.CategoryName}/`, {\n            headers: new Headers({\n                Authorization: TOKEN\n            })\n        });\n        const data = await API_CALL.json();\n        const dataSlice = data.slice(0, 3); //Get the 3 winners for the podio\n        this.setState({ AthleteList: dataSlice, loadingAthlete: true });\n    };\n    /*props change*/\n    componentDidUpdate(prevProps) {\n        if (prevProps.match.params.CompID !== this.props.match.params.CompID) {\n            this.setState({ Positon: \"PositionGlobal\", loadingAthlete: false });\n            this.GetCategorysMenuList();\n            this.GetCategoryList();\n            this.UpdateStateCheckpoint(\"Global\");\n        }\n    }\n    /*Check if is global or tier*/\n    async UpdateStateCheckpoint(Category) {\n        if (Category === \"Global\") {\n            this.setState({ CategoryName: Category, Positon: \"PositionGlobal\", loadingAthlete: false }, this.GetCategoryList);\n        }\n        else if (Category === \"Global M\") {\n            this.setState({ CategoryName: Category, Positon: \"PositionGender\", Gender: \"M\", loadingAthlete: false }, this.GetAthleteListGender);\n        }\n        else if (Category === \"Global F\") {\n            this.setState({ CategoryName: Category, Positon: \"PositionGender\", Gender: \"F\", loadingAthlete: false }, this.GetAthleteListGender);\n        }\n        else {\n            this.setState({ CategoryName: Category, Positon: \"PositionTier\", loadingAthlete: false }, this.GetAthleteListCategory);\n        }\n    };\n    /*Loadings*/\n    LoadingAthlete() {\n        if (this.state.loadingAthlete === false) {\n            return (\n                <section className=\"content\">\n                    <div className=\"row\">\n                        <div className=\"col-xs-12\">\n                            <div className=\"box\">\n                                {/* /.box-body */}\n                                <div className=\"box-body\" style={{ display: 'flex', justifyContent: 'center' }}>\n                                    <Loader />\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            )\n\n        }\n        else {\n            return (\n                <section className=\"content\">\n                    <div className=\"row\">\n                        {/* widget for the Faster */}\n                    </div>\n                    <div\n                        style={{\n                            padding: \"10px 30px\",\n                            background: \"#3c8dbc\",\n                            zIndex: 999999,\n                            fontSize: 16,\n                            fontWeight: 600\n                        }}\n                    >\n                        <table className=\"text-center\" style={{ padding: \"5px\", border: \"5px\", width: \"100%\" }}>\n                            {this.LoadingCategory()}\n                        </table>\n\n\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-xs-12\">\n                            <div className=\"box box-primary\">\n                                {/* /.box-body */}\n                                <div className=\"box-body\"></div>\n                                <TableWinners\n                                    eventID={this.props.match.params.EventID}\n                                    competitionID={this.props.match.params.CompID}\n                                    athleteList={this.state.AthleteList}\n                                    loading={this.state.loading}\n                                    position={this.state.Positon}\n                                />\n\n                            </div>\n                        </div>\n                        {/* /.col */}\n                    </div>\n                    {/* /.row */}\n                </section>\n\n            )\n\n        }\n\n    }\n\n    LoadingCategory() {\n        if (this.state.loadingCategory === false) {\n            return (\n                <th> <a href=\"##\"><FormattedMessage id=\"LOADING\" /> <i class=\"fa fa-refresh fa-spin\"></i></a></th>\n            )\n        }\n        else {\n            return (\n                <tbody>\n                    <tr>\n\n                        {this.StaticElementGlobal()}\n                        {this.StaticElementGlobalM()}\n                        {this.StaticElementGlobalF()}\n                        {this.state.CategoryList.map(category => {\n                            if (this.state.CategoryName === category) {\n                                return (\n                                    <th key={category} > <a style={{ color: '#37474F', fontSize: '22px' }} onClick={() => this.UpdateStateCheckpoint(category)} href=\"##\">{category}</a></th>\n                                )\n                            }\n                            else {\n                                return (\n                                    <th key={category} > <a onClick={() => this.UpdateStateCheckpoint(category)} href=\"##\">{category}</a></th>\n                                )\n                            }\n\n                        })}\n                    </tr>\n                </tbody>\n\n            )\n\n        }\n\n    }\n    render() {\n        return (\n            <div>\n                <Header eventID={this.props.match.params.EventID} />\n                {/*Send the event id to the MENU, to get the competition list*/}\n                <Menu eventID={this.props.match.params.EventID} competitionID={this.props.match.params.CompID} />\n                {/*CONTENT*/}\n                <div>\n                    {/* Content Wrapper. Contains page content */}\n                    <div className=\"content-wrapper\">\n                        {/* Content Header (Page header) */}\n                        <section className=\"content-header\">\n                            <h1>\n                                {/* <span style={{ float: \"right\" }}> {this.state.CategoryName} </span>*/}\n                                <span> {this.props.match.params.CompName} </span>\n                            </h1>\n                        </section>\n                        {/* Main content */}\n                        {this.LoadingAthlete()}\n                    </div>\n                    {/* /.content-wrapper */}\n                </div>\n                <Footer eventID={this.props.match.params.EventID} />\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { FormattedMessage } from 'react-intl';\n\nexport default class FasterMale extends Component {\n    render() {\n        //get the faster time\n        let fasterTime = this.props.athleteList.map(athelete => {\n            return athelete.acumulated_time;\n        });\n        //get the faster athlete name\n        let fasterName = this.props.athleteList.map(athelete => {\n            return athelete.name;\n        });\n\n        return (\n\n            <div>\n                {/* Info boxes */}\n                <div className=\"col-md-3 col-sm-6 col-xs-12\">\n                    <div className=\"info-box\">\n                        <span className=\"info-box-icon bg-blue\"><i className=\"fa fa-fw fa-clock-o\" /></span>\n                        <div className=\"info-box-content\">\n                            <span className=\"info-box-text\"><FormattedMessage id=\"FASTER\" /></span>\n                            <span className=\"info-box-text\"> <strong>{fasterName[0]} </strong></span>\n                            <span className=\"info-box-number\"> <small>{fasterTime[0]}</small></span>\n                        </div>\n                        {/* /.info-box-content */}\n                    </div>\n                    {/* /.info-box */}\n                </div>\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from \"react\";\nimport ReactTable from \"react-table\";\nimport {FormatTime} from \"../Scripts/time\"\nimport { calculatePagination } from \"../Scripts/PaginationHelper\"\nimport { FormattedMessage } from 'react-intl';\n\nvar size = window.innerWidth;\n\n\nexport default class TableTier extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: this.props.loading\n    };\n  }\n\n  CheckSize() {\n    if (size > 800) {\n      return true;\n    }\n    else {\n      return false;\n    }}\n    checkPosition(position){\n      if (0=== parseInt(position))\n      {\n        return(\"-\")\n      }\n      else\n      {\n        return(position)\n  \n      }\n    }\n\n  CalculateKMperH(checkpointName,time){\n    var distance\n    this.props.checkpoint.map(checkpoint =>{\n      if(checkpoint.checkpoint.local===checkpointName){\n        distance=checkpoint.distancia_acumulada\n      }\n      return null\n    })\n    var km=distance/1000;\n    var TimeSplit= time.split(\":\")\n    var H=TimeSplit[0]\n    var M=TimeSplit[1]\n    var S=TimeSplit[2]\n    var finaltime=parseFloat(H)+parseFloat((M/60))+parseFloat((S/3600))\n    var KMperH=parseFloat(km)/parseFloat(finaltime)\n    if(isNaN(KMperH))\n    {\n      KMperH=0;\n    }\n  return(KMperH.toFixed(2))\n  }\n\n  CalculateMINperKM(checkpointName,time){\n    var MInperKM = parseFloat(60/this.CalculateKMperH(checkpointName,time))\n    if(!isFinite(MInperKM))\n    {\n      MInperKM=0;\n    }\n  return(MInperKM.toFixed(2));\n\n\n  }\n\n  getDistance(checkpointName){\n    var distance\n\n    this.props.checkpoint.map(checkpoint =>{\n      if(checkpoint.checkpoint.local===checkpointName){\n        distance=checkpoint.distancia_acumulada\n      }\n      return null\n    })\n    distance=parseFloat(distance/1000);\n    return(distance.toFixed(2)+\" km\")\n\n  }\n  getaltitude(checkpointName){\n    var Altitude\n\n    this.props.checkpoint.map(checkpoint =>{\n      if(checkpoint.checkpoint.local===checkpointName){\n        Altitude=checkpoint.checkpoint.altitude\n      }\n      return null\n    })\n    return(Altitude+\" m\")\n\n  }\n  render() {\n    //Info for the filters\n\n\n    //Table\n    const columns = [\n      {\n        Header: \"Id\",\n        accessor: \"athlete_id\",\n        sortable: false,\n        style: {\n          textAlign: \"Center\"\n        },\n        show: false\n      },\n      {\n        Header: (size>800)?<FormattedMessage id=\"POSITION\" />:\"POS\",\n        width:(size>800)?100:50,\n\n        accessor: \"PositionTier\",\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => (\n          <span> {this.checkPosition(row.value)} </span>\n        ),\n\n      },\n      {\n        Header: <FormattedMessage id=\"PLACE\" />,\n        accessor: \"local\",\n        filterable: false,\n        sortable: false,\n\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => row.value\n\n      },\n      {\n        Header: <FormattedMessage id=\"TIME\" />,\n        accessor: \"acumulated_time\",\n        filterable: false,\n        sortable: false,\n\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => FormatTime(row.value)\n\n      },\n      {\n        Header:  \"Dif 1º\" ,\n        accessor: \"dif\",\n        filterable: false,\n        sortable: false,\n\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => FormatTime(row.value)\n      },\n      {\n        Header: <FormattedMessage id=\"HEIGHT\" />,\n        filterable: false,\n        sortable: false,\n        show : this.CheckSize(),\n\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => this.getaltitude(row.original.local)\n      },\n      {\n        Header: <FormattedMessage id=\"DISTANCE\" />,\n        filterable: false,\n        sortable: false,\n        show : this.CheckSize(),\n\n\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => this.getDistance(row.original.local)\n      },\n      {\n        Header: \"KM/H\",\n        filterable: false,\n        sortable: false,\n        width:(size>800)?100:70,\n\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => this.CalculateKMperH(row.original.local,row.original.acumulated_time)\n      },\n      {\n        Header: \"MIN/KM\",\n        filterable: false,\n        sortable: false,\n        width:(size>800)?100:70,\n\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => this.CalculateMINperKM(row.original.local,row.original.acumulated_time)\n      }\n    ];\n    return (\n      <ReactTable\n        columns={columns}\n        data={this.props.athleteList}\n        filterable={false}\n        noDataText={<FormattedMessage id=\"NODATA\" />}\n        defaultPageSize={parseInt(this.props.athleteList.length)}\n        showPagination={false}\n        showPaginationTop={false}\n        showPaginationBottom={false}\n        showPageSizeOptions={false}\n        showPageJump={false}\n        collapseOnSortingChange={true}\n        collapseOnPageChange={true}\n        collapseOnDataChange={true}\n        freezeWhenExpanded={false}\n        sortable={false}\n        multiSort={false}\n        resizable={true}\n        defaultSortDesc={false}\n        pageText={<FormattedMessage id=\"PAGE\" />}\n        rowsText={\"\"}\n        className=\"-striped -highlight\"\n      />\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport ReactTable from \"react-table\";\nimport {FormatTime} from \"../Scripts/time\"\nimport { calculatePagination } from \"../Scripts/PaginationHelper\"\nimport { FormattedMessage } from 'react-intl';\n\nvar size = window.innerWidth;\n\n\nexport default class TableGlobal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: this.props.loading\n    };\n  }\n\n  CheckSize() {\n    if (size > 800) {\n      return true;\n    }\n    else {\n      return false;\n    }}\n    checkPosition(position){\n      if (0=== parseInt(position))\n      {\n        return(\"-\")\n      }\n      else\n      {\n        return(position)\n  \n      }\n    }\n\n  CalculateKMperH(checkpointName,time){\n    var distance\n    this.props.checkpoint.map(checkpoint =>{\n      if(checkpoint.checkpoint.local===checkpointName){\n        distance=checkpoint.distancia_acumulada\n      }\n      return null\n    })\n    var km=distance/1000;\n    var TimeSplit= time.split(\":\")\n    var H=TimeSplit[0]\n    var M=TimeSplit[1]\n    var S=TimeSplit[2]\n    var finaltime=parseFloat(H)+parseFloat((M/60))+parseFloat((S/3600))\n    var KMperH=parseFloat(km)/parseFloat(finaltime)\n    if(isNaN(KMperH))\n    {\n      KMperH=0;\n    }\n  return(KMperH.toFixed(2))\n  }\n\n  CalculateMINperKM(checkpointName,time){\n    var MInperKM = parseFloat(60/this.CalculateKMperH(checkpointName,time))\n    if(!isFinite(MInperKM))\n    {\n      MInperKM=0;\n    }\n  return(MInperKM.toFixed(2));\n\n\n  }\n\n  getDistance(checkpointName){\n    var distance\n\n    this.props.checkpoint.map(checkpoint =>{\n      if(checkpoint.checkpoint.local===checkpointName){\n        distance=checkpoint.distancia_acumulada\n      }\n      return null\n    })\n    distance=parseFloat(distance/1000);\n    return(distance.toFixed(2)+\" km\")\n\n  }\n  getaltitude(checkpointName){\n    var Altitude\n\n    this.props.checkpoint.map(checkpoint =>{\n      if(checkpoint.checkpoint.local===checkpointName){\n        Altitude=checkpoint.checkpoint.altitude\n      }\n      return null\n    })\n    return(Altitude+\" m\")\n\n  }\n  render() {\n    //Info for the filters\n\n\n    //Table\n    const columns = [\n      {\n        Header: \"Id\",\n        accessor: \"athlete_id\",\n        sortable: false,\n        style: {\n          textAlign: \"Center\"\n        },\n        show: false\n      },\n      {\n        Header: (size>800)?<FormattedMessage id=\"POSITION\" />:\"POS\",\n        width:(size>800)?100:50,\n\n        accessor: \"PositionGlobal\",\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => (\n          <span> {this.checkPosition(row.value)} </span>\n        ),\n\n      },\n      {\n        Header: <FormattedMessage id=\"PLACE\" />,\n        accessor: \"local\",\n        filterable: false,\n        sortable: false,\n\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => row.value\n\n      },\n      {\n        Header: <FormattedMessage id=\"TIME\" />,\n        accessor: \"acumulated_time\",\n        filterable: false,\n        sortable: false,\n\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => FormatTime(row.value)\n\n      },\n      {\n        Header:  \"Dif 1º\" ,\n        accessor: \"dif\",\n        filterable: false,\n        sortable: false,\n\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => FormatTime(row.value)\n      },\n      {\n        Header: <FormattedMessage id=\"HEIGHT\" />,\n        filterable: false,\n        sortable: false,\n        show : this.CheckSize(),\n\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => this.getaltitude(row.original.local)\n      },\n      {\n        Header: <FormattedMessage id=\"DISTANCE\" />,\n        filterable: false,\n        sortable: false,\n        show : this.CheckSize(),\n\n\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => this.getDistance(row.original.local)\n      },\n      {\n        Header: \"KM/H\",\n        filterable: false,\n        sortable: false,\n        width:(size>800)?100:70,\n\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => this.CalculateKMperH(row.original.local,row.original.acumulated_time)\n      },\n      {\n        Header: \"MIN/KM\",\n        filterable: false,\n        sortable: false,\n        width:(size>800)?100:70,\n\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => this.CalculateMINperKM(row.original.local,row.original.acumulated_time)\n      }\n    ];\n    return (\n      <ReactTable\n        columns={columns}\n        data={this.props.athleteList}\n        filterable={false}\n        noDataText={<FormattedMessage id=\"NODATA\" />}\n        defaultPageSize={parseInt(this.props.athleteList.length)}\n        showPagination={false}\n        showPaginationTop={false}\n        showPaginationBottom={false}\n        showPageSizeOptions={false}\n        showPageJump={false}\n        collapseOnSortingChange={true}\n        collapseOnPageChange={true}\n        collapseOnDataChange={true}\n        freezeWhenExpanded={false}\n        sortable={false}\n        multiSort={false}\n        resizable={true}\n        defaultSortDesc={false}\n        pageText={<FormattedMessage id=\"PAGE\" />}\n        rowsText={\"\"}\n        className=\"-striped -highlight\"\n      />\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport ReactTable from \"react-table\";\nimport {FormatTime} from \"../Scripts/time\"\nimport { calculatePagination } from \"../Scripts/PaginationHelper\"\nimport { FormattedMessage } from 'react-intl';\n\nvar size = window.innerWidth;\n\n\nexport default class TableGender extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: this.props.loading\n    };\n  }\n\n  CheckSize() {\n    if (size > 800) {\n      return true;\n    }\n    else {\n      return false;\n    }}\n    checkPosition(position){\n      if (0=== parseInt(position))\n      {\n        return(\"-\")\n      }\n      else\n      {\n        return(position)\n  \n      }\n    }\n\n  CalculateKMperH(checkpointName,time){\n    var distance\n    this.props.checkpoint.map(checkpoint =>{\n      if(checkpoint.checkpoint.local===checkpointName){\n        distance=checkpoint.distancia_acumulada\n      }\n      return null\n    })\n    var km=distance/1000;\n    var TimeSplit= time.split(\":\")\n    var H=TimeSplit[0]\n    var M=TimeSplit[1]\n    var S=TimeSplit[2]\n    var finaltime=parseFloat(H)+parseFloat((M/60))+parseFloat((S/3600))\n    var KMperH=parseFloat(km)/parseFloat(finaltime)\n    if(isNaN(KMperH))\n    {\n      KMperH=0;\n    }\n  return(KMperH.toFixed(2))\n  }\n\n  CalculateMINperKM(checkpointName,time){\n    var MInperKM = parseFloat(60/this.CalculateKMperH(checkpointName,time))\n    if(!isFinite(MInperKM))\n    {\n      MInperKM=0;\n    }\n  return(MInperKM.toFixed(2));\n\n\n  }\n\n  getDistance(checkpointName){\n    var distance\n\n    this.props.checkpoint.map(checkpoint =>{\n      if(checkpoint.checkpoint.local===checkpointName){\n        distance=checkpoint.distancia_acumulada\n      }\n      return null\n    })\n    distance=parseFloat(distance/1000);\n    return(distance.toFixed(2)+\" km\")\n\n  }\n  getaltitude(checkpointName){\n    var Altitude\n\n    this.props.checkpoint.map(checkpoint =>{\n      if(checkpoint.checkpoint.local===checkpointName){\n        Altitude=checkpoint.checkpoint.altitude\n      }\n      return null\n    })\n    return(Altitude+\" m\")\n\n  }\n  render() {\n    //Info for the filters\n\n\n    //Table\n    const columns = [\n      {\n        Header: \"Id\",\n        accessor: \"athlete_id\",\n        sortable: false,\n        style: {\n          textAlign: \"Center\"\n        },\n        show: false\n      },\n      {\n        Header: (size>800)?<FormattedMessage id=\"POSITION\" />:\"POS\",\n        width:(size>800)?100:50,\n\n        accessor: \"PositionGender\",\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => (\n          <span> {this.checkPosition(row.value)} </span>\n        ),\n\n      },\n      {\n        Header: <FormattedMessage id=\"PLACE\" />,\n        accessor: \"local\",\n        filterable: false,\n        sortable: false,\n\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => row.value\n\n      },\n      {\n        Header: <FormattedMessage id=\"TIME\" />,\n        accessor: \"acumulated_time\",\n        filterable: false,\n        sortable: false,\n\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => FormatTime(row.value)\n\n      },\n      {\n        Header:  \"Dif 1º\" ,\n        accessor: \"dif\",\n        filterable: false,\n        sortable: false,\n\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => FormatTime(row.value)\n      },\n      {\n        Header: <FormattedMessage id=\"HEIGHT\" />,\n        filterable: false,\n        sortable: false,\n        show : this.CheckSize(),\n\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => this.getaltitude(row.original.local)\n      },\n      {\n        Header: <FormattedMessage id=\"DISTANCE\" />,\n        filterable: false,\n        sortable: false,\n        show : this.CheckSize(),\n\n\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => this.getDistance(row.original.local)\n      },\n      {\n        Header: \"KM/H\",\n        filterable: false,\n        sortable: false,\n        width:(size>800)?100:70,\n\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => this.CalculateKMperH(row.original.local,row.original.acumulated_time)\n      },\n      {\n        Header: \"MIN/KM\",\n        filterable: false,\n        sortable: false,\n        width:(size>800)?100:70,\n\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => this.CalculateMINperKM(row.original.local,row.original.acumulated_time)\n      }\n    ];\n    return (\n      <ReactTable\n        columns={columns}\n        data={this.props.athleteList}\n        filterable={false}\n        noDataText={<FormattedMessage id=\"NODATA\" />}\n        defaultPageSize={parseInt(this.props.athleteList.length)}\n        showPagination={false}\n        showPaginationTop={false}\n        showPaginationBottom={false}\n        showPageSizeOptions={false}\n        showPageJump={false}\n        collapseOnSortingChange={true}\n        collapseOnPageChange={true}\n        collapseOnDataChange={true}\n        freezeWhenExpanded={false}\n        sortable={false}\n        multiSort={false}\n        resizable={true}\n        defaultSortDesc={false}\n        pageText={<FormattedMessage id=\"PAGE\" />}\n        rowsText={\"\"}\n        className=\"-striped -highlight\"\n      />\n    );\n  }\n}\n","import React, { Component } from 'react'\nimport { FormattedMessage } from 'react-intl';\n\nexport default class PositionGlobal extends Component {\n    render() {\n        return (\n            <div>\n                {/* Info boxes */}\n                <div className=\"col-md-3 col-sm-6 col-xs-12\">\n                    <div className=\"info-box\">\n                        <span className={`info-box-icon bg-${this.props.color}`}><i className=\"ion ion-ios-people-outline\" /></span>\n                        <div className=\"info-box-content\">\n                            <span className=\"info-box-text\"><FormattedMessage id=\"GERAL\" />: <strong>{this.props.positionGlobal}</strong></span>\n                            <span className=\"info-box-text\"><FormattedMessage id=\"CATEGORY\" />: <strong>{this.props.positionTier}</strong></span>\n                            <span className=\"info-box-text\"><FormattedMessage id=\"GENDER\" />: <strong>{this.props.positionGender}</strong></span>\n                        </div>\n                        {/* /.info-box-content */}\n                    </div>\n                    {/* /.info-box */}\n                </div>\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class FasterMale extends Component {\n    render() {\n\n        return (\n\n            <div>\n                {/* Info boxes */}\n                <div className=\"col-md-3 col-sm-6 col-xs-12\">\n                    <div className=\"info-box\">\n                        <span className={`info-box-icon bg-${this.props.color}`}><i className=\"fa fa-refresh fa-spin\" /></span>\n                        <div className=\"info-box-content\">\n                            <span className=\"info-box-text\">{this.props.text}</span>\n                        </div>\n                        {/* /.info-box-content */}\n                    </div>\n                    {/* /.info-box */}\n                </div>\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class PositionGlobal extends Component {\n    render() {\n        return (\n            <div>\n                {/* Info boxes */}\n                <div className=\"col-md-3 col-sm-6 col-xs-12\">\n                    <div className=\"info-box\">\n                        <span className={`info-box-icon bg-${this.props.color}`}><i className=\"fa fa-fw fa-clock-o\" /></span>\n                        <div className=\"info-box-content\">\n                            <span className=\"info-box-text\">{this.props.name}</span>\n                            <span className=\"info-box-number\">{this.props.time}</span>\n                        </div>\n                        {/* /.info-box-content */}\n                    </div>\n                    {/* /.info-box */}\n                </div>\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class velocity extends Component {\n    render() {\n        return (\n            <div>\n            {/* Info boxes */}\n            <div className=\"col-md-3 col-sm-6 col-xs-12\">\n                <div className=\"info-box\">\n                    <span className={`info-box-icon bg-${this.props.color}`}><i className=\"fa fa-dashboard\" /></span>\n                    <div className=\"info-box-content\">\n                        <span className=\"info-box-text\">{this.props.name}</span>\n                        <span className=\"info-box-number\">{this.props.speedKM}</span>\n                        <span className=\"info-box-number\">{this.props.speedMIN}</span>\n\n                    </div>\n                    {/* /.info-box-content */}\n                </div>\n                {/* /.info-box */}\n            </div>\n\n        </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { FormattedMessage } from 'react-intl';\n\nexport default class LastPlace extends Component {\n    render() {\n        return (\n\n            <div>\n                {/* Info boxes */}\n                <div className=\"col-md-3 col-sm-6 col-xs-12\">\n                    <div className=\"info-box\">\n                        <span className={`info-box-icon bg-${this.props.color}`}><i className=\"fa fa-fw fa-map-signs\" /></span>\n                        <div className=\"info-box-content\">\n                            <span className=\"info-box-text\"><FormattedMessage id=\"LAST_POINT\" /></span>\n                            <span className=\"info-box-number\">{this.props.place}</span>\n                        </div>\n                        {/* /.info-box-content */}\n                    </div>\n                    {/* /.info-box */}\n                </div>\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport Header from \"../structure/Header\";\nimport Footer from \"../structure/Footer\";\nimport Menu from \"../structure/Menu\";\nimport TableTier from \"../Tables/TableTier\"\nimport TableGlobal from \"../Tables/TableGlobal\"\nimport TableGender from \"../Tables/TableGender\"\nimport Loader from \"../Loader/Loader\";\nimport ChartVelocity from \"../Chart/Velocity\"\nimport ChartPosition from \"../Chart/Position\"\nimport PositonWidget from \"../Widgets/Position\"\nimport LoadingWidget from \"../Widgets/Loading\"\nimport TimeWidget from '../Widgets/Time'\nimport VelocityWidget from '../Widgets/velocity';\nimport PlaceWidget from '../Widgets/LastPlace';\nimport FavoriteChecker from \"../favorites/favoritesChecker\"\nimport { FormattedMessage } from 'react-intl';\n\nconst API_KEY = `${process.env.REACT_APP_API_TRAIL_KEY}`;\nconst API_URL = `${process.env.REACT_APP_API_TRAIL_URL}`;\nconst TOKEN = API_KEY;\nconst MICROSERVICE_PDFS = `${process.env.REACT_APP_PUBLIC_MICROSERVICE_PDFS}`;\n\n//for the charts\nvar arrayGlobal = [];\nvar arrayGender = [];\nvar arrayTier = [];\nvar arrayFaster = [];\nvar LastCheckpointID = 0;\nvar Faster = [];\nvar FasterID = 0;\nexport default class AthleteDetail extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loadingGlobal: false,\n            loadingTier: false,\n            loadingGender: false,\n            loadingCheckpoint: false,\n            loadingList: false,\n            loadingFaster: false,\n            ListGlobal: [],\n            ListTier: [],\n            ListGender: [],\n            ListFaster: [],\n            PersonalInfo: [],\n            athleteList: [],\n            athleteListStatus: [],\n            CheckpointInfo: [],\n            AthleteID: this.props.match.params.AthleteID,\n        };\n\n    }\n\n    componentWillMount() {\n        //CACHES\n        try {\n            if (localStorage.getItem(`ListGlobal${this.props.match.params.EventID}${this.props.match.params.AthleteID}`)) {\n                const ListGlobal = JSON.parse(localStorage.getItem(`ListGlobal${this.props.match.params.EventID}${this.props.match.params.AthleteID}`))\n                this.setState({ ListGlobal: ListGlobal, loadingGlobal: true })\n            }\n            if (localStorage.getItem(`PersonalInfo${this.props.match.params.EventID}${this.props.match.params.AthleteID}`)) {\n                const PersonalInfo = JSON.parse(localStorage.getItem(`PersonalInfo${this.props.match.params.EventID}${this.props.match.params.AthleteID}`))\n                this.setState({ PersonalInfo: PersonalInfo })\n            }\n            if (localStorage.getItem(`ListFaster${this.props.match.params.CompID}${this.props.match.params.FasterID}`)) {\n                const ListFaster = JSON.parse(localStorage.getItem(`ListFaster${this.props.match.params.CompID}${this.props.match.params.FasterID}`))\n                this.setState({ ListFaster: ListFaster, loadingFaster: true })\n            }\n            if (localStorage.getItem(`ListTier${this.props.match.params.CompID}${this.props.match.params.AthleteID}`)) {\n                const ListTier = JSON.parse(localStorage.getItem(`ListTier${this.props.match.params.CompID}${this.props.match.params.AthleteID}`))\n                this.setState({ ListTier: ListTier, loadingTier: true })\n            }\n            if (localStorage.getItem(`ListGender${this.props.match.params.CompID}${this.props.match.params.AthleteID}`)) {\n                const ListGender = JSON.parse(localStorage.getItem(`ListGender${this.props.match.params.CompID}${this.props.match.params.AthleteID}`))\n                this.setState({ ListGender: ListGender, loadingGender: true })\n            }\n            if (localStorage.getItem(`CheckpointInfo${this.props.match.params.CompID}`)) {\n                const CheckpointInfo = JSON.parse(localStorage.getItem(`CheckpointInfo${this.props.match.params.CompID}`))\n                this.setState({ CheckpointInfo: CheckpointInfo, loadingCheckpoint: true })\n            }\n            if (localStorage.getItem(`athleteListStatus${this.props.match.params.CompID}${this.props.match.params.AthleteID}`)) {\n                const athleteListStatus = JSON.parse(localStorage.getItem(`athleteListStatus${this.props.match.params.CompID}${this.props.match.params.AthleteID}`))\n                this.setState({ athleteListStatus: athleteListStatus, loadingList: true })\n            }\n            if (localStorage.getItem(`Faster${this.props.match.params.CompID}${LastCheckpointID}`)) {\n                const data = JSON.parse(localStorage.getItem(`Faster${this.props.match.params.CompID}${LastCheckpointID}`))\n                Faster = data\n            }\n        }\n        catch{\n\n        }\n\n        //END CACHE\n\n        this.GetListGlobal();\n        this.GetListTier();\n        this.GetListGender();\n        this.GetCheckpointInfo();\n        this.GetFaster();\n\n    }\n\n    GetListGlobal = async e => {\n        const API_CALL = await fetch(`${API_URL}/results/AthTimesGlobalWithPositions/${this.props.match.params.CompID}/${this.props.match.params.AthleteID}/`, {\n            headers: new Headers({\n                Authorization: TOKEN\n            })\n        });\n        const data = await API_CALL.json();\n        const dataSlice = data.slice(0, 1); //Get the personal info\n        try {\n            localStorage.setItem(`ListGlobal${this.props.match.params.EventID}${this.props.match.params.AthleteID}`, JSON.stringify(data))\n            localStorage.setItem(`PersonalInfo${this.props.match.params.EventID}${this.props.match.params.AthleteID}`, JSON.stringify(dataSlice))\n        }\n        catch{\n            localStorage.clear();\n        }\n        this.setState({ ListGlobal: data, loadingGlobal: true, PersonalInfo: dataSlice });\n    };\n\n    GetListGlobalFaster = async e => {\n        if (FasterID !== 0) {\n            const API_CALL = await fetch(`${API_URL}/results/AthTimesGlobalWithPositions/${this.props.match.params.CompID}/${FasterID}/`, {\n                headers: new Headers({\n                    Authorization: TOKEN\n                })\n            });\n            const data = await API_CALL.json();\n            try {\n                localStorage.setItem(`ListFaster${this.props.match.params.CompID}${this.props.match.params.FasterID}`, JSON.stringify(data))\n            }\n            catch{\n                localStorage.clear();\n            }\n            this.setState({ ListFaster: data, loadingFaster: true });\n        }\n\n    };\n\n    GetListTier = async e => {\n        const API_CALL = await fetch(`${API_URL}/results/AthTimeTierWithPositions/${this.props.match.params.CompID}/${this.props.match.params.AthleteID}/`, {\n            headers: new Headers({\n                Authorization: TOKEN\n            })\n        });\n        const data = await API_CALL.json();\n        try {\n            localStorage.setItem(`ListTier${this.props.match.params.CompID}${this.props.match.params.AthleteID}`, JSON.stringify(data))\n        }\n        catch{\n            localStorage.clear();\n        }\n        this.setState({ ListTier: data, loadingTier: true });\n    };\n\n    GetListGender = async e => {\n        const API_CALL = await fetch(`${API_URL}/results/AthTimeGenderWithPositions/${this.props.match.params.CompID}/${this.props.match.params.AthleteID}/`, {\n            headers: new Headers({\n                Authorization: TOKEN\n            })\n        });\n        const data = await API_CALL.json();\n        try {\n\n            localStorage.setItem(`ListGender${this.props.match.params.CompID}${this.props.match.params.AthleteID}`, JSON.stringify(data))\n        }\n        catch{\n            localStorage.clear();\n        }\n        this.setState({ ListGender: data, loadingGender: true });\n    };\n\n    GetCheckpointInfo = async e => {\n        const API_CALL = await fetch(`${API_URL}/competition/Checkpoints/${this.props.match.params.CompID}/`, {\n            headers: new Headers({\n                Authorization: TOKEN\n            })\n        });\n        const data = await API_CALL.json();\n        try {\n            localStorage.setItem(`CheckpointInfo${this.props.match.params.CompID}`, JSON.stringify(data))\n\n        }\n        catch{\n            localStorage.clear();\n        }\n        this.setState({ CheckpointInfo: data, loadingCheckpoint: true });\n    };\n\n    getAthletsList = async e => {\n\n        const API_CALL = await fetch(`${API_URL}/competition/AthInfo/${this.props.match.params.CompID}/${this.props.match.params.AthleteID}/`, {\n            headers: new Headers({\n                Authorization: TOKEN\n            })\n        });\n        const data = await API_CALL.json();\n        data.map(Athlete => {\n            if (Athlete.athlete.athlete_id === parseInt(this.state.AthleteID)) {\n                try {\n                    localStorage.setItem(`athleteListStatus${this.props.match.params.CompID}${this.props.match.params.AthleteID}`, JSON.stringify(Athlete))\n                }\n                catch{\n                    localStorage.clear();\n\n                }\n                this.setState({ athleteListStatus: Athlete, loadingList: true });\n            }\n            return null;\n\n        })\n\n    };\n\n    GetFaster = async e => {\n        if (LastCheckpointID !== 0) {\n            const API_CALL = await fetch(`${API_URL}/results/AthFasterTimeWithGlobalPositions/${this.props.match.params.CompID}/${LastCheckpointID}/`, {\n                headers: new Headers({\n                    Authorization: TOKEN\n                })\n            });\n            const data = await API_CALL.json();\n            if (data.length > 0) {\n                try {\n                    localStorage.setItem(`Faster${this.props.match.params.CompID}${LastCheckpointID}`, JSON.stringify(data))\n                }\n                catch{\n                    localStorage.clear();\n\n                }\n                Faster = data;\n                this.getFasterTimes();\n            }\n        }\n    };\n\n    PopulateArrays() {\n        arrayTier = [];\n        this.state.ListTier.map(list => list.map(Listinside => arrayTier.push(Listinside)))\n        arrayGender = [];\n        this.state.ListGender.map(list => list.map(Listinside => arrayGender.push(Listinside)))\n        arrayGlobal = [];\n        this.state.ListGlobal.map(list => list.map(Listinside => arrayGlobal.push(Listinside)))\n        this.getLastCheckpoint();\n        arrayFaster = [];\n        this.state.ListFaster.map(list => list.map(Listinside => arrayFaster.push(Listinside)))\n    }\n\n    tableTier() {\n        if (this.state.loadingTier === false) {\n            return (<Loader />)\n        } else {\n            if (arrayTier.length > 0) {\n                return (\n                    <TableTier athleteList={arrayTier} checkpoint={this.state.CheckpointInfo} />\n                )\n            }\n            else {\n                return (\n                    <p style={{ textAlign: \"center\" }}><FormattedMessage id=\"NODATA\" /> </p>)\n            }\n        }\n\n    }\n\n    tableGender() {\n        if (this.state.loadingGender === false) {\n            return (<Loader />)\n\n        } else {\n            if (arrayGender.length > 0) {\n                return (\n                    <TableGender athleteList={arrayGender} checkpoint={this.state.CheckpointInfo} />\n                )\n            }\n            else {\n                return (<p style={{ textAlign: \"center\" }}><FormattedMessage id=\"NODATA\" /></p>)\n            }\n\n        }\n\n    }\n\n    tableGlobal() {\n        if (this.state.loadingGlobal === false) {\n            return (<Loader />)\n        } else {\n            if (arrayGlobal.length > 0) {\n                //Calculate the data for the arrays\n                return (\n                    <TableGlobal athleteList={arrayGlobal} checkpoint={this.state.CheckpointInfo} />\n                )\n            }\n            else {\n                return (<p style={{ textAlign: \"center\" }}><FormattedMessage id=\"NODATA\" /></p>)\n            }\n        }\n\n    }\n\n    ChartVelocityKMRender() {\n        if (this.state.loadingFaster === false) {\n            return (<Loader />)\n        } else {\n            if (this.state.athleteListStatus.inscription_status_code === \"FIN\" || this.state.athleteListStatus.inscription_status_code === \"EP\") {\n                if (arrayGlobal.length > 0 && !!(this.state.athleteListStatus.athlete.name)) {\n                    return (\n\n                        <ChartVelocity checkpoint={arrayGlobal} Name={this.state.athleteListStatus.athlete.name} Faster={arrayFaster.map(data => this.CalculateKMperH(data.local, data.acumulated_time))} Normal={arrayGlobal.map(data => this.CalculateKMperH(data.local, data.acumulated_time))} />\n                    )\n                }\n                else {\n                    return (<p><FormattedMessage id=\"NODATA\" /></p>)\n                }\n            }\n\n\n        }\n    }\n\n    ChartVelocityMINRender() {\n        if (this.state.loadingFaster === false) {\n            return (<Loader />)\n        } else {\n            if (this.state.athleteListStatus.inscription_status_code === \"FIN\" || this.state.athleteListStatus.inscription_status_code === \"EP\") {\n                if (arrayGlobal.length > 0 && !!(this.state.athleteListStatus.athlete.name)) {\n                    return (\n\n                        <ChartVelocity checkpoint={arrayGlobal} Name={this.state.athleteListStatus.athlete.name} Faster={arrayFaster.map(data => this.CalculateMINperKM(data.local, data.acumulated_time))} Normal={arrayGlobal.map(data => this.CalculateMINperKM(data.local, data.acumulated_time))} />\n                    )\n                }\n                else {\n                    return (<p><FormattedMessage id=\"NODATA\" /></p>)\n                }\n            }\n\n\n        }\n    }\n\n    ChartPositionRender() {\n        if (this.state.loadingGlobal === false && this.state.loadingFaster === false) {\n            return (<Loader />)\n        } else {\n            if (this.state.athleteListStatus.inscription_status_code === \"FIN\" || this.state.athleteListStatus.inscription_status_code === \"EP\") {\n                if (arrayGlobal.length > 0 && arrayGender.length > 0 && arrayTier.length > 0) {\n                    //Calculate the data for the arrays\n                    var global = []\n                    var Tier = []\n                    var gender = []\n\n                    arrayGlobal.map(data => global.push(data.PositionGlobal))\n                    arrayTier.map(data => Tier.push(data.PositionTier))\n                    arrayGender.map(data => gender.push(data.PositionGender))\n\n                    return (\n                        <ChartPosition checkpoint={arrayGlobal} Global={global} Tier={Tier} Gender={gender} />\n                    )\n                }\n                else {\n                    return (<p><FormattedMessage id=\"NODATA\" /></p>)\n                }\n            }\n\n        }\n    }\n\n    componentDidMount() {\n        this.getAthletsList()\n\n    }\n\n    getStatus() {\n\n        if (this.state.athleteListStatus.inscription_status_code === \"FIN\") {\n            return (<p style={{ color: \"#3c8dbc\" }} className=\"text-muted text-center\"> <strong><FormattedMessage id=\"FIN\" /></strong></p>);\n        } else if (this.state.athleteListStatus.inscription_status_code === \"EP\") {\n            return (<p style={{ color: \"#00a65a\" }} className=\"text-muted text-center\"> <strong><FormattedMessage id=\"EP\" /></strong></p>);\n        } else if (this.state.athleteListStatus.inscription_status_code === \"DNS\") {\n            return (<p style={{ color: \"#f39c12\" }} className=\"text-muted text-center\"> <strong><FormattedMessage id=\"DNS\" /></strong></p>);\n        } else if (this.state.athleteListStatus.inscription_status_code === \"D\") {\n            return (<p style={{ color: \"#f39c12\" }} className=\"text-muted text-center\"> <strong><FormattedMessage id=\"D\" /></strong></p>);\n        } else if (this.state.athleteListStatus.inscription_status_code === \"DNF\") {\n            return (<p style={{ color: \"#dd4b39\" }} className=\"text-muted text-center\"> <strong><FormattedMessage id=\"DNF\" /></strong></p>);\n        } else if (this.state.athleteListStatus.inscription_status_code === \"DSQ\") {\n            return (<p style={{ color: \"#dd4b39\" }} className=\"text-muted text-center\"> <strong><FormattedMessage id=\"DSQ\" /></strong></p>);\n        }\n    }\n\n    CalculateKMperH(checkpointName, time) {\n        var distance\n        this.state.CheckpointInfo.map(checkpoint => {\n            if (checkpoint.checkpoint.local === checkpointName) {\n                distance = checkpoint.distancia_acumulada\n            }\n            return null;\n        })\n        var km = distance / 1000;\n        var TimeSplit = time.split(\":\")\n        var H = TimeSplit[0]\n        var M = TimeSplit[1]\n        var S = TimeSplit[2]\n        var finaltime = parseFloat(H) + parseFloat((M / 60)) + parseFloat((S / 3600))\n        var KMperH = parseFloat(km) / parseFloat(finaltime)\n        if (isNaN(KMperH)) {\n            KMperH = 0;\n        }\n        return (KMperH.toFixed(2));\n    }\n\n    CalculateMINperKM(checkpointName, time) {\n        var MInperKM = parseFloat(60 / this.CalculateKMperH(checkpointName, time))\n        if (!isFinite(MInperKM)) {\n            MInperKM = 0;\n        }\n        return (MInperKM.toFixed(2));\n    }\n\n    PositionWidgetRender() {\n        if (!!(arrayGlobal[arrayGlobal.length - 1]) && !!(arrayTier[arrayTier.length - 1]) && !!(arrayGender[arrayGender.length - 1])) //check if is undefined, is because is awaiting for the api response\n        {\n            if (this.state.athleteListStatus.inscription_status_code === \"FIN\" || this.state.athleteListStatus.inscription_status_code === \"EP\") {\n                return (\n                    <div>\n                        <PositonWidget color={\"aqua\"} positionGlobal={arrayGlobal[arrayGlobal.length - 1].PositionGlobal} positionTier={arrayTier[arrayTier.length - 1].PositionTier} positionGender={arrayGender[arrayGender.length - 1].PositionGender} />\n                    </div>\n                )\n            }\n\n        }\n        else\n            if (this.state.athleteListStatus.inscription_status_code === \"FIN\" || this.state.athleteListStatus.inscription_status_code === \"EP\") {\n                return (\n                    < LoadingWidget color={\"aqua\"} text={< FormattedMessage id=\"LOADING\" />} />\n                )\n            }\n\n    }\n\n    TimeVelocityWidgetRender() {\n\n        if (!!(arrayGlobal[arrayGlobal.length - 1])) //check if is undefined, is because is awaiting for the api response\n        {\n            var KM = 0;\n            var MIN = 0;\n            arrayGlobal.map(data => {\n                if (parseFloat(this.CalculateKMperH(data.local, data.acumulated_time)) !== 0) {\n                    KM = KM + parseFloat(this.CalculateKMperH(data.local, data.acumulated_time))\n                }\n                return null\n            })\n            arrayGlobal.map(data => {\n                if (parseFloat(this.CalculateMINperKM(data.local, data.acumulated_time)) !== 0) {\n                    MIN = MIN + parseFloat(this.CalculateMINperKM(data.local, data.acumulated_time))\n                }\n                return null\n            })\n\n            var AvarageKM = (KM / (arrayGlobal.length - 1)).toFixed(2)\n            var AvarageMIN = (MIN / (arrayGlobal.length - 1)).toFixed(2)\n            if (this.state.athleteListStatus.inscription_status_code === \"FIN\" || this.state.athleteListStatus.inscription_status_code === \"EP\") {\n\n                return (\n                    <div>\n                        <TimeWidget time={arrayGlobal[arrayGlobal.length - 1].acumulated_time} name={<FormattedMessage id=\"TIME\" />} color={\"yellow\"} />\n                        <VelocityWidget name={<FormattedMessage id=\"AVERAGESPEED\" />} speedKM={AvarageKM + \" KM/H\"} speedMIN={AvarageMIN + \" MIN/KM\"} color={\"red\"} />\n                        <PlaceWidget place={arrayGlobal[arrayGlobal.length - 1].local} color={\"green\"} />\n                    </div>\n\n                )\n            }\n        }\n        else {\n            if (this.state.athleteListStatus.inscription_status_code === \"FIN\" || this.state.athleteListStatus.inscription_status_code === \"EP\") {\n                return (\n                    <div>\n\n                        < LoadingWidget color={\"yellow\"} text={< FormattedMessage id=\"LOADING\" />} />\n                        < LoadingWidget color={\"red\"} text={< FormattedMessage id=\"LOADING\" />} />\n                        < LoadingWidget color={\"green\"} text={< FormattedMessage id=\"LOADING\" />} />\n                    </div>\n                )\n            }\n\n        }\n    }\n\n    chartsRender() {\n        if (this.state.athleteListStatus.inscription_status_code === \"FIN\" || this.state.athleteListStatus.inscription_status_code === \"EP\") {\n\n            return (\n                <div style={{ float: 'right' }} className=\"col-md-9\">\n                    <div className=\"nav-tabs-custom\" >\n                        <ul className=\"nav nav-tabs\">\n                            <li className=\"active\"><a href=\"#VelocityKMperH\" data-toggle=\"tab\">< FormattedMessage id=\"SPEED\" /> KM/H</a></li>\n                            <li ><a href=\"#VelocityMINperH\" data-toggle=\"tab\">< FormattedMessage id=\"SPEED\" /> MIN/KM</a></li>\n                            <li><a href=\"#Position\" data-toggle=\"tab\">< FormattedMessage id=\"POSITION\" /></a></li>\n                        </ul>\n                        <div className=\"tab-content\">\n                            <div className=\"active tab-pane\" id=\"VelocityKMperH\">\n                                {/* Post */}\n                                <div className=\"post\">\n                                    <div className=\"chart\">\n                                        {this.ChartVelocityKMRender()}\n                                    </div>\n                                </div>\n                                {/* /.post */}\n                            </div>\n                            <div className=\"tab-pane\" id=\"VelocityMINperH\">\n                                {/* Post */}\n                                <div className=\"post\">\n                                    <div className=\"chart\">\n                                        {this.ChartVelocityMINRender()}\n                                    </div>\n                                </div>\n                                {/* /.post */}\n                            </div>\n                            {/* /.tab-pane */}\n                            <div className=\"tab-pane\" id=\"Position\">\n                                <div className=\"post\">\n                                    <div className=\"chart\">\n                                        {this.ChartPositionRender()}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        {/* /.tab-content */}\n                    </div>\n                    {/* /.nav-tabs-custom */}\n                </div>\n\n            )\n        }\n\n\n    }\n\n    getLastCheckpoint() {\n        var LastPositon = (arrayGlobal.slice(-1).pop())\n        if (!!(LastPositon)) {\n            this.state.CheckpointInfo.map(checkpoint => {\n                if (checkpoint.checkpoint.local === LastPositon.local) {\n                    if (LastCheckpointID === 0) {\n                        LastCheckpointID = checkpoint.checkpoint.checkpoint_id\n                        this.GetFaster();\n                    }\n\n                }\n                return null\n            }\n            )\n        }\n    }\n\n    getFasterTimes() {\n        if (Faster.length > 0) {\n            if (FasterID === 0) {\n                Faster.map(athlete => FasterID = athlete.athlete_id);\n                this.GetListGlobalFaster();\n\n            }\n\n        }\n    }\n\n    showCertificateButton() {\n\n        if (!!(this.state.athleteListStatus.athlete)) {\n\n            if (this.state.athleteListStatus.competition.certification === 1 && this.state.athleteListStatus.inscription_status_code === \"FIN\") {\n                if (!!(arrayGlobal[arrayGlobal.length - 1]) && !!(arrayTier[arrayTier.length - 1]) && !!(arrayGender[arrayGender.length - 1])) {\n                    return (\n                        <div>\n                            <br></br>\n                            <button href=\"##\" className=\"btn btn-success  btn-block\" onClick={() => this.getCertificate()}><b>< FormattedMessage id=\"CERTIFICATE\" /></b></button>\n                        </div>\n                    )\n                }\n                else {\n                    return (\n                        <div>\n                            <br></br>\n\n                            <button disabled className=\"btn btn-success  btn-block\" ><b> <i class=\"fa fa-refresh fa-spin\"></i> < FormattedMessage id=\"CERTIFICATE\" /></b>\n                            </button>\n\n                        </div>)\n                }\n            }\n\n        }\n    }\n\n    getCertificate() {\n        if (!!(this.state.athleteListStatus.athlete) && !!(arrayGlobal[arrayGlobal.length - 1]) && !!(arrayTier[arrayTier.length - 1]) && !!(arrayGender[arrayGender.length - 1])) {\n\n            var ID_Template = this.state.athleteListStatus.competition.cert_tpl\n            var Codigo_Validacao = this.state.athleteListStatus.competition.cert_code\n            var Nome_Atleta = encodeURIComponent(this.state.athleteListStatus.athlete.name)\n            var Sexo = this.state.athleteListStatus.athlete.gender\n            var Prova = this.state.athleteListStatus.competition.name\n            var Posicao_Escalao = arrayTier[arrayTier.length - 1].PositionTier\n            var Escalao = encodeURIComponent(this.state.athleteListStatus.category)\n            var Posicao_Geral = arrayGlobal[arrayGlobal.length - 1].PositionGlobal\n            var Tempo = arrayGlobal[arrayGlobal.length - 1].acumulated_time\n            var Peitoral = this.state.athleteListStatus.dorsal_number\n            var Clube = encodeURIComponent(this.state.athleteListStatus.club)\n\n            var Total_Info_Recebida = ID_Template + Nome_Atleta + Sexo + Prova + Posicao_Geral + Escalao + Posicao_Escalao + Tempo + Peitoral + Clube + Codigo_Validacao;\n\n            var md5 = require('md5');\n            var Hash_Calculada = md5(Total_Info_Recebida)\n            var url = `${MICROSERVICE_PDFS}/${ID_Template}/${Nome_Atleta}/${Sexo}/${Prova}/${Posicao_Geral}/${Escalao}/${Posicao_Escalao}/${Tempo}/${Peitoral}/${Clube}/${Hash_Calculada}`\n\n            window.location.replace(url);\n\n        }\n    }\n\n\n\n    render() {\n        this.PopulateArrays() //populate da data for the tables and widgets\n        return (\n            <div>\n                <Header eventID={this.props.match.params.EventID} />\n                {/*Send the event id to the MENU, to get the competition list*/}\n                <Menu eventID={this.props.match.params.EventID} competitionID={this.props.match.params.CompID} />\n                <div className=\"content-wrapper\">\n                    <section class=\"content-header\" >\n                        {/*Check if data is loading*/}\n                        {(() => {\n                            if (this.state.loadingCheckpoint === false) {\n                                return (\n                                    <section className=\"content\">\n\n                                        <div className=\"row\">\n                                            <div className=\"col-xs-12\">\n                                                <div className=\"box\">\n                                                    {/* /.box-body */}\n                                                    <div className=\"box-body\" style={{ display: 'flex', justifyContent: 'center' }}>\n                                                        <Loader />\n                                                    </div>\n\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </section>\n                                )\n                            }\n                            else {\n                                return (\n                                    <section className=\"content\">\n                                        <div className=\"row\">\n                                            {/* widget for the number of participants */}\n                                            {this.PositionWidgetRender()}\n                                            {this.TimeVelocityWidgetRender()}\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-md-3\">\n                                                {/* Profile Image */}\n                                                <div className=\"box box-primary\">\n                                                    <div className=\"box-body box-profile\">\n                                                        <img className=\"profile-user-img img-responsive img-circle\" src={!!(this.state.athleteListStatus.athlete) ? this.state.athleteListStatus.athlete.photo_url : \"\"} alt=\"User profile picture\" />\n                                                        {/* NEED TO CHECK IF IS UNDEFINED OR IT WILL CRASH*/}\n                                                        <h3 className=\"profile-username text-center\"> {!!(this.state.athleteListStatus.athlete) ? this.state.athleteListStatus.athlete.name : \"\"}</h3>\n                                                        {this.getStatus()}\n                                                        <ul className=\"list-group list-group-unbordered\">\n                                                            <li className=\"list-group-item\">\n                                                                <b>< FormattedMessage id=\"DORSAL\" /></b> <div className=\"pull-right\">{this.state.athleteListStatus.dorsal_number}</div>\n                                                            </li>\n                                                            <li className=\"list-group-item\">\n                                                                <b>< FormattedMessage id=\"COUNTRY\" /></b> <div className=\"pull-right\"> {!!(this.state.athleteListStatus.athlete) ? this.state.athleteListStatus.athlete.nacionality : \"\"}</div>\n                                                            </li>\n\n                                                            <li className=\"list-group-item\">\n                                                                <b>< FormattedMessage id=\"CATEGORY\" /></b> <div className=\"pull-right\">{this.state.athleteListStatus.category}</div>\n                                                            </li>\n                                                            <li className=\"list-group-item\">\n                                                                <p style={{textAlign:\"right\"}}>\n                                                                <div className=\"pull-left\"><b>< FormattedMessage id=\"TEAM\" /></b> </div> {!!(this.state.athleteListStatus.club) ? this.state.athleteListStatus.club : \"\"}\n                                                                </p>\n                                                            </li>\n                                                            <li className=\"list-group-item\">\n                                                                <b>< FormattedMessage id=\"COMPETITION\" /></b> <div className=\"pull-right\"> {!!(this.state.athleteListStatus.competition) ? this.state.athleteListStatus.competition.name : \"\"}</div>\n                                                            </li>\n                                                        </ul>\n                                                        <div>\n                                                            <FavoriteChecker ListaFavoritos={this.props.match.params.AthleteID} AthleteDetail={true} />\n                                                        </div>\n                                                        <div>\n\n                                                            {this.showCertificateButton()}\n                                                        </div>\n\n\n                                                    </div>\n                                                    {/* /.box-body */}\n                                                </div>\n                                                {/* /.box */}\n                                                {/* /.col (LEFT) */}\n\n                                            </div>\n                                            {/* /.col */}\n                                            <div className=\"col-md-9\">\n                                                <div className=\"nav-tabs-custom\">\n                                                    <ul className=\"nav nav-tabs\">\n                                                        <li className=\"active\"><a href=\"#Global\" data-toggle=\"tab\">< FormattedMessage id=\"GERAL\" /></a></li>\n                                                        <li><a href=\"#Tier\" data-toggle=\"tab\">< FormattedMessage id=\"CATEGORY\" /></a></li>\n                                                        <li><a href=\"#Gender\" data-toggle=\"tab\">< FormattedMessage id=\"GENDER\" /></a></li>\n                                                    </ul>\n                                                    <div className=\"tab-content\">\n                                                        <div className=\"active tab-pane\" id=\"Global\">\n                                                            {/* Post */}\n                                                            <div className=\"post\">\n                                                                {/* /.user-block */}\n\n                                                                {this.tableGlobal()}\n\n\n                                                            </div>\n                                                            {/* /.post */}\n                                                        </div>\n                                                        {/* /.tab-pane */}\n                                                        <div className=\"tab-pane\" id=\"Tier\">\n                                                            <div className=\"post\">\n                                                                {this.tableTier()}\n                                                            </div>\n                                                        </div>\n                                                        {/* /.tab-pane */}\n                                                        <div className=\"tab-pane\" id=\"Gender\">\n                                                            <div className=\"post\">\n                                                                {this.tableGender()}\n                                                            </div>\n                                                        </div>\n                                                        {/* /.tab-pane */}\n                                                    </div>\n                                                    {/* /.tab-content */}\n                                                </div>\n                                                {/* /.nav-tabs-custom */}\n                                            </div>\n\n                                            {/* LINE CHART */}\n                                            {this.chartsRender()}\n\n                                        </div>\n                                        {/* /.row */}\n                                    </section>\n\n                                )\n                            }\n                        })()}\n                    </section>\n                </div>\n                <Footer eventID={this.props.match.params.EventID} />\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport ReactTable from \"react-table\";\nimport { Link } from \"react-router-dom\";\nimport {FormatTime} from \"../Scripts/time\"\nimport { FormattedMessage } from 'react-intl';\n\nexport default class TableGlobal extends Component {\n\n  \n  render() {\n    //Info for the filters\n    //Table\n    const columns = [\n      {\n        Header: \"Id\",\n        accessor: \"athleteid\",\n        sortable: false,\n        style: {\n          textAlign: \"Center\"\n        },\n\n        show: false\n      },\n\n      {\n        Header: <FormattedMessage id=\"NAME\" />,\n        accessor: \"athleteName\",\n        filterable: false,\n        sortable: false,\n\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => (\n\n            <Link\n              to={{ pathname: `/AthleteDetail/${this.props.eventID}/${this.props.compID}/${row.original.athleteid}` }}\n            >\n              <span style={{ color: \"#3c8dbc\" }}>{row.value} </span>\n            </Link>\n          )\n\n      },\n      {\n        Header: <FormattedMessage id=\"TIME\" />,\n        accessor: \"time\",\n        filterable: false,\n        sortable: false,\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => FormatTime(row.value)\n\n      }\n    ];\n    return (\n      <ReactTable\n        columns={columns}\n        data={this.props.athleteList}\n        filterable\n        noDataText={<FormattedMessage id=\"NODATA\" />}\n        defaultPageSize={parseInt(this.props.athleteList.length)}\n        showPagination={false}\n        showPaginationTop={false}\n        showPaginationBottom={false}\n        showPageSizeOptions={false}\n        showPageJump={false}\n        collapseOnSortingChange={true}\n        collapseOnPageChange={true}\n        collapseOnDataChange={true}\n        freezeWhenExpanded={false}\n        sortable={false}\n        multiSort={false}\n        resizable={false}\n        defaultSortDesc={false}\n        pageText={<FormattedMessage id=\"PAGE\" />}\n        rowsText={\"\"}\n        className=\"-striped -highlight\"\n      />\n    );\n  }\n}\n","import React, { Component } from 'react'\nimport Header from \"../structure/Header\";\nimport Footer from \"../structure/Footer\";\nimport Menu from \"../structure/Menu\";\nimport TableTeams from \"../Tables/TableTeams\";\nimport Loader from \"../Loader/Loader\";\nimport { FormatTime } from \"../Scripts/time\"\nimport { FormattedMessage } from 'react-intl';\n\n\nconst API_KEY = `${process.env.REACT_APP_API_TRAIL_KEY}`;\nconst API_URL = `${process.env.REACT_APP_API_TRAIL_URL}`;\nconst TOKEN = API_KEY;\n\n//Control Variable\nvar firstrun = 0;\n\nexport default class Teams extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            teamlist: [],\n            loading: false,\n            loadingCheckpoint: false,\n            genderState: \"MALE\",\n            checkpointid: 0\n\n        };\n\n\n    }\n\n    componentWillMount() {\n        try {\n            if (JSON.parse(localStorage.getItem(`checkpointid${this.props.match.params.EventID}${this.props.match.params.CompID}`))) {\n                const checkpointid = JSON.parse(localStorage.getItem(`checkpointid${this.props.match.params.EventID}${this.props.match.params.CompID}`))\n                this.setState({ loadingCheckpoint: true, checkpointid: checkpointid })\n            }\n        }\n        catch{\n            localStorage.clear();\n\n        }\n        this.GetLastCheckpoint();\n        this.GetLastCheckpoint = this.GetLastCheckpoint.bind(this);\n    }\n\n    GetLastCheckpoint = async () => {\n        const API_CALL = await fetch(`${API_URL}/competition/Checkpoints/${this.props.match.params.CompID}/`, {\n            headers: new Headers({\n                Authorization: TOKEN\n            })\n        });\n        const data = await API_CALL.json();\n        //dont use the ===, dont work for some reason\n        try {\n            data.map(checkpoint => {\n                if (checkpoint.checkpoint_order == 99) {\n                    localStorage.setItem(`checkpointid${this.props.match.params.EventID}${this.props.match.params.CompID}`, JSON.stringify(checkpoint.checkpoint.checkpoint_id))\n                    this.setState({ loadingCheckpoint: true, checkpointid: checkpoint.checkpoint.checkpoint_id })\n                }\n            })\n        }\n        catch{\n            localStorage.clear();\n\n        }\n    };\n    GetTeamsMale = async () => {\n        if (this.state.loadingCheckpoint === true) {\n            const API_CALL = await fetch(`${API_URL}/results/teamresultsMALE/${this.props.match.params.CompID}/${this.state.checkpointid}/`, {\n                headers: new Headers({\n                    Authorization: TOKEN\n                })\n            });\n            try {\n                const data = await API_CALL.json();\n                localStorage.setItem(`teamlistMale${this.props.match.params.EventID}${this.props.match.params.CompID}`, JSON.stringify(data))\n                this.setState({ teamlist: data, loading: true })\n            }\n            catch{\n\n            }\n           \n        }\n    };\n\n    GetTeamsFemale = async () => {\n        const API_CALL = await fetch(`${API_URL}/results/teamresultsFEMALE/${this.props.match.params.CompID}/${this.state.checkpointid}/`, {\n            headers: new Headers({\n                Authorization: TOKEN\n            })\n        });\n        try {\n            const data = await API_CALL.json();\n            localStorage.setItem(`teamlistFemale${this.props.match.params.EventID}${this.props.match.params.CompID}`, JSON.stringify(data))\n            this.setState({ teamlist: data, loading: true })\n        }\n        catch{\n\n        }\n        \n    };\n\n    GetTeamsMaleorCache() {\n        try {\n            if (JSON.parse(localStorage.getItem(`teamlistMale${this.props.match.params.EventID}${this.props.match.params.CompID}`))) {\n                const teamlist = JSON.parse(localStorage.getItem(`teamlistMale${this.props.match.params.EventID}${this.props.match.params.CompID}`))\n                this.setState({ teamlist: teamlist, loading: true })\n            }\n        }\n        catch{\n\n        }\n        this.GetTeamsMale()\n    }\n\n    GetTeamsFemaleorCache() {\n        try {\n            if (JSON.parse(localStorage.getItem(`teamlistFemale${this.props.match.params.EventID}${this.props.match.params.CompID}`))) {\n                const teamlist = JSON.parse(localStorage.getItem(`teamlistFemale${this.props.match.params.EventID}${this.props.match.params.CompID}`))\n                this.setState({ teamlist: teamlist, loading: true })\n            }\n        }\n        catch{\n\n        }\n        this.GetTeamsFemale()\n    }\n\n    UpdateStateGender(gender) {\n\n        if (this.state.loadingCheckpoint === true) {\n            if (gender === \"MALE\") {\n                this.setState({ genderState: gender, loading: false }, this.GetTeamsMaleorCache)\n            }\n            else {\n                this.setState({ genderState: gender, loading: false }, this.GetTeamsFemaleorCache)\n            }\n        }\n\n\n    }\n    /*when props change*/\n    componentDidUpdate(prevProps) {\n        if (prevProps.match.params.CompID !== this.props.match.params.CompID) {\n            this.GetLastCheckpoint();\n            this.UpdateStateGender(\"MALE\");\n\n        }\n    }\n\n\n    checkIFthereISDataTOShow() {\n        if (this.state.teamlist.length > 0) {\n            return (\n                this.state.teamlist.map(team => {\n                    var APItime = team.Time.split(\":\")\n                    var timeLimited = APItime[0] + \":\" + APItime[1] + \":\" + APItime[2].substring(0, 2)\n                    return (\n                        <div className=\"col-md-4\">\n                            {/* general form elements */}\n                            <div className=\"box box-primary\">\n                                <div className=\"box-header with-border\">\n                                    <div className=\"row\" >\n                                        <div style={{ textAlign: \"center\" }} className=\"col-md-12\">\n                                            <h5>\n                                                <a class=\"btn btn-app\" style={{ pointerEvents: \"none\", fontSize: \"23px\", float: \"left\" }}> <strong>{team.Position}</strong> </a>\n\n                                                <span style={{ fontSize: \"18px\", }}>{team.Team.substring(0, 70)}</span>\n                                                <br></br>\n                                            </h5>\n                                        </div>\n                                    </div>\n                                </div>\n                                {/* /.box-header */}\n                                {/* form start */}\n                                <div className=\"box-body\">\n                                    <div style={{ textAlign: \"center\" }} className=\"col-md-4\">\n                                        <img className=\"profile-user-img img-responsive img-circle\" src={team.LogoURL} alt=\"User profile picture\" />\n                                        <span style={{ fontSize: \"20px\" }}>\n                                            < FormattedMessage id=\"TIMECAPS\" />: </span>\n                                        <span style={{ fontSize: \"20px\" }}>\n                                            <strong>{FormatTime(timeLimited)}</strong> </span>\n                                    </div>\n                                    <div style={{ textAlign: \"center\" }} className=\"col-md-8\">\n                                        <TableTeams eventID={this.props.match.params.EventID} compID={this.props.match.params.CompID} athleteList={team.Athlets} />\n                                    </div>\n                                </div>\n                                {/* /.box-body */}\n\n                            </div>\n                            {/* /.box */}\n\n                        </div>\n\n                    )\n                })\n            )\n\n        }\n        else {\n            return (\n                <div className=\"col-md-12\">\n                    {/* general form elements */}\n                    <div className=\"box box-primary\">\n\n                        {/* /.box-header */}\n                        {/* form start */}\n                        <form role=\"form\">\n                            <div className=\"box-body\">\n                                <p>< FormattedMessage id=\"MESSAGETEAMSDATA\" /></p>\n\n                            </div>\n                            {/* /.box-body */}\n\n                        </form>\n                    </div>\n                    {/* /.box */}\n\n                </div>\n\n            )\n        }\n\n    }\n\n    StaticElementTeamM() {\n        if (this.state.genderState === \"MALE\") {\n\n            return (\n                <th key=\"MALE\" > <a style={{ color: '#37474F' }} onClick={() => this.UpdateStateGender(\"MALE\")} href=\"#\">< FormattedMessage id=\"MEN\" /><i class=\"fa fa-fw fa-male\"></i></a></th>\n            )\n        }\n        else {\n            return (\n                <th key=\"MALE\" > <a style={{ color: 'white' }} onClick={() => this.UpdateStateGender(\"MALE\")} href=\"#\">< FormattedMessage id=\"MEN\" /><i class=\"fa fa-fw fa-male\"></i></a></th>\n            )\n\n        }\n    }\n\n    StaticElementTeamF() {\n        if (this.state.genderState === \"FEMALE\") {\n            return (\n\n                <th key=\"FEMALE\" > <a style={{ color: '#37474F' }} onClick={() => this.UpdateStateGender(\"FEMALE\")} href=\"#\">< FormattedMessage id=\"WOMEN\" /><i class=\"fa fa-fw fa-female\"></i></a></th>\n            )\n        }\n        else {\n            return (\n\n                <th key=\"FEMALE\" > <a style={{ color: 'white' }} onClick={() => this.UpdateStateGender(\"FEMALE\")} href=\"#\">< FormattedMessage id=\"WOMEN\" /><i class=\"fa fa-fw fa-female\"></i></a></th>\n            )\n\n        }\n    }\n\n    render() {\n        if (this.state.loadingCheckpoint === true) {\n            if (firstrun === 0) {\n                this.GetTeamsMaleorCache()\n                firstrun = 1;\n            }\n        }\n\n        return (\n\n            <div>\n                <Header eventID={this.props.match.params.EventID} />\n                {/*Send the event id to the MENU, to get the competition list*/}\n                <Menu eventID={this.props.match.params.EventID} competitionID={this.props.match.params.CompID} />\n                {/* Content Wrapper. Contains page content */}\n\n                <div className=\"content-wrapper\">\n\n                    <div\n                        style={{\n                            paddingTop: \"30px\",\n                            background: \"#367fa9\",\n                            zIndex: 999999,\n                            fontSize: 16,\n                            fontWeight: 600\n                        }}\n                    >\n                        <table className=\"text-center\" style={{ width: \"100%\", borderSpacing: \"10px\", borderCollapse: \"separate\" }}>\n                            <tbody>\n                                <tr >\n                                    {this.StaticElementTeamM()}\n                                    {this.StaticElementTeamF()}\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                    <section className=\"content-header\">\n                        <h1>\n                            <span style={{ float: \"right\" }}>{(this.state.genderState == \"MALE\") ? < FormattedMessage id=\"MEN\" /> : < FormattedMessage id=\"WOMEN\" />}</span>\n\n                            <span >{this.props.match.params.CompName}</span>\n                        </h1>\n                    </section>\n                    {(() => {\n                        if (this.state.loading === false) {\n                            return (\n                                <section className=\"content\">\n                                    <div className=\"row\">\n                                        <div className=\"col-xs-12\">\n                                            <div className=\"box\">\n                                                {/* /.box-body */}\n                                                <div className=\"box-body\" style={{ display: 'flex', justifyContent: 'center' }}>\n                                                    <Loader />\n                                                </div>\n\n                                            </div>\n                                        </div>\n                                    </div>\n                                </section>\n                            )\n                        }\n                        else {\n                            return (\n                                <section className=\"content\">\n\n                                    <div className=\"row\">\n                                        {/* left column */}\n                                        {this.checkIFthereISDataTOShow()}\n                                    </div>\n                                    {/* /.row */}\n                                </section>\n                            )\n\n\n\n                        }\n                    })()}\n                </div>\n                <Footer eventID={this.props.match.params.EventID} />\n\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\nimport { Link } from \"react-router-dom\";\nimport Favorites from \"../favorites/favoritesChecker\"\nimport { calculatePagination } from \"../Scripts/PaginationHelper\"\nimport { minimalSize } from \"../Scripts/PaginationHelper\"\n\nimport { FormattedMessage } from 'react-intl';\n\nvar size = window.innerWidth;\n\nexport default class TableFavorites extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: this.props.athleteList\n    };\n  }\n  CheckSize() {\n    if (size > 800) {\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n\n\n  removeFav(id, index) {\n    return (<Favorites tableFav={true} ListaFavoritos={id} />)\n  }\n  render() {\n    //Info for the filters\n    //get the category\n    let category = this.props.athleteList.map(athelete => {\n      return athelete.category;\n    });\n    //remove duplicates\n    const Tableuniquecategory = [...new Set(category.sort())];\n    //get the nacionality\n    let nacionality = this.props.athleteList.map(athelete => {\n      return athelete.athlete.nacionality;\n    });\n    //remove duplicates\n    const Tableuniquenacionality = [...new Set(nacionality.sort())];\n    //get the competitons\n    let competition = this.props.athleteList.map(athelete => {\n      return athelete.competition.name;\n    });\n    //remove duplicates\n    const Tableuniquecompetition = [...new Set(competition.sort())];\n    //get the Club\n    let club = this.props.athleteList.map(athelete => {\n      return athelete.club;\n    });\n    //remove duplicates\n    const Tableuniqueclub = [...new Set(club.sort())];\n    //get the inscription_status_code\n    let inscription_status_code = this.props.athleteList.map(athelete => {\n      return athelete.inscription_status_code;\n    });\n    //remove duplicates\n    const Tableuniqueinscription_status_code = [\n      ...new Set(inscription_status_code.sort())\n    ];\n\n    //Table\n    const columns = [\n      {\n        Header: \"Id\",\n        accessor: \"athlete_athlete.athlete_id\",\n        sortable: false,\n        style: {\n          textAlign: \"Center\"\n        },\n        width: 100,\n        maxWidth: 100,\n        show: false\n      },\n      {\n\n        Header: (size > 800) ? <FormattedMessage id=\"DORSAL\" /> : \"PTL\",\n        id: \"dorsal_number\",\n        accessor: d => Number(d.dorsal_number),\n        style: {\n          textAlign: \"Center\"\n        },\n        width: (size > 800) ? 100 : 60,\n\n        Filter: ({ filter, onChange }) => (\n          <FormattedMessage id=\"SEARCH\" >\n            {txt => <input\n              onChange={event => onChange(event.target.value)}\n              value={filter ? filter.value : \"\"}\n              placeholder={txt}\n              style={{\n                width: \"100%\",\n                textAlign: \"Center\"\n              }}\n            />}\n          </FormattedMessage>\n        ),\n        Cell: row => (\n\n          <Link\n            to={{ pathname: `/AthleteDetail/${this.props.eventID}/${row.original.competition.competition_id}/${row.original.athlete.athlete_id}` }}\n          >\n            <span style={{ color: \"#3c8dbc\" }}>{row.value} </span>\n          </Link>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"NAME\" />,\n        accessor: \"athlete.name\",\n        width: (size > 800) ? 300 : 160,\n        style: {\n          textAlign: \"Center\"\n        },\n\n        Filter: ({ filter, onChange }) => (\n          <FormattedMessage id=\"SEARCH\" >\n            {txt => <input\n              onChange={event => onChange(event.target.value)}\n              value={filter ? filter.value : \"\"}\n              placeholder={txt}\n              style={{\n                width: \"100%\",\n                textAlign: \"Center\"\n              }}\n            />}\n          </FormattedMessage>\n\n        ),\n        Cell: row => (\n\n          <Link\n            to={{ pathname: `/AthleteDetail/${this.props.eventID}/${row.original.competition.competition_id}/${row.original.athlete.athlete_id}` }}\n          >\n            <span style={{ color: \"#3c8dbc\" }}>{row.value} </span>\n          </Link>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"TEAM\" />,\n        accessor: \"club\",\n        style: {\n          textAlign: \"Center\"\n        },\n        show: this.CheckSize(),\n        Cell: row => row.value,\n        filterMethod: (filter, row) => {\n          if (filter.value === \"\") {\n            return true;\n          }\n\n          if (Tableuniqueclub.includes(filter.value)) {\n            return row[filter.id] === filter.value;\n          } else {\n            return true;\n          }\n        },\n        Filter: ({ filter, onChange }) => (\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\", textAlignLast: \"center\" }}\n\n            value={filter ? filter.value : \"all\"}\n          >\n            <FormattedMessage id=\"ALL\">\n              {txt => <option value=\"all\">{txt}</option>}\n            </FormattedMessage>\n            {Tableuniqueclub.map(k => {\n              return (\n                <option key={k.toString()} value={k}>\n                  {k}\n                </option>\n              );\n            })}\n          </select>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"CATEGORY\" />,\n        accessor: \"category\",\n        width: (size > 800) ? 150 : 95,\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => row.value,\n        filterMethod: (filter, row) => {\n          if (filter.value === \"\") {\n            return true;\n          }\n\n          if (Tableuniquecategory.includes(filter.value)) {\n            return row[filter.id] === filter.value;\n          } else {\n            return true;\n          }\n        },\n        Filter: ({ filter, onChange }) => (\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\", textAlignLast: \"center\" }}\n\n            value={filter ? filter.value : \"all\"}\n          >\n            <FormattedMessage id=\"ALL\">\n              {txt => <option value=\"all\">{txt}</option>}\n            </FormattedMessage>\n            {Tableuniquecategory.map(k => {\n              return (\n                <option key={k.toString()} value={k}>\n                  {k}\n                </option>\n              );\n            })}\n          </select>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"COMPETITION\" />,\n        accessor: \"competition.name\",\n        show: this.CheckSize(),\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => row.value,\n        filterMethod: (filter, row) => {\n          if (filter.value === \"\") {\n            return true;\n          }\n\n          if (Tableuniquecompetition.includes(filter.value)) {\n            return row[filter.id] === filter.value;\n          } else {\n            return true;\n          }\n        },\n        Filter: ({ filter, onChange }) => (\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\", textAlignLast: \"center\" }}\n\n            value={filter ? filter.value : \"all\"}\n          >\n            <FormattedMessage id=\"ALL\">\n              {txt => <option value=\"all\">{txt}</option>}\n            </FormattedMessage>\n            {Tableuniquecompetition.map(k => {\n              return (\n                <option key={k.toString()} value={k}>\n                  {k}\n                </option>\n              );\n            })}\n          </select>\n        )\n      },\n      {\n        Header: \"Prova\",\n        accessor: \"competition.competition_id\",\n        show: false,\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => row.value,\n        filterMethod: (filter, row) => {\n          if (filter.value === \"\") {\n            return true;\n          }\n\n          if (Tableuniquecompetition.includes(filter.value)) {\n            return row[filter.id] === filter.value;\n          } else {\n            return true;\n          }\n        },\n        Filter: ({ filter, onChange }) => (\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\", textAlignLast: \"center\" }}\n            value={filter ? filter.value : \"all\"}\n          >\n            <FormattedMessage id=\"ALL\">\n              {txt => <option value=\"all\">{txt}</option>}\n            </FormattedMessage>\n            {Tableuniquecompetition.map(k => {\n              return (\n                <option key={k.toString()} value={k}>\n                  {k}\n                </option>\n              );\n            })}\n          </select>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"COUNTRY\" />,\n        accessor: \"athlete.nacionality\",\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => row.value,\n        filterMethod: (filter, row) => {\n          if (filter.value === \"\") {\n            return true;\n          }\n\n          if (Tableuniquenacionality.includes(filter.value)) {\n            return row[filter.id] === filter.value;\n          } else {\n            return true;\n          }\n        },\n        Filter: ({ filter, onChange }) => (\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\", textAlignLast: \"center\" }}\n            value={filter ? filter.value : \"all\"}\n          >\n            <FormattedMessage id=\"ALL\">\n              {txt => <option value=\"all\">{txt}</option>}\n            </FormattedMessage>\n            {Tableuniquenacionality.map(k => {\n              return (\n                <option key={k.toString()} value={k}>\n                  {k}\n                </option>\n              );\n            })}\n          </select>\n        )\n      },\n      {\n\n        Header: <FormattedMessage id=\"STATUS\" />,\n        accessor: \"inscription_status_code\",\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => {\n          if (row.value === \"I\") {\n            return <FormattedMessage id=\"I\" />;\n          } else if (row.value === \"CI\") {\n            return <FormattedMessage id=\"CI\" />;\n          } else if (row.value === \"AN\") {\n            return <FormattedMessage id=\"AN\" />;\n          } else if (row.value === \"D\") {\n            return <FormattedMessage id=\"D\" />;\n          } else if (row.value === \"PND\") {\n            return <FormattedMessage id=\"PND\" />;\n          } else if (row.value === \"DNS\") {\n            return <FormattedMessage id=\"DNS\" />;\n          }else if (row.value === \"EP\") {\n            return <FormattedMessage id=\"EP\" />;\n          }else if (row.value === \"DNF\") {\n            return <FormattedMessage id=\"DNF\" />;\n          }else if (row.value === \"DSQ\") {\n            return <FormattedMessage id=\"DSQ\" />;\n          }else if (row.value === \"EV\") {\n            return <FormattedMessage id=\"EV\" />;\n          }else if (row.value === \"FIN\") {\n            return <FormattedMessage id=\"FIN\" />;\n          }else if (row.value === \"GAP\") {\n            return <FormattedMessage id=\"GAP\" />;\n          }else\n          { return \"\"}\n\n        },\n        filterMethod: (filter, row) => {\n          if (filter.value === \"\") {\n            return true;\n          }\n\n          if (Tableuniqueinscription_status_code.includes(filter.value)) {\n            return row[filter.id] === filter.value;\n          } else {\n            return true;\n          }\n        },\n        Filter: ({ filter, onChange }) => (\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\", textAlignLast: \"center\" }}\n            value={filter ? filter.value : \"all\"}\n          >\n            <FormattedMessage id=\"ALL\">\n              {txt => <option value=\"all\">{txt}</option>}\n            </FormattedMessage>\n            {Tableuniqueinscription_status_code.map(k => {\n              return (\n                <FormattedMessage id={k.toString()}>\n                  {txt => <option key={k.toString()} value={k}>{txt}</option>}\n                </FormattedMessage>\n              );\n            })}\n          </select>\n        )\n      },\n      {\n        Header: (size > 800) ? <FormattedMessage id=\"FAVORITE\" /> : \"FAV\",\n        width: (size > 800) ? 100 : 50,\n        filterable: false,\n        sortable: false,\n\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: (row) => (\n          <span onClick={() => {\n            let data = this.state.data;\n            data.splice(row.index, 1)\n            this.setState({ data })\n          }}>\n            {this.removeFav(row.original.athlete.athlete_id, row.index)}\n          </span>\n\n        )\n      }\n    ];\n    return (\n      <ReactTable\n        defaultSorted={[\n          {\n            id: \"dorsal_number\",\n            desc: false\n          }\n        ]}\n        previousText={<FormattedMessage id=\"PREVIOUS\" />}\n        nextText={<FormattedMessage id=\"NEXT\" />}\n        columns={columns}\n        data={this.state.data}\n        filterable\n        noDataText={<FormattedMessage id=\"NODATA\" />}\n        defaultPageSize={minimalSize(this.state.data.length, 10)}\n        pageSizeOptions={calculatePagination(this.state.data.length, 10)}\n        showPagination={true}\n        showPaginationTop={false}\n        showPaginationBottom={true}\n        showPageJump={true}\n        collapseOnSortingChange={true}\n        collapseOnPageChange={true}\n        collapseOnDataChange={true}\n        freezeWhenExpanded={false}\n        sortable={true}\n        multiSort={true}\n        resizable={true}\n        defaultSortDesc={false}\n        pageText={<FormattedMessage id=\"PAGE\" />}\n        rowsText={\"\"}\n        className=\"-striped -highlight\"\n\n      />\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { FormattedMessage } from 'react-intl';\n\nexport default class NumberFavorites extends Component {\n    render() {\n        return (\n            <div>\n                {/* Info boxes */}\n                <div className=\"col-md-3 col-sm-6 col-xs-12\">\n                    <div className=\"info-box\">\n                        <span className=\"info-box-icon bg-aqua\"><i className=\"ion ion-ios-contact-outline\" /></span>\n                        <div className=\"info-box-content\">\n                            <span className=\"info-box-text\"><FormattedMessage id=\"FAVORITES\" /></span>\n                            <span className=\"info-box-number\">{this.props.athleteList.length}</span>\n                        </div>\n                        {/* /.info-box-content */}\n                    </div>\n                    {/* /.info-box */}\n                </div>\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from \"react\";\nimport Header from \"../structure/Header\";\nimport Footer from \"../structure/Footer\";\nimport Menu from \"../structure/Menu\";\nimport TableFavorites from \"../Tables/TableFavorites\";\nimport WidgetNumberFavortites from \"../Widgets/NumberFavorites\";\nimport WidgetNumberCategories from \"../Widgets/NumberCategories\";\nimport WidgetNumberteams from \"../Widgets/NumberTeams\";\nimport WidgetNumberNacionalities from \"../Widgets/NumberNationalities\";\nimport Loader from \"../Loader/Loader\";\nimport { FormattedMessage } from 'react-intl';\n\n\nconst API_KEY = `${process.env.REACT_APP_API_TRAIL_KEY}`;\nconst API_URL = `${process.env.REACT_APP_API_TRAIL_URL}`;\nconst TOKEN = API_KEY;\nvar EventID = 0;\nvar arrayFavorites = [];\nexport default class Favorites extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      athleteList: [],\n      loading: false,\n    };\n\n    this.getAthletsList();\n  }\n\n  componentWillMount() {\n    try {\n      if (JSON.parse(localStorage.getItem(`athleteList${this.props.match.params.EventID}`))) {\n        const athList = JSON.parse(localStorage.getItem(`athleteList${this.props.match.params.EventID}`))\n        this.setState({ athleteList: athList }, () => this.checkFavorites());\n\n      }\n\n      else {\n        this.getAthletsList();\n\n      }\n    }\n    catch{\n      localStorage.clear();\n\n    }}\n        /*List of athlets*/\n    getAthletsList = async e => {\n      EventID = this.props.match.params.EventID;\n      const API_CALL = await fetch(`${API_URL}/trail/Athletes/${EventID}/`, {\n        headers: new Headers({\n          Authorization: TOKEN\n        })\n      });\n      const data = await API_CALL.json();\n\n      this.setState({ athleteList: data }, () => this.checkFavorites());\n    };\n\n    /*Check Favorites*/\n    checkFavorites() {\n      arrayFavorites = []\n      this.state.athleteList.map(athlete => {\n        if (parseInt(athlete.athlete.athlete_id) === parseInt(localStorage.getItem(athlete.athlete.athlete_id))) {\n          arrayFavorites.push(athlete)\n        }\n        return null\n      })\n      this.setState({ loading: true })\n    }\n\n    renderTable() {\n      if (this.state.loading === true) {\n        if (arrayFavorites.length > 0) {\n          return (\n            <TableFavorites\n              athleteList={arrayFavorites}\n              loading={this.state.loading}\n              eventID={EventID}\n              competitionID={0} />\n          )\n\n\n        }\n        else\n          return (\n            <p>\n              < FormattedMessage id=\"NOFAVORITES\" />\n            </p>\n          )\n      }\n    }\n\n    render() {\n      return (\n        <div>\n          <Header eventID={this.props.match.params.EventID} />\n          {/*Send the event id to the MENU, to get the competition list*/}\n          <Menu eventID={EventID} competitionID={0} />\n          {/*CONTENT*/}\n          <div>\n            {/* Content Wrapper. Contains page content */}\n            <div className=\"content-wrapper\">\n\n              {/* Content Header (Page header) */}\n              <section className=\"content-header\">\n                <h1>\n                  < FormattedMessage id=\"FAVORITESLIST\" />\n                </h1>\n              </section>\n              {/* Main content */}\n              {/*Check if data is loading*/}\n              {(() => {\n                if (this.state.loading === false) {\n                  return (\n                    <section className=\"content\">\n                      <div className=\"row\">\n                        <div className=\"col-xs-12\">\n                          <div className=\"box\">\n                            {/* /.box-body */}\n                            <div className=\"box-body\" style={{ display: 'flex', justifyContent: 'center' }}>\n                              <Loader />\n                            </div>\n\n                          </div>\n                        </div>\n                      </div>\n                    </section>\n                  )\n                }\n                else {\n                  return (\n\n                    <section className=\"content\">\n                      <div className=\"row\">\n                        {/* widget for the number of participants */}\n                        <WidgetNumberFavortites athleteList={arrayFavorites} />\n                        {/* widget for the number of Teams */}\n                        <WidgetNumberteams athleteList={arrayFavorites} />\n                        {/* widget for the number of Categories */}\n                        <WidgetNumberCategories athleteList={arrayFavorites} />\n                        {/* widget for the number of Nacionalities */}\n                        <WidgetNumberNacionalities athleteList={arrayFavorites} />\n                      </div>\n                      <div className=\"row\">\n                        <div className=\"col-xs-12\">\n                          <div className=\"box\">\n                            {/* /.box-body */}\n                            <div className=\"box box-primary\"></div>\n                            <div className=\"post\" style={{ textAlign: \"center\" }}>\n                              {this.renderTable()}\n                            </div>\n\n                          </div>\n                          {/* Table for the list of participants */}\n\n\n                        </div>\n                      </div>\n                      {/* /.col */}\n                      {/* /.row */}\n\n                    </section>\n                  )\n                }\n              })()}\n            </div>\n            {/* /.content-wrapper */}\n          </div>\n          <Footer eventID={this.props.match.params.EventID} />\n        </div >\n      );\n    }\n\n  }\n","import React, { Component } from 'react'\nimport Header from \"../structure/Header\";\nimport Footer from \"../structure/Footer\";\nimport Menu from \"../structure/Menu\";\nimport Loader from \"../Loader/Loader\";\nimport ChartBar from \"../Chart/bar\"\nimport ChartPie from \"../Chart/pie\"\nimport { FormattedMessage } from 'react-intl';\n\n\nconst API_KEY = `${process.env.REACT_APP_API_TRAIL_KEY}`;\nconst API_URL = `${process.env.REACT_APP_API_TRAIL_URL}`;\nconst TOKEN = API_KEY;\n\nexport default class StatsGlobal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loadingCategory: false,\n            loadingGender: false,\n            loadingCompetitions: false,\n            loadingNacionality: false,\n\n            categoryList: [],\n            genderList: [],\n            competitionList: [],\n            nacionalityList: [],\n        };\n        this.GetCategory();\n        this.GetGender();\n        this.GetCompetitions();\n        this.GetNacionality();\n    }\n\n    /*for the first time when page is loaded */\n    GetCategory = async e => {\n        const API_CALL = await fetch(`${API_URL}/trail/CategoryTotal/${this.props.match.params.EventID}/`, {\n            headers: new Headers({\n                Authorization: TOKEN\n            })\n        });\n        const data = await API_CALL.json();\n        this.setState({ categoryList: data, loadingCategory: true });\n\n    };\n    GetGender = async e => {\n        const API_CALL = await fetch(`${API_URL}/trail/GenderTotal/${this.props.match.params.EventID}/`, {\n            headers: new Headers({\n                Authorization: TOKEN\n            })\n        });\n        const data = await API_CALL.json();\n        this.setState({ genderList: data, loadingGender: true });\n    };\n    GetCompetitions = async e => {\n        const API_CALL = await fetch(`${API_URL}/trail/CompetitionTotal/${this.props.match.params.EventID}/`, {\n            headers: new Headers({\n                Authorization: TOKEN\n            })\n        });\n        const data = await API_CALL.json();\n        this.setState({ competitionList: data, loadingCompetitions: true });\n    };\n    GetNacionality = async e => {\n        const API_CALL = await fetch(`${API_URL}/trail/NacionalityTotal/${this.props.match.params.EventID}/`, {\n            headers: new Headers({\n                Authorization: TOKEN\n            })\n        });\n        const data = await API_CALL.json();\n        this.setState({ nacionalityList: data, loadingNacionality: true });\n    };\n\n    render() {\n\n        return (\n            <div>\n                <Header eventID={this.props.match.params.EventID} />\n                {/*Send the event id to the MENU, to get the competition list*/}\n                <Menu eventID={this.props.match.params.EventID} competitionID={0} />\n                {/*CONTENT*/}\n                <div>\n                    {/* Content Wrapper. Contains page content */}\n                    <div className=\"content-wrapper\">\n\n                        {/* Content Header (Page header) */}\n                        <section className=\"content-header\">\n\n                        </section>\n                        {/* Main content */}\n                        {/*Check if data is loading*/}\n                        <section className=\"content\">\n                            <div className=\"row\">\n                                <div className=\"col-md-6\">\n                                    {/* general form elements */}\n                                    <div className=\"box box-primary\">\n                                        <div className=\"box-header with-border\">\n                                            <div style={{ textAlign: \"center\" }} >\n                                                <h3><FormattedMessage id=\"CATEGORY\" /></h3>\n                                            </div>\n                                        </div>\n                                        {/* /.box-header */}\n                                        {/* form start */}\n                                        {(() => {\n                                            //Category\n                                            if (this.state.loadingCategory === false) {\n                                                return (\n                                                    <div style={{ textAlign: \"center\" }} className=\"box-body\">\n                                                        <Loader />\n                                                    </div>\n                                                )\n                                            }\n                                            else {\n                                                return (\n                                                    <div className=\"box-body\">\n                                                        <ChartBar data={this.state.categoryList} />\n                                                    </div>\n                                                )\n                                            }\n                                        })()}\n                                    </div>\n                                    {/* /.box */}\n\n                                </div>\n\n                                <div className=\"col-md-6\">\n                                    {/* general form elements */}\n                                    <div className=\"box box-primary\">\n                                        <div className=\"box-header with-border\">\n                                            <div style={{ textAlign: \"center\" }} >\n                                                <h3><FormattedMessage id=\"GENDER\" /></h3>\n                                            </div>\n                                        </div>\n                                        {/* /.box-header */}\n                                        {/* form start */}\n                                        {(() => {\n                                            //Gender\n\n                                            if (this.state.loadingGender === false) {\n                                                return (\n                                                    <div style={{ textAlign: \"center\" }} className=\"box-body\">\n                                                        <Loader />\n                                                    </div>\n                                                )\n                                            }\n                                            else {\n\n                                                return (\n                                                    <div className=\"box-body\">\n                                                        <ChartPie data={this.state.genderList} />\n                                                    </div>\n                                                )\n                                            }\n                                        })()}\n\n                                    </div>\n                                    {/* /.box */}\n\n                                </div>\n                                <div className=\"col-md-6\">\n                                    {/* general form elements */}\n                                    <div className=\"box box-primary\">\n                                        <div className=\"box-header with-border\">\n                                            <div style={{ textAlign: \"center\" }} >\n                                                <h3><FormattedMessage id=\"COUNTRY\" /></h3>\n                                            </div>\n                                        </div>\n                                        {/* /.box-header */}\n                                        {/* form start */}\n                                        {(() => {\n                                            //Gender\n                                            if (this.state.loadingNacionality === false) {\n                                                return (\n                                                    <div style={{ textAlign: \"center\" }} className=\"box-body\">\n                                                        <Loader />\n                                                    </div>\n                                                )\n                                            }\n                                            else {\n                                                return (\n                                                    <div className=\"box-body\">\n                                                        <ChartPie data={this.state.nacionalityList} />\n                                                    </div>\n                                                )\n                                            }\n                                        })()}\n\n                                    </div>\n                                    {/* /.box */}\n\n                                </div>\n                                <div className=\"col-md-6\">\n                                    {/* general form elements */}\n                                    <div className=\"box box-primary\">\n                                        <div className=\"box-header with-border\">\n                                            <div style={{ textAlign: \"center\" }} >\n                                                <h3><FormattedMessage id=\"COMPETITION\" /></h3>\n                                            </div>\n                                        </div>\n                                        {/* /.box-header */}\n                                        {/* form start */}\n                                        {(() => {\n                                            //Gender\n                                            if (this.state.loadingCompetitions === false) {\n                                                return (\n                                                    <div style={{ textAlign: \"center\" }} className=\"box-body\">\n                                                        <Loader />\n                                                    </div>\n                                                )\n                                            }\n                                            else {\n                                                return (\n                                                    <div className=\"box-body\">\n                                                        <ChartBar data={this.state.competitionList} />\n                                                    </div>\n                                                )\n                                            }\n                                        })()}\n\n                                    </div>\n                                    {/* /.box */}\n\n                                </div>\n                            </div>\n\n                        </section>\n                    </div>\n                    {/* /.content-wrapper */}\n                </div>\n                <Footer eventID={this.props.match.params.EventID} />\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport Header from \"../structure/Header\";\nimport Footer from \"../structure/Footer\";\nimport Menu from \"../structure/Menu\";\nimport Loader from \"../Loader/Loader\";\nimport Chartbar from \"../Chart/bar\"\nimport ChartGender from \"../Chart/GenderComp\"\nimport ChartGround from \"../Chart/Ground\"\nimport ChartCheckpoint from \"../Chart/Checkpoint\"\nimport { FormattedMessage } from 'react-intl';\nimport Map from \"../map/map\"\nconst API_KEY = `${process.env.REACT_APP_API_TRAIL_KEY}`;\nconst API_URL = `${process.env.REACT_APP_API_TRAIL_URL}`;\nconst TOKEN = API_KEY;\n\nexport default class StatsCompetition extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loadingCategory: false,\n            loadingCategoryStart: false,\n            loadingGender: false,\n            loadingGenderStart: false,\n            loadingGenderLast: false,\n            loadingCategoryLast: false,\n            loadingGround: false,\n            loadingCheckpoint: false,\n            loadingNacionality: false,\n            loadingNacionalityLast: false,\n            loadingNacionalityStart: false,\n            categoryList: [],\n            categoryListStart: [],\n            categoryListLast: [],\n            genderList: [],\n            genderListLast: [],\n            GroundList: [],\n            CheckpointTotalList: [],\n            NacionalityListLast: [],\n            NacionalityList: [],\n            genderListStart: [],\n            NacionalityListStart: [],\n\n        };\n        this.GetData();\n    }\n    GetData() {\n        this.GetCategory();\n        this.GetGender();\n        this.GetCategoryLast();\n        this.GetGenderLast();\n        this.GetGround();\n        this.GetCheckpointTotal();\n        this.GetNacionality();\n        this.GetNacionalityLast();\n        this.GetCategoryStart();\n        this.GetGenderStart();\n        this.GetNacionalityStart();\n\n    }\n    /*for the first time when page is loaded */\n    GetCategory = async e => {\n        const API_CALL = await fetch(`${API_URL}/competition/CategoryTotal/${this.props.match.params.CompID}/`, {\n            headers: new Headers({\n                Authorization: TOKEN\n            })\n        });\n        const data = await API_CALL.json();\n        this.setState({ categoryList: data, loadingCategory: true });\n\n    };\n    GetCategoryStart = async e => {\n        const API_CALL = await fetch(`${API_URL}/competition/CategoryTotalStart/${this.props.match.params.CompID}/`, {\n            headers: new Headers({\n                Authorization: TOKEN\n            })\n        });\n        const data = await API_CALL.json();\n        this.setState({ categoryListStart: data, loadingCategoryStart: true });\n\n    };\n    GetCategoryLast = async e => {\n        const API_CALL = await fetch(`${API_URL}/competition/CategoryTotalLast/${this.props.match.params.CompID}/`, {\n            headers: new Headers({\n                Authorization: TOKEN\n            })\n        });\n        const data = await API_CALL.json();\n        this.setState({ categoryListLast: data, loadingCategoryLast: true });\n\n    };\n    GetGender = async e => {\n        const API_CALL = await fetch(`${API_URL}/competition/GenderTotal/${this.props.match.params.CompID}/`, {\n            headers: new Headers({\n                Authorization: TOKEN\n            })\n        });\n        const data = await API_CALL.json();\n        this.setState({ genderList: data, loadingGender: true });\n\n    };\n    GetGenderStart = async e => {\n        const API_CALL = await fetch(`${API_URL}/competition/GenderTotalStart/${this.props.match.params.CompID}/`, {\n            headers: new Headers({\n                Authorization: TOKEN\n            })\n        });\n        const data = await API_CALL.json();\n        this.setState({ genderListStart: data, loadingGenderStart: true });\n\n    };\n    GetGenderLast = async e => {\n        const API_CALL = await fetch(`${API_URL}/competition/GenderTotalLast/${this.props.match.params.CompID}/`, {\n            headers: new Headers({\n                Authorization: TOKEN\n            })\n        });\n        const data = await API_CALL.json();\n        this.setState({ genderListLast: data, loadingGenderLast: true });\n\n    };\n    GetGround = async e => {\n        const API_CALL = await fetch(`${API_URL}/competition/Checkpoints/${this.props.match.params.CompID}/`, {\n            headers: new Headers({\n                Authorization: TOKEN\n            })\n        });\n\n        const data = await API_CALL.json();\n        this.setState({ GroundList: data, loadingGround: true });\n    };\n    GetCheckpointTotal = async e => {\n        const API_CALL = await fetch(`${API_URL}/results/AthTotalByCheckpoint/${this.props.match.params.CompID}/`, {\n            headers: new Headers({\n                Authorization: TOKEN\n            })\n        });\n\n        const data = await API_CALL.json();\n        this.setState({ CheckpointTotalList: data, loadingCheckpoint: true });\n    };\n    GetNacionality = async e => {\n        const API_CALL = await fetch(`${API_URL}/competition/NacionalityTotal/${this.props.match.params.CompID}/`, {\n            headers: new Headers({\n                Authorization: TOKEN\n            })\n        });\n        const data = await API_CALL.json();\n        this.setState({ NacionalityList: data, loadingNacionality: true });\n\n    };\n    GetNacionalityStart = async e => {\n        const API_CALL = await fetch(`${API_URL}/competition/NacionalityTotalStart/${this.props.match.params.CompID}/`, {\n            headers: new Headers({\n                Authorization: TOKEN\n            })\n        });\n        const data = await API_CALL.json();\n        this.setState({ NacionalityListStart: data, loadingNacionalityStart: true });\n\n    };\n    GetNacionalityLast = async e => {\n        const API_CALL = await fetch(`${API_URL}/competition/NacionalityTotalLast/${this.props.match.params.CompID}/`, {\n            headers: new Headers({\n                Authorization: TOKEN\n            })\n        });\n        const data = await API_CALL.json();\n        this.setState({ NacionalityListLast: data, loadingNacionalityLast: true });\n\n    };\n\n    /*when props change*/\n    componentDidUpdate(prevProps) {\n        if (prevProps.match.params.CompID !== this.props.match.params.CompID) {\n            this.setState({\n                loadingCategory: false,\n                loadingCategoryStart: false,\n                loadingGender: false,\n                loadingGenderStart: false,\n                loadingGenderLast: false,\n                loadingCategoryLast: false,\n                loadingGround: false,\n                loadingGroundStart: false,\n\n            });\n            this.GetData();\n\n        }\n    }\n    render() {\n        return (\n            <div>\n                <div>\n                    <Header eventID={this.props.match.params.EventID} />\n                    {/*Send the event id to the MENU, to get the competition list*/}\n                    <Menu eventID={this.props.match.params.EventID} competitionID={this.props.match.params.CompID} />\n                    {/*CONTENT*/}\n                    <div>\n                        {/* Content Wrapper. Contains page content */}\n                        <div className=\"content-wrapper\">\n\n                            {/* Content Header (Page header) */}\n                            <section className=\"content-header\">\n                                <h1>\n                                    <span >{this.props.match.params.CompName}</span>\n                                </h1>\n                            </section>\n                            {/* Main content */}\n                            {/*Check if data is loading*/}\n                            <section className=\"content\">\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        {/* general form elements */}\n                                        <div className=\"box box-primary\">\n                                            <div className=\"box-header with-border\">\n                                                <div style={{ textAlign: \"center\" }} >\n                                                    <h3><FormattedMessage id=\"CATEGORY\" /> </h3>\n                                                </div>\n                                            </div>\n                                            {/* /.box-header */}\n                                            {/* form start */}\n                                            {(() => {\n                                                //Category\n                                                if (this.state.loadingCategory === false && this.state.loadingCategoryLast === false && this.state.loadingCategoryStart === false) {\n                                                    return (\n                                                        <div style={{ textAlign: \"center\" }} className=\"box-body\">\n                                                            <Loader />\n                                                        </div>\n                                                    )\n                                                }\n                                                else {\n                                                    return (\n\n                                                        <div className=\"box-body\">\n                                                            <FormattedMessage id=\"STARTS\" >\n                                                                {Starts =>\n                                                                    <FormattedMessage id=\"INSCRIPTIONS\" >\n                                                                        {Inscriptions =>\n                                                                            <FormattedMessage id=\"ARRIVALS\" >\n                                                                                {Arrivals =>\n                                                                                    <Chartbar ISThree={true} Arrivals={Arrivals} Start={Starts} Inscription={Inscriptions} data={this.state.categoryList} dataStart={this.state.categoryListStart} dataLast={this.state.categoryListLast} />\n                                                                                }\n                                                                            </FormattedMessage>\n                                                                        }\n                                                                    </FormattedMessage>\n                                                                }\n                                                            </FormattedMessage>\n\n                                                        </div>\n                                                    )\n                                                }\n                                            })()}\n                                        </div>\n                                        {/* /.box */}\n\n                                    </div>\n\n                                    <div className=\"col-md-6\">\n                                        {/* general form elements */}\n                                        <div className=\"box box-primary\">\n                                            <div className=\"box-header with-border\">\n                                                <div style={{ textAlign: \"center\" }} >\n                                                    <h3><FormattedMessage id=\"GENDER\" /></h3>\n                                                </div>\n                                            </div>\n                                            {/* /.box-header */}\n                                            {/* form start */}\n                                            {(() => {\n                                                //Gender\n                                                if (this.state.loadingGenderStart ===false && this.state.loadingGender === false && this.state.loadingGenderLast === false) {\n                                                    return (\n                                                        <div style={{ textAlign: \"center\" }} className=\"box-body\">\n                                                            <Loader />\n                                                        </div>\n                                                    )\n                                                }\n                                                else {\n                                                    return (\n                                                        <div className=\"box-body\">\n                                                            <FormattedMessage id=\"STARTS\" >\n                                                                {Starts =>\n                                                                    <FormattedMessage id=\"INSCRIPTIONS\" >\n                                                                        {Inscriptions =>\n                                                                            <FormattedMessage id=\"ARRIVALS\" >\n                                                                                {Arrivals =>\n                                                                                    <ChartGender Arrivals={Arrivals} Start={Starts} Inscription={Inscriptions} data={this.state.genderList} dataStart={this.state.genderListStart} dataLast={this.state.genderListLast} />\n                                                                                }\n                                                                            </FormattedMessage>\n                                                                        }\n                                                                    </FormattedMessage>\n                                                                }\n                                                            </FormattedMessage>\n\n                                                        </div>\n                                                    )\n\n                                                }\n                                            })()}\n\n                                        </div>\n                                        {/* /.box */}\n\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        {/* general form elements */}\n                                        <div className=\"box box-primary\">\n                                            <div className=\"box-header with-border\">\n                                                <div style={{ textAlign: \"center\" }} >\n                                                    <h3><FormattedMessage id=\"HEIGHT\" /></h3>\n                                                </div>\n                                            </div>\n                                            {/* /.box-header */}\n                                            {/* form start */}\n                                            {(() => {\n                                                if (this.state.loadingGround === false) {\n                                                    return (\n                                                        <div style={{ textAlign: \"center\" }} className=\"box-body\">\n                                                            <Loader />\n                                                        </div>\n                                                    )\n                                                }\n                                                else {\n\n                                                    return (\n                                                        <div className=\"box-body\">\n                                                            <ChartGround data={this.state.GroundList} />\n                                                        </div>\n                                                    )\n\n                                                }\n                                            })()}\n\n                                        </div>\n                                        {/* /.box */}\n\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        {/* general form elements */}\n                                        <div className=\"box box-primary\">\n                                            <div className=\"box-header with-border\">\n                                                <div style={{ textAlign: \"center\" }} >\n                                                    <h3><FormattedMessage id=\"CHECKPOINT\" /></h3>\n                                                </div>\n                                            </div>\n                                            {/* /.box-header */}\n                                            {/* form start */}\n                                            {(() => {\n                                                //Gender\n\n                                                if (this.state.loadingCheckpoint === false) {\n                                                    return (\n                                                        <div style={{ textAlign: \"center\" }} className=\"box-body\">\n                                                            <Loader />\n                                                        </div>\n                                                    )\n                                                }\n                                                else {\n                                                    return (\n                                                        <div className=\"box-body\">\n                                                            <ChartCheckpoint data={this.state.CheckpointTotalList} />\n                                                        </div>\n                                                    )\n\n                                                }\n                                            })()}\n\n                                        </div>\n                                        {/* /.box */}\n\n                                    </div>\n                                    <div className=\"col-md-12\">\n                                        {/* general form elements */}\n                                        <div className=\"box box-primary\">\n                                            <div className=\"box-header with-border\">\n                                                <div style={{ textAlign: \"center\" }} >\n                                                    <h3><FormattedMessage id=\"COUNTRY\" /></h3>\n                                                </div>\n                                            </div>\n                                            {/* /.box-header */}\n                                            {/* form start */}\n                                            {(() => {\n                                                //Gender\n\n                                                if (this.state.loadingNacionality === false && this.state.loadingNacionalityLast === false && this.state.loadingNacionalityStart === false) {\n                                                    return (\n                                                        <div style={{ textAlign: \"center\" }} className=\"box-body\">\n                                                            <Loader />\n                                                        </div>\n                                                    )\n                                                }\n                                                else {\n                                                    return (\n                                                        <div className=\"box-body\">\n                                                            <FormattedMessage id=\"STARTS\" >\n                                                                {Starts =>\n                                                                    <FormattedMessage id=\"INSCRIPTIONS\" >\n                                                                        {Inscriptions =>\n                                                                            <FormattedMessage id=\"ARRIVALS\" >\n                                                                                {Arrivals =>\n                                                                                    <Chartbar ISThree={true} Arrivals={Arrivals} Start={Starts} Inscription={Inscriptions} data={this.state.NacionalityList} dataStart={this.state.NacionalityListStart} dataLast={this.state.NacionalityListLast} />\n                                                                                }\n                                                                            </FormattedMessage>\n                                                                        }\n                                                                    </FormattedMessage>\n                                                                }\n                                                            </FormattedMessage>\n                                                        </div>\n                                                    )\n\n                                                }\n                                            })()}\n\n                                        </div>\n                                        {/* /.box */}\n\n                                    </div>\n                                </div>\n                            </section>\n                        </div>\n                        {/* /.content-wrapper */}\n                    </div>\n                    <Footer eventID={this.props.match.params.EventID} />\n                </div >\n\n            </div >\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport Header from \"../structure/Header\";\nimport Footer from \"../structure/Footer\";\nimport Menu from \"../structure/Menu\";\nimport { FormattedMessage } from 'react-intl';\n\n\nexport default class feedback extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          name: '',\n          email: '',\n          message: '',\n          subject: '',\n          isClicked: false,\n\n        };\n\n      }\n    onNameChange(event) {\n        this.setState({name: event.target.value})\n      }\n    \n      onEmailChange(event) {\n        this.setState({email: event.target.value})\n      }\n    \n      onMessageChange(event) {\n        this.setState({message: event.target.value})\n      }\n      onSubjecthange(event) {\n        this.setState({subject: event.target.value})\n      }\n      handleSubmit(event) {\n        this.setState({isClicked:true})\n        event.preventDefault();\n        console.log(this.state);\n    }\n    \n    render() {\n\n        return (\n            <div>\n                <Header eventID={this.props.match.params.EventID} />\n                {/*Send the event id to the MENU, to get the competition list*/}\n                <Menu eventID={this.props.match.params.EventID} competitionID={0} />\n                {/*CONTENT*/}\n                <div>\n                    {/* Content Wrapper. Contains page content */}\n                    <div className=\"content-wrapper\">\n\n                        {/* Content Header (Page header) */}\n                        <section className=\"content-header\">\n                            <h1>\n                                < FormattedMessage id=\"FEEDBACK\" />\n                            </h1>\n                        </section>\n                        {/* Main content */}\n                        <section class=\"content\">\n                            <div class=\"box box-primary\">\n                                <div class=\"box-header with-border\">\n                                    <h3 class=\"box-title\"></h3>\n                                </div>\n                                {/* /.box-header */}\n                                {/* form start */}\n                                <form role=\"form\" onSubmit={this.handleSubmit.bind(this)} method=\"POST\" >\n                                    <div className=\"box-body\">\n                                        <div className=\"form-group\">\n                                            <label>< FormattedMessage id=\"NAME\" />:</label>\n                                            <input id=\"name\"  value={this.state.name} onChange={this.onNameChange.bind(this)} type=\"text\" required className=\"form-control\" placeholder=\"O seu nome\" autoComplete=\"off\" style={{ backgroundImage: 'url(\"data:image/png', backgroundRepeat: 'no-repeat', backgroundAttachment: 'scroll', backgroundSize: '16px 18px', backgroundPosition: '98% 50%', cursor: 'auto' }} />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"exampleInputEmail1\">< FormattedMessage id=\"EMAIL\" />:</label>\n                                            <input type=\"email\"  value={this.state.email} onChange={this.onEmailChange.bind(this)} required  value={this.state.email} className=\"form-control\" placeholder=\"O seu email\" autoComplete=\"off\" style={{ backgroundImage: 'url(\"data:image/png', backgroundRepeat: 'no-repeat', backgroundAttachment: 'scroll', backgroundSize: '16px 18px', backgroundPosition: '98% 50%', cursor: 'auto' }} />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label>< FormattedMessage id=\"SUBJECT\" />:</label>\n                                            <input type=\"text\" required value={this.state.subject} onChange={this.onSubjecthange.bind(this)}   className=\"form-control\" placeholder=\"Assunto desejado\" autoComplete=\"off\" style={{ backgroundImage: 'url(\"data:image/png', backgroundRepeat: 'no-repeat', backgroundAttachment: 'scroll', backgroundSize: '16px 18px', backgroundPosition: '98% 50%', cursor: 'auto' }} />\n                                        </div>\n                                         <div class=\"form-group\">\n                                            <label>< FormattedMessage id=\"MENSAGE\" />:</label>\n                                            <textarea class=\"form-control\" value={this.state.message} onChange={this.onMessageChange.bind(this)} required rows=\"5\" placeholder=\"Insira a sua mensagem\"></textarea>\n                                         </div>\n                                    </div>\n                                    {/* /.box-body */}\n                                    <div className=\"box-footer\">\n                                        <button type=\"submit\" disabled={this.state.isClicked===false?\"\":\"disabled\"} className=\"btn btn-primary\">{this.state.isClicked===false? < FormattedMessage id=\"SEND\" /> : <div> < FormattedMessage id=\"SEND\" /> <i class=\"fa fa-refresh fa-spin\"></i></div>}</button>\n                                    </div>\n                                </form>\n                            </div>\n                        </section>\n                    </div>\n                    {/* /.content-wrapper */}\n                </div>\n                <Footer eventID={this.props.match.params.EventID} />\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport NavBar from \"../structure/HeaderHome\";\nimport FooterPage from \"../structure/footerHome\";\nexport default class Erro404 extends Component {\n    render() {\n        return (\n            <div>\n                <NavBar />\n                    {/* Content Header (Page header) */}\n\n                    {/* Main content */}\n                    <section className=\"content\" style={{height:\"80vh\"}}>\n                        <div className=\"error-page\">\n                            <h2 className=\"headline text-yellow\"> 404</h2>\n                            <div className=\"error-content\">\n                                <h3><i className=\"fa fa-warning text-yellow\" /> Oops! Page not found.</h3>\n                                <p>\n                                    We could not find the page you were looking for.</p>\n\n                            </div>\n                            {/* /.error-content */}\n                        </div>\n                        {/* /.error-page */}\n                    </section>\n\n                <FooterPage />\n            </div>\n        )\n    }\n}\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport App from \"../App\";\nimport PageSubscribers from \"./Pages/Participants\"\nimport PageGiveUp from \"./Pages/DontFinished\"\nimport PageSubscriversCompetiton from \"./Pages/ParicipantsCompetiton\"\nimport PageCheckpoints from \"./Pages/Checkpoints\"\nimport PageWinners from \"./Pages/Winners\"\nimport PageAthleteDetail from \"./Pages/AthleteDetail\"\nimport PageTeams from \"./Pages/Teams\"\nimport PageFavorites from \"./Pages/Favorites\"\nimport PageStatsGlobal from \"./Pages/StatsGlobal\"\nimport PageStatsComp from \"./Pages/StatsCompetition\"\nimport PageFeedback from \"./Pages/feedback\"\nimport Erro404 from \"./Errors/404\"\n\n\nconst Router = () => (\n  <BrowserRouter >\n    <Switch>\n      <Route path=\"/\" component={App} exact />\n      <Route path=\"/EventParticipants/:EventID\"   component={PageSubscribers} />   \n      <Route path=\"/AthleteDetail/:EventID/:CompID/:AthleteID\"  component={PageAthleteDetail} /> \n      <Route path=\"/EventGiveUp/:EventID/:CompID/:CompName\"  component={PageGiveUp} /> \n      <Route path=\"/ParticipantsCompetiton/:EventID/:CompID/:CompName\"  component={PageSubscriversCompetiton} /> \n      <Route path=\"/Checkpoints/:EventID/:CompID/:CompName\"  component={PageCheckpoints} /> \n      <Route path=\"/Teams/:EventID/:CompID/:CompName\"  component={PageTeams} /> \n      <Route path=\"/Winners/:EventID/:CompID/:CompName\"  component={PageWinners} /> \n      <Route path=\"/Favorites/:EventID\"  component={PageFavorites} /> \n      <Route path=\"/Stats/:EventID\"  component={PageStatsGlobal} /> \n      <Route path=\"/Feedback/:EventID\"  component={PageFeedback} /> \n      <Route path=\"/StatsComp/:EventID/:CompID/:CompName\"  component={PageStatsComp} /> \n      <Route component={Erro404}/>\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Router","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\nwindow.self.addEventListener(\"push\", event => {\n  const data = event.data.json()\n  const { title } = data\n\n  const body = {\n    body: data.body,\n    icon: data.icon\n  }\n\n  event.waitUntil(window.self.registration.showNotification(title, body))\n})\nexport function register(config) {\n  window.self.addEventListener(\"push\", event => {\n    const data = event.data.json()\n    const { title } = data\n\n    const body = {\n      body: data.body,\n      icon: data.icon\n    }\n\n    event.waitUntil(window.self.registration.showNotification(title, body))\n  })\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Router from './components/router';\nimport registerServiceWorker from './registerServiceWorker';\nimport * as serviceWorker from './serviceWorker';\nimport {IntlProvider} from \"react-intl\"\nimport Wrapper from \"./languages/Wrapper\"\n\nReactDOM.render(<Wrapper><Router /></Wrapper> , document.getElementById('root'));\n\n\n//registerServiceWorker();\n//serviceWorker.register();\n//SEND the id of the new user\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nregisterServiceWorker();\nserviceWorker.register();\n\n","var map = {\n\t\"./ad.svg\": 143,\n\t\"./ae.svg\": 144,\n\t\"./af.svg\": 145,\n\t\"./ag.svg\": 146,\n\t\"./ai.svg\": 147,\n\t\"./al.svg\": 148,\n\t\"./am.svg\": 149,\n\t\"./ao.svg\": 150,\n\t\"./ar.svg\": 151,\n\t\"./as.svg\": 152,\n\t\"./at.svg\": 153,\n\t\"./au.svg\": 154,\n\t\"./aw.svg\": 155,\n\t\"./az.svg\": 156,\n\t\"./ba.svg\": 157,\n\t\"./bb.svg\": 158,\n\t\"./bd.svg\": 159,\n\t\"./be.svg\": 160,\n\t\"./bf.svg\": 161,\n\t\"./bg.svg\": 162,\n\t\"./bh.svg\": 163,\n\t\"./bi.svg\": 164,\n\t\"./bj.svg\": 165,\n\t\"./bm.svg\": 166,\n\t\"./bo.svg\": 167,\n\t\"./br.svg\": 168,\n\t\"./bs.svg\": 169,\n\t\"./bt.svg\": 170,\n\t\"./bw.svg\": 171,\n\t\"./by.svg\": 172,\n\t\"./bz.svg\": 173,\n\t\"./ca.svg\": 174,\n\t\"./cd.svg\": 175,\n\t\"./cf.svg\": 176,\n\t\"./cg.svg\": 177,\n\t\"./ch.svg\": 178,\n\t\"./ci.svg\": 179,\n\t\"./ck.svg\": 180,\n\t\"./cl.svg\": 181,\n\t\"./cm.svg\": 182,\n\t\"./cn.svg\": 183,\n\t\"./co.svg\": 184,\n\t\"./cr.svg\": 185,\n\t\"./cu.svg\": 186,\n\t\"./cv.svg\": 187,\n\t\"./cw.svg\": 188,\n\t\"./cy.svg\": 189,\n\t\"./cz.svg\": 190,\n\t\"./de.svg\": 191,\n\t\"./dj.svg\": 192,\n\t\"./dk.svg\": 193,\n\t\"./dm.svg\": 194,\n\t\"./do.svg\": 195,\n\t\"./dz.svg\": 196,\n\t\"./ec.svg\": 197,\n\t\"./ee.svg\": 198,\n\t\"./eg.svg\": 199,\n\t\"./er.svg\": 200,\n\t\"./es.svg\": 201,\n\t\"./et.svg\": 202,\n\t\"./fi.svg\": 203,\n\t\"./fj.svg\": 204,\n\t\"./fk.svg\": 205,\n\t\"./fm.svg\": 206,\n\t\"./fo.svg\": 207,\n\t\"./fr.svg\": 208,\n\t\"./ga.svg\": 209,\n\t\"./gb.svg\": 210,\n\t\"./gd.svg\": 211,\n\t\"./ge.svg\": 212,\n\t\"./gg.svg\": 213,\n\t\"./gh.svg\": 214,\n\t\"./gi.svg\": 215,\n\t\"./gl.svg\": 216,\n\t\"./gm.svg\": 217,\n\t\"./gn.svg\": 218,\n\t\"./gq.svg\": 219,\n\t\"./gr.svg\": 220,\n\t\"./gt.svg\": 221,\n\t\"./gu.svg\": 222,\n\t\"./gw.svg\": 223,\n\t\"./hk.svg\": 224,\n\t\"./hn.svg\": 225,\n\t\"./hr.svg\": 226,\n\t\"./ht.svg\": 227,\n\t\"./hu.svg\": 228,\n\t\"./id.svg\": 229,\n\t\"./ie.svg\": 230,\n\t\"./il.svg\": 231,\n\t\"./im.svg\": 232,\n\t\"./in.svg\": 233,\n\t\"./io.svg\": 234,\n\t\"./iq.svg\": 235,\n\t\"./ir.svg\": 236,\n\t\"./is.svg\": 237,\n\t\"./it.svg\": 238,\n\t\"./je.svg\": 239,\n\t\"./jm.svg\": 240,\n\t\"./jo.svg\": 241,\n\t\"./jp.svg\": 242,\n\t\"./ke.svg\": 243,\n\t\"./kg.svg\": 244,\n\t\"./kh.svg\": 245,\n\t\"./ki.svg\": 246,\n\t\"./km.svg\": 247,\n\t\"./kn.svg\": 248,\n\t\"./kp.svg\": 249,\n\t\"./kr.svg\": 250,\n\t\"./kw.svg\": 251,\n\t\"./ky.svg\": 252,\n\t\"./kz.svg\": 253,\n\t\"./la.svg\": 254,\n\t\"./lb.svg\": 255,\n\t\"./li.svg\": 256,\n\t\"./lk.svg\": 257,\n\t\"./lr.svg\": 258,\n\t\"./ls.svg\": 259,\n\t\"./lt.svg\": 260,\n\t\"./lu.svg\": 261,\n\t\"./lv.svg\": 262,\n\t\"./ly.svg\": 263,\n\t\"./ma.svg\": 264,\n\t\"./mc.svg\": 265,\n\t\"./md.svg\": 266,\n\t\"./me.svg\": 267,\n\t\"./mg.svg\": 268,\n\t\"./mh.svg\": 269,\n\t\"./mk.svg\": 270,\n\t\"./ml.svg\": 271,\n\t\"./mm.svg\": 272,\n\t\"./mn.svg\": 273,\n\t\"./mo.svg\": 274,\n\t\"./mp.svg\": 275,\n\t\"./mq.svg\": 276,\n\t\"./mr.svg\": 277,\n\t\"./ms.svg\": 278,\n\t\"./mt.svg\": 279,\n\t\"./mu.svg\": 280,\n\t\"./mv.svg\": 281,\n\t\"./mw.svg\": 282,\n\t\"./mx.svg\": 283,\n\t\"./my.svg\": 284,\n\t\"./mz.svg\": 285,\n\t\"./na.svg\": 286,\n\t\"./nato.svg\": 287,\n\t\"./ne.svg\": 288,\n\t\"./nf.svg\": 289,\n\t\"./ng.svg\": 290,\n\t\"./ni.svg\": 291,\n\t\"./nl.svg\": 292,\n\t\"./no.svg\": 293,\n\t\"./np.svg\": 294,\n\t\"./nr.svg\": 295,\n\t\"./nu.svg\": 296,\n\t\"./nz.svg\": 297,\n\t\"./om.svg\": 298,\n\t\"./pa.svg\": 299,\n\t\"./pe.svg\": 300,\n\t\"./pf.svg\": 301,\n\t\"./pg.svg\": 302,\n\t\"./ph.svg\": 303,\n\t\"./pk.svg\": 304,\n\t\"./pl.svg\": 305,\n\t\"./pn.svg\": 306,\n\t\"./pr.svg\": 307,\n\t\"./ps.svg\": 308,\n\t\"./pt.svg\": 309,\n\t\"./pw.svg\": 310,\n\t\"./py.svg\": 311,\n\t\"./qa.svg\": 312,\n\t\"./ro.svg\": 313,\n\t\"./rs.svg\": 314,\n\t\"./ru.svg\": 315,\n\t\"./rw.svg\": 316,\n\t\"./sa.svg\": 317,\n\t\"./sb.svg\": 318,\n\t\"./sc.svg\": 319,\n\t\"./sd.svg\": 320,\n\t\"./se.svg\": 321,\n\t\"./sg.svg\": 322,\n\t\"./si.svg\": 323,\n\t\"./sk.svg\": 324,\n\t\"./sl.svg\": 325,\n\t\"./sm.svg\": 326,\n\t\"./sn.svg\": 327,\n\t\"./so.svg\": 328,\n\t\"./sr.svg\": 329,\n\t\"./ss.svg\": 330,\n\t\"./st.svg\": 331,\n\t\"./sv.svg\": 332,\n\t\"./sx.svg\": 333,\n\t\"./sy.svg\": 334,\n\t\"./sz.svg\": 335,\n\t\"./tc.svg\": 336,\n\t\"./td.svg\": 337,\n\t\"./tg.svg\": 338,\n\t\"./th.svg\": 339,\n\t\"./tibet.svg\": 340,\n\t\"./tj.svg\": 341,\n\t\"./tk.svg\": 342,\n\t\"./tm.svg\": 343,\n\t\"./tn.svg\": 344,\n\t\"./to.svg\": 345,\n\t\"./tr.svg\": 346,\n\t\"./tt.svg\": 347,\n\t\"./tv.svg\": 348,\n\t\"./tw.svg\": 349,\n\t\"./tz.svg\": 350,\n\t\"./ua.svg\": 351,\n\t\"./ug.svg\": 352,\n\t\"./us.svg\": 353,\n\t\"./uy.svg\": 354,\n\t\"./uz.svg\": 355,\n\t\"./ve.svg\": 356,\n\t\"./vi.svg\": 357,\n\t\"./vn.svg\": 358,\n\t\"./vu.svg\": 359,\n\t\"./ws.svg\": 360,\n\t\"./ye.svg\": 361,\n\t\"./za.svg\": 362,\n\t\"./zm.svg\": 363,\n\t\"./zw.svg\": 364\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 77;"],"sourceRoot":""}