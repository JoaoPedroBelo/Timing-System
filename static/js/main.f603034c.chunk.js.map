{"version":3,"sources":["languages/Wrapper.js","components/Pages/trails.jsx","components/structure/carousel.jsx","components/structure/HeaderHome.jsx","components/structure/LanguageSelector.jsx","components/structure/footerHome.jsx","components/Loader/Loader.jsx","components/Pages/Home.jsx","App.js","components/structure/Header.jsx","components/structure/Footer.jsx","components/structure/Menu.jsx","components/Notifications/subscription.jsx","components/favorites/favoritesChecker.jsx","components/Scripts/PaginationHelper.js","components/Tables/TableParticipants.jsx","components/Widgets/NumberParticipants.jsx","components/Widgets/NumberCategories.jsx","components/Widgets/NumberTeams.jsx","components/Widgets/NumberNationalities.jsx","components/Pages/Participants.jsx","components/Tables/TableGiveUp.jsx","components/Tables/TableDisqualified.jsx","components/Pages/DontFinished.jsx","components/Tables/TableParticipantsCompetition.jsx","components/Pages/ParicipantsCompetiton.jsx","components/Scripts/time.js","components/Tables/TableCheckpoints.jsx","components/Chart/Velocity.jsx","components/Chart/Position.jsx","components/Chart/bar.jsx","components/Chart/pie.jsx","components/Chart/GenderComp.jsx","components/Chart/Ground.jsx","components/Chart/Checkpoint.jsx","components/Widgets/FasterMale.jsx","components/Widgets/FasterFemale.jsx","components/Pages/Checkpoints.jsx","components/Tables/TableWinners.jsx","components/Pages/Winners.jsx","components/Widgets/Faster.jsx","components/Tables/TableGlobal.jsx","components/Widgets/Position.jsx","components/Widgets/Loading.jsx","components/Widgets/Time.jsx","components/Widgets/velocity.jsx","components/Widgets/LastPlace.jsx","components/Pages/AthleteDetail.jsx","components/Tables/TableTeams.jsx","components/Pages/Teams.jsx","components/Tables/TableFavorites.jsx","components/Widgets/NumberFavorites.jsx","components/Pages/Favorites.jsx","components/Pages/StatsGlobal.jsx","components/Pages/StatsCompetition.jsx","components/Pages/feedback.jsx","components/Errors/404.jsx","components/router.jsx","registerServiceWorker.js","serviceWorker.js","index.js","../node_modules/react-flags-select/flags sync /^/.//.*/.svg$"],"names":["local","lang","Trails","props","className","trails","map","trail","today","Date","dd","String","getDate","padStart","mm","getMonth","date","getFullYear","hours","getHours","minutes","getMinutes","seconds","getSeconds","dateTime","key","trail_event_id","style","marginBottom","to","pathname","width","height","src","imageHome_url","alt","name","init_date","end_date","color","id","substring","size","window","innerWidth","Carousel","0","items","1","handleOnDragStart","e","preventDefault","autoPlay","responsive","this","getSize","fadeOutAnimation","mouseDragEnabled","buttonsDisabled","dotsDisabled","autoPlayInterval","onDragStart","React","Component","Header","location","fontSize","href","onClick","GoToHomePage","Context","createContext","localStorage","getItem","navigator","language","toUpperCase","Portuguese","Spanish","French","English","Wrapper","useState","locale","setLocale","messages","setMessages","Provider","value","selectLang","newLocale","removeItem","setItem","children","LanguageSelector","context","useContext","defaultCountry","onSelect","countryCode","countries","showSelectedLabel","showOptionLabel","FooterPage","position","Math","floor","random","length","App","prevProps","type","API_KEY","process","API_URL","TOKEN","getTrailEvents","a","fetch","headers","Headers","Authorization","API_CALL","json","data","JSON","stringify","clear","setState","showMore","loading","getALLTrailEvents","scrollTo","checkShow","state","trailsData","parse","console","log","backgroundColor","LoadingAthletes","Button","background","Home","getEventInfo","eventID","EventInfo","data-toggle","role","rehydrate","CheckSize","float","eventLogo_url","class","Footer","maxWidth","SponserLogo_url","menuSizeTop","menuSizeItem","fontWeight","Menu","getCompetitionList","CompetitionList","OnInit","compList","reload","feedback","activeStyle","menuStatic","competitionID","short_name","getFeedBackPage","data-widget","Competition","parseInt","competition_id","long_name","convertedVapidKey","base64String","padding","repeat","base64","replace","rawData","atob","outputArray","Uint8Array","i","charCodeAt","urlBase64ToUint8Array","sendSubscription","subscription","userID","status","body","method","subscribeUser","serviceWorker","ready","then","registration","pushManager","getSubscription","existedSubscription","subscribe","applicationServerKey","userVisibleOnly","newSubscription","catch","Notification","permission","error","favoritesChecker","ListaFavoritos","userAgent","toLowerCase","indexOf","tableFav","removeFavoritesTable","removeFavorites","addFavorites","AthleteDetail","checkFavoritesResume","checkFavorites","checkIfTableorResume","calculatePagination","minimalSize","sizeArray","push","TableSubscribers","category","athleteList","athelete","Tableuniquecategory","Set","sort","nacionality","athlete","Tableuniquenacionality","competition","Tableuniquecompetition","club","Tableuniqueclub","inscription_status_code","Tableuniqueinscription_status_code","sexo","gender","Tableuniquesexo","columns","accessor","sortable","textAlign","show","d","Number","dorsal_number","Filter","filter","onChange","txt","event","target","placeholder","Cell","row","original","athlete_id","ranking","rankingLast","filterMethod","_original","startsWith","includes","textAlignLast","k","toString","filterable","defaultSorted","desc","previousText","nextText","noDataText","defaultPageSize","pageSizeOptions","showPagination","showPaginationTop","showPaginationBottom","showPageSizeOptions","showPageJump","collapseOnSortingChange","collapseOnPageChange","collapseOnDataChange","freezeWhenExpanded","multiSort","resizable","defaultSortDesc","pageText","rowsText","NumberParticipants","NumberCategories","NumberTeams","NumberNationalities","giveup","country","EventSubscribers","getAthletsList","match","params","EventID","athList","display","justifyContent","CheckifThereisDatatoShowTable","TableGiveUP","escalao","Tableuniquelocal","mimWidth","peitoral","TableDisqualified","getAthletesGiveUPList","CompID","atheleGiveUPList","loadingGiveUP","getAthletesDisqualifiedList","atheleDisqualifiedList","loadingDisqualified","bind","CompName","CheckifThereisDatatoShowTableG","CheckifThereisDatatoShowTableD","FormatTime","time","TimeSplit","split","H","M","S","options","TableCheckpoints","checkPosition","viewIndex","FasterMale","Array","el","fasterTime","acumulated_time","fasterName","checkShowNameZeros","checkZeros","FasterFemale","AthleteListSize","sizeCheckpointList","GetFirstRunCheckpointList","CheckpointList","loadingCheckpoints","Getlastcheckpoint","GetCheckpointList","GetAthleteList","Checkpointid","AthleteList","loadingAthlets","GetTotalAthlets","CheckpointTotal","CheckpointTotalLoaded","checkpointname","checkpointnameShow","AtheletsTotal","AtheletsTotalLoaded","setInterval","checkpointID","checkpointName","checkpoint","checkpoint_id","total","checkpointValue","CheckpointID","Value","checkpoint_order","Tooltip","placement","title","arrow","UpdateStateCheckpoint","GetBadgesvalues","paddingBottom","zIndex","border","LoadingCheckpoints","alignItems","ListAthletes","Winners","GetCategoryList","API_CALL1","dataSlice","CategoryList","loadingAthlete","loadingCategory","GetAthleteListGender","Gender","GetAthleteListCategory","CategoryName","Positon","Category","StaticElementsTable","LoadingCategory","StaticElementGlobal","StaticElementGlobalM","StaticElementGlobalF","LoadingAthlete","TableGlobal","distance","prediction","distancia_acumulada","km","finaltime","parseFloat","KMperH","isNaN","Infinity","toFixed","MInperKM","CalculateKMperH","isFinite","Altitude","altitude","checkZerosPos","ReturnPredictions","checkZerosTime","getDistance","PositionGlobal","time_status","getaltitude","CalculateMINperKM","Velocity","Faster","Normal","labels","slice","datasets","label","Name","fill","lineTension","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","borderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","LanguageFaster","LanguageAverage","Average","LanguageSlow","Slow","chartDataVerification","Position","Global","Tier","legend","scales","yAxes","ticks","max","maxY","min","stepSize","LANGUAGEGERAL","LANGUAGEGENDER","LANGUAGECATEGORY","positionGlobal","positionGender","positionTier","text","velocity","speedKM","speedMIN","LastPlace","place","MICROSERVICE_PDFS","LastCheckpointID","GetListGlobal","AthleteID","ListGlobal","loadingGlobal","PersonalInfo","GetListGlobalFaster","ListFaster","loadingFaster","GetListGlobalSlow","ListSlow","loadingSlow","GetListGlobalAverage","ListAverage","loadingAverage","GetCheckpointInfo","CheckpointInfo","loadingCheckpoint","Athlete","athleteListStatus","loadingList","loadingTier","loadingGender","Local","Tempo","global","PositionTier","PositionGender","GetLastPosition","forEach","element","KM","MIN","AvarageKM","AvarageMIN","ChartVelocityKMRender","ChartVelocityMINRender","ChartPositionRender","LastPositon","pop","certification","getCertificate","disabled","ID_Template","cert_tpl","Codigo_Validacao","cert_code","Nome_Atleta","encodeURIComponent","Sexo","Prova","Posicao_Escalao","Escalao","Posicao_Geral","Peitoral","Clube","Total_Info_Recebida","Hash_Calculada","require","md5","url","PositionWidgetRender","TimeVelocityWidgetRender","photo_url","getStatus","showCertificateButton","tableGlobal","chartsRender","compID","athleteid","firstrun","Teams","GetLastCheckpoint","checkpointid","GetTeamsMale","teamlist","GetTeamsFemale","genderState","GetTeamsMaleorCache","GetTeamsFemaleorCache","UpdateStateGender","team","APItime","Time","timeLimited","pointerEvents","Team","LogoURL","Athlets","paddingTop","borderSpacing","borderCollapse","StaticElementTeamM","StaticElementTeamF","checkIFthereISDataTOShow","TableFavorites","index","splice","removeFav","NumberFavorites","arrayFavorites","Favorites","renderTable","bar","ISThree","Label","Inscription","Start","dataStart","Arrivals","dataLast","beginAtZero","pie","StatsGlobal","GetCategory","categoryList","GetGender","genderList","GetCompetitions","competitionList","loadingCompetitions","GetNacionality","nacionalityList","loadingNacionality","GenderComp","Checkpoint","StatsCompetition","GetCategoryStart","categoryListStart","loadingCategoryStart","GetCategoryLast","categoryListLast","loadingCategoryLast","GetGenderStart","genderListStart","loadingGenderStart","GetGenderLast","genderListLast","loadingGenderLast","GetGround","GroundList","loadingGround","GetCheckpointTotal","CheckpointTotalList","NacionalityList","GetNacionalityStart","NacionalityListStart","loadingNacionalityStart","GetNacionalityLast","NacionalityListLast","loadingNacionalityLast","GetData","loadingGroundStart","Starts","Inscriptions","email","message","subject","isClicked","onSubmit","handleSubmit","onNameChange","required","autoComplete","backgroundImage","backgroundRepeat","backgroundAttachment","backgroundSize","backgroundPosition","cursor","htmlFor","onEmailChange","onSubjecthange","onMessageChange","rows","Erro404","Router","path","component","exact","PageSubscribers","PageAthleteDetail","PageGiveUp","PageSubscriversCompetiton","PageCheckpoints","PageTeams","PageWinners","PageFavorites","PageStatsGlobal","PageFeedback","PageStatsComp","isLocalhost","Boolean","hostname","registerValidSW","swUrl","register","onupdatefound","installingWorker","installing","onstatechange","controller","config","onUpdate","onSuccess","self","addEventListener","icon","waitUntil","showNotification","ReactDOM","render","document","getElementById","ReactGA","initialize","debug","titleCase","set","page","pageview","URL","origin","response","get","unregister","checkValidServiceWorker","registerServiceWorker","contentType","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","keys","Object","resolve","module","exports"],"mappings":"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","file":"static/js/main.f603034c.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport {IntlProvider} from \"react-intl\"\nimport Portuguese from \"./../languages/pt.json\"\nimport Spanish from \"./../languages/es.json\"\nimport French from \"./../languages/fr.json\"\nimport English from \"./../languages/en.json\"\n\n\nexport const Context = React.createContext();\nvar local\nlet lang;\n//check if is save any languague\nif(!!localStorage.getItem(\"Languague\")){\n  local=localStorage.getItem(\"Languague\");\n}\nelse{\n  local = navigator.language.substring(3,5).toUpperCase()\n}\nif (local === \"PT\") {\n  lang = Portuguese;\n}\nelse if (local === \"ES\") {\n  lang = Spanish;\n}\nelse if (local === \"FR\") {\n  lang = French;\n}\nelse if (local === \"GB\") {\n    lang = English;\n  }\nelse {\n  local = \"GB\"\n  lang = English;\n}\n\n const Wrapper=(props) => {\n\n  const[locale,setLocale]= useState(local);\n  const [messages,setMessages]= useState(lang);\n\n  function selectLang(language){\n    const newLocale =language ;\n    //remote from local storage the old one\n    localStorage.removeItem(\"Languague\")\n    //add new languague to storage\n    localStorage.setItem(\"Languague\", language)\n    setLocale(newLocale)\n    if (newLocale === \"PT\") {\n      setMessages(Portuguese)\n    }\n    else if (newLocale === \"ES\") {\n      setMessages(Spanish)\n    }\n    else if (newLocale === \"FR\") {\n      setMessages(French)\n    }\n    else if (newLocale === \"GB\") {\n      setMessages(English)\n      }\n    else {\n      setMessages(English)\n    }\n  }\n\n    return(\n      <Context.Provider value={{locale, selectLang}}>\n        <IntlProvider messages={messages} locale={locale}>\n            {props.children}\n        </IntlProvider>\n        </Context.Provider>\n    )\n\n}\n\nexport default Wrapper","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FormattedMessage} from 'react-intl';\n\nconst Trails = props => (\n  \n  <div className=\"container-fluid\" >\n    <div className=\"row\">\n      {props.trails.map(trail => {\n\n        var today = new Date();\n        var dd = String(today.getDate()).padStart(2, '0');\n        var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n        var yyyy = today.getFullYear();\n        \n        var date = yyyy + '-' + mm + '-' + dd;\n\n        var hours   =  today.getHours();\n        var minutes = today.getMinutes();\n        var seconds = today.getSeconds();\n        if (hours   < 10) {hours   = \"0\"+hours;}\n        if (minutes < 10) {minutes = \"0\"+minutes;}\n        if (seconds < 10) {seconds = \"0\"+seconds;}\n        \n        var time = hours+':'+minutes+':'+seconds;\n        var dateTime = date + \"T\" + time;\n        return (\n          <div\n            key={trail.trail_event_id}\n            className=\"col-md-4\"\n            style={{ marginBottom: \"2rem\" }}\n          >\n            {/* link is to redirect usando acento `*/}\n            <Link to={{pathname: `/EventParticipants/${trail.trail_event_id}`}}>\n              <div className=\"trails__box\">\n                <img style={{  width: \"100%\", height: \"100%\"}}\n                  className=\"trails__box-img\"\n                  src={trail.imageHome_url}\n                  alt={trail.name}\n                ></img>\n                <div className=\"trail__text\">\n                  <h5 className=\"trail__title\">{trail.name}</h5>\n                  <p className=\"trail__subtitle\">\n                    {/* if */}\n                    {trail.init_date < dateTime && trail.end_date > dateTime  ? (\n                      /* then */ <span style={{ color: \"#F44336\" }} >\n                        a decorrer\n                      </span>\n                    ) : (\n                      /* else */ <span style={{color:\"#3c8dbc\"}}>\n                        <FormattedMessage id=\"DATE\" />:{trail.init_date.substring(0, 10)} <FormattedMessage id=\"HOUR\" />:\n                        {trail.init_date.substring(11, 16)}\n                      </span>\n                    )}\n                  </p>\n                </div>\n              </div>\n            </Link>\n          </div>\n        );\n      })}\n    </div>\n  </div>\n);\nexport default Trails;\n","import React from \"react\";\nimport AliceCarousel from \"react-alice-carousel\";\nimport \"react-alice-carousel/lib/alice-carousel.css\";\nvar size = window.innerWidth;\nclass Carousel extends React.Component {\n\n  getSize() {\n    var responsive = {};\n\n    if (size > 1000) {\n      return (responsive = {\n        0: { items: 1 },\n        1: { items: 2 }\n      })\n    }\n    else {\n      return (responsive = {\n        0: { items: 1 }\n      })\n\n    }\n  }\n\n  render() {\n\n\n    const handleOnDragStart = e => e.preventDefault();\n    return (\n\n      <AliceCarousel\n        autoPlay={true}\n        responsive={this.getSize()}\n        fadeOutAnimation={true}\n        mouseDragEnabled={true}\n        buttonsDisabled={true}\n        dotsDisabled={true}\n        autoPlayInterval={1000}\n      >\n        <img\n          alt=\"\"\n          className=\"Carousel\"\n          src=\"https://imgur.com/GnU0nRv.jpg\"\n          onDragStart={handleOnDragStart}\n        />\n        <img\n          alt=\"\"\n          className=\"Carousel\"\n          src=\"https://imgur.com/qKYLU8q.jpg\"\n          onDragStart={handleOnDragStart}\n        />\n        <img\n          alt=\"\"\n          className=\"Carousel\"\n          src=\"https://imgur.com/Pq0rmb1.jpg\"\n          onDragStart={handleOnDragStart}\n        />\n        <img\n          alt=\"\"\n          className=\"Carousel\"\n          src=\"https://imgur.com/g4qKYs7.jpg\"\n          onDragStart={handleOnDragStart}\n        />\n        <img\n          alt=\"\"\n          className=\"Carousel\"\n          src=\"https://imgur.com/NvgH63H.jpg\"\n          onDragStart={handleOnDragStart}\n        />\n        <img\n          alt=\"\"\n          className=\"Carousel\"\n          src=\"https://imgur.com/yT0NYSL.jpg\"\n          onDragStart={handleOnDragStart}\n        />\n      </AliceCarousel>\n    );\n  }\n}\nexport default Carousel;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Header extends Component {\n  GoToHomePage() {\n    window.location = '/';\n  }\n  render()\n   {\n    return (\n      <div>\n        <header className=\"main-header\">\n          {/* Logo */}\n          <Link to={{ pathname: `/` }} className=\"logo\">\n            {/* mini logo for sidebar mini 50x50 pixels */}\n            <span className=\"logo-mini\">\n              <b>T</b>S\n            </span>\n            {/* logo for regular state and mobile devices */}\n            <span style={{fontSize:\"22px\"}} className=\"logo-lg\">\n              <a href=\"#\" onClick={() => this.GoToHomePage()}> <img src=\"/logo_ts_w_32.png\"></img> <strong>Timing</strong> System</a>\n            </span>\n          </Link>\n          {/* Header Navbar: style can be found in header.less */}\n          <nav className=\"navbar navbar-static-top\">\n            {/* Sidebar toggle button*/}\n\n            {/* Navbar Right Menu */}\n            <div className=\"navbar-custom-menu\">\n              <ul className=\"nav navbar-nav\">\n                <li className=\"dropdown user user-menu\">\n                    <span className=\"hidden-xs\"></span>\n                </li>\n              </ul>\n            </div>\n          </nav>\n        </header>\n      </div>\n    );\n  }\n}\n","\nimport React, { Component, useContext } from \"react\";\nimport { Context } from \"../../languages/Wrapper\"\nimport ReactFlagsSelect from 'react-flags-select';\nimport \"../../languages/flags/react-flags-select.css\";\n\n\nconst LanguageSelector = (props) => {\n\n\n  const context = useContext(Context)\n  return (\n    <div>\n      <ReactFlagsSelect  defaultCountry={context.locale}  onSelect={(countryCode) => context.selectLang(countryCode)}\n        countries={[\"PT\", \"GB\", \"FR\", \"ES\"]}\n        showSelectedLabel={false}\n        showOptionLabel={false}\n      />\n\n    </div>\n\n\n  );\n}\nexport default LanguageSelector\n","import React from \"react\";\nimport LanguagueSelector from \"./LanguageSelector\"\n\nconst FooterPage = () => {\n  return (\n<footer className=\"App-footer \">\n<span className=\"pull-right\"><LanguagueSelector /></span>\n\n\n</footer>\n);\n  }\n\nexport default FooterPage;","import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\nimport Loader from 'react-loader-spinner'\nimport React from \"react\";\n\nvar style = [\"BallTriangle\", \"ThreeDots\", \"Bars\", \"Circles\", \"Grid\", \"Puff\", \"TailSpin\", \"Triangle\", \"RevolvingDot\", \"Watch\", \"MutatingDots\"];\nvar position = Math.floor(Math.random() * style.length)\n\n\n\nexport default class App extends React.Component {\n   \n   componentDidUpdate(prevProps) {\n      position = Math.floor(Math.random() * style.length)\n   }\n\n   render() {\n      return (\n         <Loader\n            type={style[position]}\n            color=\"#3c8dbc\"\n            height={100}\n            width={100}\n         />\n      );\n   }\n}","import React, { Component } from \"react\";\nimport \"../../AppHome.css\";\nimport \"../../App.css\";\nimport \"../../AdminLTE.css\";\nimport ListTrails from \"./trails\";\nimport Carousel from \"../structure/carousel\";\nimport NavBar from \"../structure/HeaderHome\";\nimport FooterPage from \"../structure/footerHome\";\nimport { Button } from \"reactstrap\";\nimport Loader from \"../Loader/Loader\";\nimport { FormattedMessage } from 'react-intl';\nimport ReactGA from 'react-ga';\n\n\nconst API_KEY = `${process.env.REACT_APP_API_TRAIL_KEY}`\nconst API_URL = `${process.env.REACT_APP_API_TRAIL_URL}`\nconst TOKEN = API_KEY;\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      trails: [],\n      showMore: false,\n      loading: false,\n    };\n    this.getTrailEvents();\n  }\n\n\n  /*show recent trails events */\n  getTrailEvents = async () => {\n    const API_CALL = await fetch(\n      `${API_URL}/trail/EventRecents/`,\n      {\n        headers: new Headers({\n          Authorization: TOKEN\n        })\n      }\n    );\n    const data = await API_CALL.json();\n    try {\n      localStorage.setItem(`trailsListRecent`, JSON.stringify(data))\n    }\n    catch {\n      localStorage.clear();\n    }\n    this.setState({ trails: data, showMore: false, loading: true });\n  };\n\n  /*show all trails events */\n  getALLTrailEvents = async () => {\n    const API_CALL = await fetch(\n      `${API_URL}/trail/Event/`,\n      {\n        headers: new Headers({\n          Authorization: TOKEN\n        })\n      }\n    );\n    const data = await API_CALL.json();\n    try {\n      localStorage.setItem(`trailsList`, JSON.stringify(data))\n    }\n    catch {\n      localStorage.clear();\n    }\n    this.setState({ trails: data, showMore: true, loading: true });\n    window.scrollTo(0, 300)\n\n  };\n  componentWillMount() {\n    //CACHES\n    try {\n      if (localStorage.getItem(`trailsListRecent`)) {\n        const trailsData = JSON.parse(localStorage.getItem(`trailsListRecent`))\n        this.setState({ trails: trailsData, loading: true })\n      }\n    }\n    catch {\n\n    }\n    //END CACHE\n    this.getTrailEvents()\n\n  }\n\n\n  /*used to check if user click button, hide and show more trails */\n  checkShow = () => {\n    if (this.state.showMore) {\n      try {\n        if (localStorage.getItem(`trailsListRecent`)) {\n          const trailsData = JSON.parse(localStorage.getItem(`trailsListRecent`))\n          this.setState({ trails: trailsData, loading: true })\n        }\n      }\n      catch {\n  \n      }\n      this.getTrailEvents();\n    } else {\n      try {\n        if (localStorage.getItem(`trailsList`)) {\n          const trailsData = JSON.parse(localStorage.getItem(`trailsList`))\n          this.setState({ trails: trailsData, loading: true })\n          console.log(trailsData)\n        }\n      }\n      catch {\n  \n      }\n      this.getALLTrailEvents();\n    }\n  }\n\n  /*Loading message for the checkpoints*/\n  LoadingAthletes() {\n    if (this.state.loading === true) {\n      return (\n\n        <ListTrails trails={this.state.trails} />\n\n      )\n    }\n    else {\n      return (\n        <Loader />\n      )\n    }\n  }\n\n  render() {\n\n    return (\n      <div style={{ backgroundColor: \"White\" }} className=\"App\">\n        <NavBar />\n        <Carousel />\n        {/* Listar os trails e imagens*/}\n        {this.LoadingAthletes()}\n        {/* Listar todos os trails */}\n        <Button\n          onClick={this.checkShow}\n          style={{ background: \"#3c8dbc\", color: \"white\" }}\n        >\n          {this.state.showMore === false ? <FormattedMessage id=\"BUTTONHOMEMORE\" /> : <FormattedMessage id=\"BUTTONHOMELESS\" />}\n        </Button>{\" \"}\n\n        <FooterPage />\n\n      </div>\n    );\n  }\n}\n\nexport default App;","import React, { Component } from \"react\";\nimport HomePage from \"./components/Pages/Home\";\nimport { IntlProvider} from 'react-intl';\nimport ReactGA from 'react-ga';\nimport \"./AdminLTE.css\";\n\n\nexport default class App extends Component {\n  render() {\n    return (\n        <div>\n          <HomePage />\n        </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport LanguagueSelector from \"./LanguageSelector\"\n\nconst API_KEY = `${process.env.REACT_APP_API_TRAIL_KEY}`;\nconst API_URL = `${process.env.REACT_APP_API_TRAIL_URL}`;\nconst TOKEN = API_KEY;\nvar size = window.innerWidth;\n\nexport default class Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      EventInfo: [],\n      loading: false,\n    };\n    this.getEventInfo();\n  }\n  CheckSize() {\n    if (size < 800) {\n      return (\n        <a style={{fontSize:\"22px\"}}\n          href=\"##\"\n          className=\"sidebar-toggle\"\n          data-toggle=\"push-menu\"\n          role=\"button\"\n        >\n          <span  className=\"sr-only\">Toggle navigation</span>\n        </a>\n\n      )\n    }\n  }\n  getEventInfo = async e => {\n\n    const API_CALL = await fetch(\n      `${API_URL}/trail/Event/${this.props.eventID}/`,\n      {\n        headers: new Headers({\n          Authorization: TOKEN\n        })\n      }\n    );\n    const data = await API_CALL.json();\n    this.setState({ EventInfo: data, loading: true });\n\n  };\n\n  componentWillMount() {\n    if(localStorage.getItem(`State${this.props.eventID}`)){\n      if(JSON.parse(localStorage.getItem(`EventID${this.props.eventID}`))===this.props.eventID){\n        const rehydrate = JSON.parse(localStorage.getItem(`State${this.props.eventID}`))\n        this.setState(rehydrate)\n      }\n      else{\n        this.getEventInfo();\n        this.CheckSize();\n\n      }\n    }\n    else{\n      this.getEventInfo();\n      this.CheckSize();\n    }\n\n  }\n  componentWillUnmount() {\n    localStorage.setItem(`State${this.props.eventID}`, JSON.stringify(this.state))\n    localStorage.setItem(`EventID${this.props.eventID}`,JSON.stringify(this.props.eventID))\n  }\n\n  GoToHomePage() {\n    window.location = '/';\n  }\n  render() {\n    return (\n      <div>\n        <header className=\"main-header\">\n          {/* Logo */}\n          <div className=\"logo\">\n\n            {/* mini logo for sidebar mini 50x50 pixels */}\n            <span className=\"logo-mini\">\n              <a href=\"#\" onClick={() => this.GoToHomePage()}><img src=\"/logo_ts_w_32.png\"/></a>\n            </span>\n            {/* logo for regular state and mobile devices */}\n            <span style={{fontSize:\"22px\"}} className=\"logo-lg\">\n              <a href=\"#\" onClick={() => this.GoToHomePage()}> <img src=\"/logo_ts_w_32.png\"></img> <strong>Timing</strong> System</a>\n            </span>\n          </div>\n          {/* Header Navbar: style can be found in header.less */}\n          <nav className=\"navbar navbar-static-top\">\n            {/* Sidebar toggle button*/}\n            {this.CheckSize()}\n            {/* Navbar Right Menu */}\n            <div className=\"navbar-custom-menu\">\n              <ul className=\"nav navbar-nav\">\n\n              {/* imagem aqui maximo 100 width */}\n                <li className=\"dropdown user user-menu\">\n                \n\n                  <div style={{ float: \"left\" }} className=\"logoText\" >\n                    \n                  <img src={this.state.EventInfo.eventLogo_url} class=\"margin\" style={{height: size >800 ? \"60px\" : \"40px\", width: \"auto\" }}></img> \n\n                    <strong>{this.state.EventInfo.name}</strong> \n                  </div>\n                  \n                </li>\n              </ul>\n            </div>\n          </nav>\n        </header>\n      </div >\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport LanguagueSelector from \"./LanguageSelector\"\nconst API_KEY = `${process.env.REACT_APP_API_TRAIL_KEY}`;\nconst API_URL = `${process.env.REACT_APP_API_TRAIL_URL}`;\nconst TOKEN = API_KEY;\nexport default class Footer extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      EventInfo: [],\n      loading: false,\n    };\n    this.getEventInfo();\n  }\n\n  getEventInfo = async e => {\n\n    const API_CALL = await fetch(\n      `${API_URL}/trail/Event/${this.props.eventID}/`,\n      {\n        headers: new Headers({\n          Authorization: TOKEN\n        })\n      }\n    );\n    const data = await API_CALL.json();\n    this.setState({ EventInfo: data, loading: true });\n\n  };\n  componentWillMount() {\n    if(localStorage.getItem(`State${this.props.eventID}`)){\n      if(JSON.parse(localStorage.getItem(`EventID${this.props.eventID}`))===this.props.eventID){\n        const rehydrate = JSON.parse(localStorage.getItem(`State${this.props.eventID}`))\n        this.setState(rehydrate)\n      }\n      else{\n        this.getEventInfo();\n\n      }\n    }\n    else{\n      this.getEventInfo();\n    }\n\n  }\n  componentWillUnmount() {\n    localStorage.setItem(`State${this.props.eventID}`, JSON.stringify(this.state))\n    localStorage.setItem(`EventID${this.props.eventID}`,JSON.stringify(this.props.eventID))\n  }\n\n  \n\n  render() {\n\n    return (\n      <div >\n\n        <footer className=\"main-footer \">\n          <span className=\"pull-right\"><LanguagueSelector /></span>\n          <div style={{ maxWidth: \"800px\" }}>\n            <img src={this.state.EventInfo.SponserLogo_url} style={{ maxWidth: \"100%\", height: \"auto\", width: \"auto\" }} class=\"imgFooter\" />\n          </div>\n        </footer>\n\n      </div>\n    );\n  }\n}\n\n","import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { FormattedMessage } from 'react-intl';\n\n\nconst API_KEY = `${process.env.REACT_APP_API_TRAIL_KEY}`;\nconst API_URL = `${process.env.REACT_APP_API_TRAIL_URL}`;\nconst TOKEN = API_KEY;\nvar size = window.innerWidth;\nvar menuSizeTop = 16;\nvar menuSizeItem = 14;\n\nconst style = { fontWeight: \"bold\", color: \"#3c8dbc\" };\nexport default class Menu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      CompetitionList: [],\n      EventInfo: [],\n      loading: false,\n    };\n    this.OnInit();\n    this.CheckSize();\n\n\n  }\n\n  componentWillMount() {\n    if (JSON.parse(localStorage.getItem(`EventID${this.props.eventID}`)) === this.props.eventID) {\n      if (localStorage.getItem(`State${this.props.eventID}`)) {\n        const rehydrate = JSON.parse(localStorage.getItem(`State${this.props.eventID}`))\n        this.setState(rehydrate)\n        const compList=JSON.parse(localStorage.getItem(`competitionList${this.props.eventID}`))\n        this.setState({CompetitionList : compList})\n      }}\n\n    this.getEventInfo();\n    this.getCompetitionList();\n\n  }\n\n  //for menu open and close\n  OnInit() {\n    if (window.localStorage) {\n      if (!localStorage.getItem('firstLoad')) {\n        localStorage['firstLoad'] = true;\n        window.location.reload();\n      }\n      else\n        localStorage.removeItem('firstLoad');\n    }\n  }\n\n  componentWillUnmount() {\n    localStorage.setItem(`State${this.props.eventID}`, JSON.stringify(this.state))\n    localStorage.setItem(`competitionList${this.props.eventID}`, JSON.stringify(this.state.CompetitionList))\n    localStorage.setItem(`EventID${this.props.eventID}`, JSON.stringify(this.props.eventID))\n  }\n\n  CheckSize() {\n    if (size < 800) {\n      menuSizeItem = 21;\n      menuSizeTop = 23;\n    }\n  }\n\n  getCompetitionList = async () => {\n\n    const API_CALL = await fetch(\n      `${API_URL}/trail/Competitions/${this.props.eventID}/`,\n      {\n        headers: new Headers({\n          Authorization: TOKEN\n        })\n      }\n    );\n    const data = await API_CALL.json();\n    this.setState({ CompetitionList: data });\n\n  };\n\n  getEventInfo = async () => {\n\n    const API_CALL = await fetch(\n      `${API_URL}/trail/Event/${this.props.eventID}/`,\n      {\n        headers: new Headers({\n          Authorization: TOKEN\n        })\n      }\n    );\n    const data = await API_CALL.json();\n    this.setState({ EventInfo: data, loading: true });\n  };\n\n  getFeedBackPage() {\n    if (this.state.EventInfo.feedback === 1) {\n      return (<li>\n        <NavLink activeStyle={style} style={{ fontSize: `${menuSizeItem}px` }} to={{ pathname: `/feedback/${this.props.eventID}` }}>\n          <i style={{ fontSize: `${menuSizeItem}px` }} className=\"fa fa-circle-o\" /> <FormattedMessage id=\"FEEDBACK\" />\n        </NavLink>\n\n      </li>)\n    }\n  }\n\n  render() {\n\n    let menuStatic;\n    if (this.state.loading === true) {\n      if (this.props.competitionID === 0) {\n        menuStatic = (\n          <li className=\"treeview active\">\n            <a href=\"##\">\n              <i style={{ fontSize: `${menuSizeTop}px` }} className=\"fa  fa-road\" />\n              <span style={{ fontSize: `${menuSizeTop}px` }}>{(this.state.loading === true) ? \" \" + this.state.EventInfo.short_name : <FormattedMessage id=\"LOADING\" />}</span>\n              <span className=\"pull-right-container\">\n                <i className=\"fa fa-angle-left pull-right\" />\n              </span>\n            </a>\n            <ul className=\"treeview-menu active\">\n              <li>\n                <NavLink activeStyle={style} style={{ fontSize: `${menuSizeItem}px` }} to={{ pathname: `/EventParticipants/${this.props.eventID}` }}>\n                  <i style={{ fontSize: `${menuSizeItem}px` }} className=\"fa fa-circle-o\" /> <FormattedMessage id=\"INSCRIPTIONS\" />\n                </NavLink>\n              </li>\n              <li>\n                <NavLink activeStyle={style} style={{ fontSize: `${menuSizeItem}px` }} to={{ pathname: `/Favorites/${this.props.eventID}` }}>\n                  <i style={{ fontSize: `${menuSizeItem}px` }} className=\"fa fa-circle-o\" /> <FormattedMessage id=\"FAVORITES\" />\n                </NavLink>\n              </li>\n              \n              <li>\n               <NavLink activeStyle={style} style={{ fontSize: `${menuSizeItem}px` }} to={{ pathname: `/Stats/${this.props.eventID}` }}>\n                  <i style={{ fontSize: `${menuSizeItem}px` }} className=\"fa fa-circle-o\" /> <FormattedMessage id=\"STATS\" />\n                </NavLink>\n\n              </li>\n        {this.getFeedBackPage()}\n            </ul>\n          </li>\n        );\n      }\n      else {\n        menuStatic = (\n          <li className=\"treeview\">\n            <a href=\"##\">\n              <i style={{ fontSize: `${menuSizeTop}px` }} className=\"fa  fa-road\" />\n              <span style={{ fontSize: `${menuSizeTop}px` }}>{(this.state.loading === true) ? \" \" + this.state.EventInfo.short_name : <FormattedMessage id=\"LOADING\" />}</span>\n              <span className=\"pull-right-container\">\n                <i className=\"fa fa-angle-left pull-right\" />\n              </span>\n            </a>\n            <ul className=\"treeview-menu active\">\n              <li>\n                <NavLink activeStyle={style} activeStyle={{\n                  fontWeight: \"bold\",\n                  color: \"red\"\n                }} style={{ fontSize: `${menuSizeItem}px` }} to={{ pathname: `/EventParticipants/${this.props.eventID}` }}>\n                  <i style={{ fontSize: `${menuSizeItem}px` }} className=\"fa fa-circle-o\" /> <FormattedMessage id=\"INSCRIPTIONS\" />\n                </NavLink>\n              </li>\n              <li>\n                <NavLink activeStyle={style} style={{ fontSize: `${menuSizeItem}px` }} to={{ pathname: `/Favorites/${this.props.eventID}` }}>\n                  <i style={{ fontSize: `${menuSizeItem}px` }} className=\"fa fa-circle-o\" /> <FormattedMessage id=\"FAVORITES\" />\n                </NavLink>\n              </li>\n              \n              <li>\n                <NavLink activeStyle={style} style={{ fontSize: `${menuSizeItem}px` }} to={{ pathname: `/Stats/${this.props.eventID}` }}>\n                  <i style={{ fontSize: `${menuSizeItem}px` }} className=\"fa fa-circle-o\" /> <FormattedMessage id=\"STATS\" />\n                </NavLink>\n              </li>\n\n            </ul>\n          </li>\n        );\n      }\n\n\n\n    } else {\n      menuStatic = (\n        <li className=\"active treeview menu-open\">\n          <a href=\"##\">\n            <i className=\"fa fa-dashboard\" />\n            <span><FormattedMessage id=\"LOADING\" /> <i class=\"fa fa-refresh fa-spin\"></i></span>\n            <span className=\"pull-right-container\">\n              <i className=\"fa fa-angle-left pull-right\" />\n            </span>\n          </a>\n        </li>\n      );\n    }\n\n    return (\n\n      <div>\n        <aside className=\"main-sidebar\">\n          {/* sidebar: style can be found in sidebar.less */}\n          <section className=\"sidebar\">\n            {/* sidebar menu: : style can be found in sidebar.less */}\n            <ul class=\"sidebar-menu tree\" data-widget=\"tree\">\n              {/*MENU Event*/}\n              {menuStatic}\n              {/*MENU Dynamic*/}\n              {this.state.CompetitionList.map(Competition => {\n                if (parseInt(this.props.competitionID) === parseInt(Competition.competition_id)) {\n                  return (\n                    <li key={Competition.competition_id} className=\"treeview active\">\n                      <a href=\"##\">\n                        <i style={{ fontSize: `${menuSizeTop}px` }} className=\"fa fa-dashboard\" />\n                        <span style={{ fontSize: `${menuSizeTop}px` }}>{\" \" + Competition.name}</span>\n                        <span style={{ fontSize: `${menuSizeTop}px` }} className=\"pull-right-container\">\n                          <i className=\"fa fa-angle-left pull-right\" />\n                        </span>\n                      </a>\n                      <ul className=\"treeview-menu\">\n                        <li>\n                          <NavLink activeStyle={style} style={{ fontSize: `${menuSizeItem}px` }} to={{ pathname: `/ParticipantsCompetiton/${this.props.eventID}/${Competition.competition_id}/${Competition.long_name}` }}>\n                            <i style={{ fontSize: `${menuSizeItem}px` }} className=\"fa fa-circle-o\" /> <FormattedMessage id=\"INSCRIPTIONS\" />\n                          </NavLink>\n                        </li>\n                        <li>\n                          <NavLink activeStyle={style} style={{ fontSize: `${menuSizeItem}px` }} to={{ pathname: `/Checkpoints/${this.props.eventID}/${Competition.competition_id}/${Competition.long_name}` }}>\n                            <i style={{ fontSize: `${menuSizeItem}px` }} className=\"fa fa-circle-o\" /> <FormattedMessage id=\"CROSSING\" />\n                          </NavLink>\n                        </li>\n                        <li>\n                          <NavLink activeStyle={style} style={{ fontSize: `${menuSizeItem}px` }} to={{ pathname: `/Winners/${this.props.eventID}/${Competition.competition_id}/${Competition.long_name}` }}>\n                            <i style={{ fontSize: `${menuSizeItem}px` }} className=\"fa fa-circle-o\" /> <FormattedMessage id=\"WINNERS\" />\n                          </NavLink>\n                        </li>\n                        <li>\n                          <NavLink activeStyle={style} style={{ fontSize: `${menuSizeItem}px` }} to={{ pathname: `/Teams/${this.props.eventID}/${Competition.competition_id}/${Competition.long_name}` }}>\n                            <i style={{ fontSize: `${menuSizeItem}px` }} className=\"fa fa-circle-o\" /> <FormattedMessage id=\"TEAMS\" />\n                          </NavLink>\n                        </li>\n                        <li>\n                          <NavLink activeStyle={style} style={{ fontSize: `${menuSizeItem}px` }} to={{ pathname: `/EventGiveUp/${this.props.eventID}/${Competition.competition_id}/${Competition.long_name}` }}>\n                            <i style={{ fontSize: `${menuSizeItem}px` }} className=\"fa fa-circle-o\" /> <FormattedMessage id=\"DIDNOTFINISH\" />\n                          </NavLink>\n\n                        </li>\n                        \n                        <li>\n                          <NavLink activeStyle={style} style={{ fontSize: `${menuSizeItem}px` }} to={{ pathname: `/StatsComp/${this.props.eventID}/${Competition.competition_id}/${Competition.long_name}` }}>\n                            <i style={{ fontSize: `${menuSizeItem}px` }} className=\"fa fa-circle-o\" /> <FormattedMessage id=\"STATS\" />\n                          </NavLink>\n                        </li>\n\n                      </ul>\n                    </li>\n                  );\n                }\n                else {\n                  return (\n                    <li key={Competition.competition_id} className=\"treeview\">\n                      <a href=\"##\">\n                        <i style={{ fontSize: `${menuSizeTop}px` }} className=\"fa fa-dashboard\" />\n                        <span style={{ fontSize: `${menuSizeTop}px` }}>{\"  \" + Competition.name}</span>\n                        <span className=\"pull-right-container\">\n                          <i style={{ fontSize: `${menuSizeTop}px` }} className=\"fa fa-angle-left pull-right\" />\n                        </span>\n                      </a>\n                      <ul className=\"treeview-menu\">\n                        <li>\n                          <NavLink activeStyle={style} style={{ fontSize: `${menuSizeItem}px` }} to={{ pathname: `/ParticipantsCompetiton/${this.props.eventID}/${Competition.competition_id}/${Competition.long_name}` }}>\n                            <i style={{ fontSize: `${menuSizeItem}px` }} className=\"fa fa-circle-o\" /> <FormattedMessage id=\"INSCRIPTIONS\" />\n                          </NavLink>\n                        </li>\n                        <li>\n                          <NavLink activeStyle={style} style={{ fontSize: `${menuSizeItem}px` }} style={{ fontSize: `${menuSizeItem}px` }} to={{ pathname: `/Checkpoints/${this.props.eventID}/${Competition.competition_id}/${Competition.long_name}` }}>\n                            <i style={{ fontSize: `${menuSizeItem}px` }} className=\"fa fa-circle-o\" /> <FormattedMessage id=\"CROSSING\" />\n                          </NavLink>\n                        </li>\n                        <li>\n                          <NavLink activeStyle={style} style={{ fontSize: `${menuSizeItem}px` }} to={{ pathname: `/Winners/${this.props.eventID}/${Competition.competition_id}/${Competition.long_name}` }}>\n                            <i style={{ fontSize: `${menuSizeItem}px` }} className=\"fa fa-circle-o\" /> <FormattedMessage id=\"WINNERS\" />\n                          </NavLink>\n                        </li>\n                        <li>\n                          <NavLink activeStyle={style} style={{ fontSize: `${menuSizeItem}px` }} to={{ pathname: `/Teams/${this.props.eventID}/${Competition.competition_id}/${Competition.long_name}` }}>\n                            <i style={{ fontSize: `${menuSizeItem}px` }} className=\"fa fa-circle-o\" /> <FormattedMessage id=\"TEAMS\" />\n                          </NavLink>\n                        </li>\n                        <li>\n                          <NavLink activeStyle={style} style={{ fontSize: `${menuSizeItem}px` }} to={{ pathname: `/EventGiveUp/${this.props.eventID}/${Competition.competition_id}/${Competition.long_name}` }}>\n                            <i className=\"fa fa-circle-o\" /> <FormattedMessage id=\"DIDNOTFINISH\" />\n                          </NavLink>\n\n                        </li>\n                        \n                        <li>\n                          <NavLink activeStyle={style} style={{ fontSize: `${menuSizeItem}px` }} to={{ pathname: `/StatsComp/${this.props.eventID}/${Competition.competition_id}/${Competition.long_name}` }}>\n                            <i style={{ fontSize: `${menuSizeItem}px` }} className=\"fa fa-circle-o\" /> <FormattedMessage id=\"STATS\" />\n                          </NavLink>\n                        </li>\n                      </ul>\n                    </li>\n                  );\n                }\n\n              })}\n            </ul>\n          </section>\n\n          {/* /.sidebar */}\n        </aside>\n      </div>\n    );\n  }\n}","const convertedVapidKey = urlBase64ToUint8Array(process.env.REACT_APP_PUBLIC_VAPID_KEY)\n\nfunction urlBase64ToUint8Array(base64String) {\n  const padding = \"=\".repeat((4 - base64String.length % 4) % 4)\n  // eslint-disable-next-line\n  const base64 = (base64String + padding).replace(/\\-/g, \"+\").replace(/_/g, \"/\")\n\n  const rawData = window.atob(base64)\n  const outputArray = new Uint8Array(rawData.length)\n\n  for (let i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i)\n  }\n  return outputArray\n}\n\n\n\nfunction sendSubscription(subscription, userID, status) {\n  const body = {\n    'sub': subscription,\n    'userID': userID\n  }\n  if (status === \"Send\") {\n    return fetch(`${process.env.REACT_APP_API_URL}/notifications/subscribe/`, {\n      method: 'POST',\n      body: JSON.stringify(body),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n  }\n  else {\n    return fetch(`${process.env.REACT_APP_API_URL}/notifications/remove/`, {\n      method: 'POST',\n      body: JSON.stringify(body),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n  }\n}\n\nexport function subscribeUser(userID, status) {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(function (registration) {\n      if (!registration.pushManager) {\n        console.log('Push manager unavailable.')\n        return\n      }\n\n      registration.pushManager.getSubscription().then(function (existedSubscription) {\n        if (existedSubscription === null) {\n          console.log('No subscription detected, make a request.')\n          registration.pushManager.subscribe({\n            applicationServerKey: convertedVapidKey,\n            userVisibleOnly: true,\n          }).then(function (newSubscription) {\n            console.log('New subscription added.')\n            sendSubscription(newSubscription, userID, status)\n\n          }).catch(function (e) {\n            if (Notification.permission !== 'granted') {\n              console.log('Permission was not granted.')\n            } else {\n              console.error('An error ocurred during the subscription process.', e)\n            }\n          })\n        } else {\n          console.log('Existed subscription detected.')\n          sendSubscription(existedSubscription, userID, status)\n        }\n      })\n    })\n      .catch(function (e) {\n        console.error('An error ocurred during Service Worker registration.', e)\n      })\n  }\n}","import React, { Component } from 'react'\nimport { subscribeUser } from '../../components/Notifications/subscription';\nimport { FormattedMessage} from 'react-intl';\n\nexport default class favoritesChecker extends Component {\n\n    //to save the favorites to local storage\n    addFavorites() {\n        localStorage.setItem(parseInt(this.props.ListaFavoritos), JSON.stringify(parseInt(this.props.ListaFavoritos)))\n        subscribeUser(this.props.ListaFavoritos, \"Send\");\n        if(navigator.userAgent.toLowerCase().indexOf('firefox') > -1){\n            window.location.reload();\n        }\n    }\n\n    //to remove the favorites to local storage\n    removeFavorites() {\n\n        localStorage.removeItem(this.props.ListaFavoritos)\n        subscribeUser(this.props.ListaFavoritos, \"Remove\");\n        if(navigator.userAgent.toLowerCase().indexOf('firefox') > -1){\n            window.location.reload();\n\n        }\n    }\n\n    //Just for the favorites tables because of reload the window\n    removeFavoritesTable() {\n        localStorage.removeItem(this.props.ListaFavoritos)\n        subscribeUser(this.props.ListaFavoritos, \"Remove\");\n\n    }\n\n    //to check if is favorite (this is for the tables)\n    checkFavorites() {\n        if (parseInt(this.props.ListaFavoritos) === parseInt(localStorage.getItem(this.props.ListaFavoritos))) {\n            if (this.props.tableFav === true) {\n\n                return (\n                    <a href=\"##\" style={{ color: \"#3c8dbc\" }} onClick={() => this.removeFavoritesTable()}>\n                        <i className=\"fa fa-fw fa-heart\"></i>\n                    </a>\n                )\n            }\n            else {\n                return (\n                    <a href=\"##\" style={{ color: \"#3c8dbc\" }} onClick={() => this.removeFavorites()}>\n                        <i className=\"fa fa-fw fa-heart\"></i>\n                    </a>\n                )\n            }\n\n        }\n        else {\n            return (\n                <a href=\"##\" style={{ color: \"#3c8dbc\" }} onClick={() => this.addFavorites()}>\n                    <i className=\"fa fa-fw fa-heart-o\"></i>\n                </a>\n            )\n        }\n    }\n\n    //to check if is favorite (this is for the athletedetail)\n    checkFavoritesResume() {\n        if (parseInt(this.props.ListaFavoritos) === parseInt(localStorage.getItem(this.props.ListaFavoritos))) {\n            return (\n                <a href=\"##\" className=\"btn btn-danger btn-block\" onClick={() => this.removeFavoritesTable()}><b><FormattedMessage id=\"REMOVEFAV\" /></b></a>\n            )\n        }\n        else {\n            return (\n                <a href=\"##\" className=\"btn btn-info btn-block\" onClick={() => this.addFavorites()}><b><FormattedMessage id=\"ADDFAV\"/></b></a>\n            )\n        }\n    }\n    //check is the call comes from the detail or from a table\n    checkIfTableorResume() {\n        if (this.props.AthleteDetail === true) {\n            return (\n                this.checkFavoritesResume()\n            )\n        }\n        else {\n            return (\n                this.checkFavorites()\n            )\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {this.checkIfTableorResume()}\n            </div>\n        )\n    }\n}\n","export function calculatePagination(size, minimalSize) {\n    var sizeArray = []\n    if(minimalSize<=size){\n        sizeArray.push(minimalSize)\n    }\n    if (size > 50) {\n        sizeArray.push(50)\n    }\n    if (size > 100) {\n        sizeArray.push(100)\n    }\n    if (size > 200) {\n        sizeArray.push(200)\n    }\n    if (size > 500) {\n        sizeArray.push(500)\n    }\n    if (minimalSize != size) {\n        sizeArray.push(size)\n    }\n    return (sizeArray)\n}\n\nexport function minimalSize(size, minimalSize) {\n    var sizeArray\n    if(size<minimalSize){\n        sizeArray=size\n    }\n    else{\n        sizeArray=minimalSize\n    }\n    if(sizeArray===0)\n    {\n        sizeArray=2\n    }\n\n    return (sizeArray)\n}\n\n","import React, { Component } from \"react\";\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\nimport { Link } from \"react-router-dom\";\nimport Favorites from \"../favorites/favoritesChecker\"\nimport { FormattedMessage } from 'react-intl';\nimport { calculatePagination } from \"../Scripts/PaginationHelper\"\nimport { minimalSize } from \"../Scripts/PaginationHelper\"\n\nvar size = window.innerWidth;\n\nexport default class TableSubscribers extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: this.props.loading\n    };\n    //for the columns sizes (desktop and mobile)\n  }\n\n  //to hide columns\n  CheckSize() {\n\n    if (size > 800) {\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n\n  render() {\n    //Info for the filters\n    //get the category\n    let category = this.props.athleteList.map(athelete => {\n      return athelete.category;\n    });\n    //remove duplicates\n    const Tableuniquecategory = [...new Set(category.sort())];\n    //get the nacionality\n    let nacionality = this.props.athleteList.map(athelete => {\n      return athelete.athlete.nacionality;\n    });\n    //remove duplicates\n    const Tableuniquenacionality = [...new Set(nacionality.sort())];\n    //get the competitons\n    let competition = this.props.athleteList.map(athelete => {\n      return athelete.competition.name;\n    });\n    //remove duplicates\n    const Tableuniquecompetition = [...new Set(competition.sort())];\n    //get the Club\n    let club = this.props.athleteList.map(athelete => {\n      return athelete.club;\n    });\n    //remove duplicates\n    const Tableuniqueclub = [...new Set(club.sort())];\n    //get the inscription_status_code\n    let inscription_status_code = this.props.athleteList.map(athelete => {\n      return athelete.inscription_status_code;\n    });\n    //remove duplicates\n    const Tableuniqueinscription_status_code = [\n      ...new Set(inscription_status_code.sort())\n    ];\n        //Gender\n\n        let sexo = this.props.athleteList.map(athelete => {\n          return athelete.athlete.gender;\n        });\n        //remove duplicates\n        const Tableuniquesexo = [...new Set(sexo.sort())];\n\n\n    //Table\n    const columns = [\n      {\n        Header: \"Id\",\n        accessor: \"athlete.athlete_id\",\n        sortable: false,\n        style: {\n          textAlign: \"Center\"\n        },\n        width: 0,\n        maxWidth: 100,\n        show: false\n      },\n      {\n\n        Header: (size > 800) ? <FormattedMessage id=\"DORSAL\" /> : \"PTL\",\n        id: \"dorsal_number\",\n        accessor: d => Number(d.dorsal_number),\n        maxWidth: (size > 800) ? 100 : 60,\n        style: {\n          textAlign: \"Center\"\n        },\n        Filter: ({ filter, onChange }) => (\n          <FormattedMessage id=\"SEARCH\" >\n          {txt => <input\n            onChange={event => onChange(event.target.value)}\n            value={filter ? filter.value : \"\"}\n            placeholder={txt}\n            style={{\n              width: \"100%\",\n              textAlign: \"Center\"\n            }}\n          />}\n        </FormattedMessage>\n        ),\n        Cell: row => (\n\n          <Link\n          to={{ pathname: `/AthleteDetail/${this.props.eventID}/${row.original.competition.competition_id}/${row.original.athlete.athlete_id}` }}\n          >\n            <span style={{ color: \"#3c8dbc\" }}>{row.value} </span>\n          </Link>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"NAME\" />,\n        id:\"NAME\",\n        accessor: row => `${row.athlete.ranking} ${row.athlete.rankingLast}`,\n        maxWidth: (size > 800) ? 380 : 140,\n        style: {\n          textAlign: \"center\"\n        },\n        filterMethod: (filter, row) =>\n        String(row._original.athlete.ranking.toLowerCase()).startsWith(filter.value) ||\n        String(row._original.athlete.rankingLast.toLowerCase()).startsWith(filter.value) ||\n        String(row._original.athlete.ranking.toUpperCase()).startsWith(filter.value) ||\n        String(row._original.athlete.rankingLast.toUpperCase()).startsWith(filter.value) ||\n        String(row._original.athlete.ranking).startsWith(filter.value) ||\n        String(row._original.athlete.rankingLast).startsWith(filter.value) ||\n        String(row._original.athlete.ranking+\" \"+row._original.athlete.rankingLast).startsWith(filter.value) ||\n        String(row._original.athlete.ranking.toUpperCase()+\" \"+row._original.athlete.rankingLast.toUpperCase()).startsWith(filter.value)||\n        String(row._original.athlete.ranking.toLowerCase()+\" \"+row._original.athlete.rankingLast.toLowerCase()).startsWith(filter.value),  \n        Filter: ({ filter, onChange }) => (\n          <FormattedMessage id=\"SEARCH\" >\n            {txt => <input\n              onChange={event => onChange(event.target.value)}\n              value={filter ? filter.value : \"\"}\n              placeholder={txt}\n              style={{\n                width: \"100%\",\n                textAlign: \"Center\"\n              }}\n            />}\n          </FormattedMessage>\n\n        ),\n        Cell: row => (\n\n          <Link\n            to={{ pathname: `/AthleteDetail/${this.props.eventID}/${row.original.competition.competition_id}/${row.original.athlete.athlete_id}` }}\n          >\n            <span style={{ color: \"#3c8dbc\" }}>{row.value} </span>\n          </Link>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"GENDER\" />,\n        accessor: \"athlete.gender\",\n        maxWidth: (size > 800) ? 150 : 60,\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => row.value,\n        filterMethod: (filter, row) => {\n          if (filter.value === \"\") {\n            return true;\n          }\n\n          if (Tableuniquesexo.includes(filter.value)) {\n            return row[filter.id] === filter.value;\n          } else {\n            return true;\n          }\n        },\n        Filter: ({ filter, onChange }) => (\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\", textAlignLast: \"center\" }}\n            value={filter ? filter.value : \"all\"}\n          >\n            <FormattedMessage id=\"ALL\">\n              {txt => <option value=\"all\">{txt}</option>}\n            </FormattedMessage>\n            {Tableuniquesexo.map(k => {\n              return (\n                <option key={k.toString()} value={k}>\n                  {k}\n                </option>\n              );\n            })}\n          </select>\n        )\n\n      },\n      {\n        Header: <FormattedMessage id=\"TEAM\" />,\n        maxWidth:400,\n        accessor: \"club\",\n        show: this.CheckSize(),\n        style: {\n          textAlign: \"center\"\n        },\n        Cell: row => row.value,\n        filterMethod: (filter, row) => {\n          if (filter.value === \"\") {\n            return true;\n          }\n\n          if (Tableuniqueclub.includes(filter.value)) {\n            return row[filter.id] === filter.value;\n          } else {\n            return true;\n          }\n        },\n        Filter: ({ filter, onChange }) => (\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\", textAlignLast: \"center\" }}\n            value={filter ? filter.value : \"all\"}\n          >\n            <FormattedMessage id=\"ALL\">\n              {txt => <option value=\"all\">{txt}</option>}\n            </FormattedMessage>\n            {Tableuniqueclub.map(k => {\n              return (\n                <option key={k.toString()} value={k}>\n                  {k}\n                </option>\n              );\n            })}\n          </select>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"CATEGORY\" />,\n        accessor: \"category\",\n        maxWidth:110,\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => row.value,\n        filterMethod: (filter, row) => {\n          if (filter.value === \"\") {\n            return true;\n          }\n\n          if (Tableuniquecategory.includes(filter.value)) {\n            return row[filter.id] === filter.value;\n          } else {\n            return true;\n          }\n        },\n        Filter: ({ filter, onChange }) => (\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\", textAlignLast: \"center\" }}\n            value={filter ? filter.value : \"all\"}\n          >\n            <FormattedMessage id=\"ALL\">\n              {txt => <option value=\"all\">{txt}</option>}\n            </FormattedMessage>\n            {Tableuniquecategory.map(k => {\n              return (\n                <option key={k.toString()} value={k}>\n                  {k}\n                </option>\n              );\n            })}\n          </select>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"COMPETITION\" />,\n        accessor: \"competition.name\",\n        maxWidth: (size > 800) ? 110 : 80,\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => row.value,\n        filterMethod: (filter, row) => {\n          if (filter.value === \"\") {\n            return true;\n          }\n\n          if (Tableuniquecompetition.includes(filter.value)) {\n            return row[filter.id] === filter.value;\n          } else {\n            return true;\n          }\n        },\n        Filter: ({ filter, onChange }) => (\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\", textAlignLast: \"center\" }}\n            value={filter ? filter.value : \"all\"}\n          >\n            <FormattedMessage id=\"ALL\">\n              {txt => <option value=\"all\">{txt}</option>}\n            </FormattedMessage>\n            {Tableuniquecompetition.map(k => {\n              return (\n                <option key={k.toString()} value={k}>\n                  {k}\n                </option>\n              );\n            })}\n          </select>\n        )\n      },\n      {\n        Header: \"Prova\",\n        accessor: \"competition.competition_id\",\n        show: false,\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => row.value,\n        filterMethod: (filter, row) => {\n          if (filter.value === \"\") {\n            return true;\n          }\n\n          if (Tableuniquecompetition.includes(filter.value)) {\n            return row[filter.id] === filter.value;\n          } else {\n            return true;\n          }\n        },\n        Filter: ({ filter, onChange }) => (\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\", textAlignLast: \"center\" }}\n            value={filter ? filter.value : \"all\"}\n          >\n            <option value=\"all\">Todos</option>\n            {Tableuniquecompetition.map(k => {\n              return (\n                <option key={k.toString()} value={k}>\n                  {k}\n                </option>\n              );\n            })}\n          </select>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"COUNTRY\" />,\n        accessor: \"athlete.nacionality\",\n        maxWidth:170,\n        show: this.CheckSize(),\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => row.value,\n        filterMethod: (filter, row) => {\n          if (filter.value === \"\") {\n            return true;\n          }\n\n          if (Tableuniquenacionality.includes(filter.value)) {\n            return row[filter.id] === filter.value;\n          } else {\n            return true;\n          }\n        },\n        Filter: ({ filter, onChange }) => (\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\", textAlignLast: \"center\" }}\n            value={filter ? filter.value : \"all\"}\n          >\n            <FormattedMessage id=\"ALL\">\n              {txt => <option value=\"all\">{txt}</option>}\n            </FormattedMessage>      \n                  {Tableuniquenacionality.map(k => {\n              return (\n                <option key={k.toString()} value={k}>\n                  {k}\n                </option>\n              );\n            })}\n          </select>\n        )\n      },\n      {\n\n        Header: <FormattedMessage id=\"STATUS\" />,\n        accessor: \"inscription_status_code\",\n        maxWidth: (size > 800) ? 150 : 110,\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => {\n          if (row.value === \"I\") {\n            return <FormattedMessage id=\"I\" />;\n          } else if (row.value === \"CI\") {\n            return <FormattedMessage id=\"CI\" />;\n          } else if (row.value === \"AN\") {\n            return <FormattedMessage id=\"AN\" />;\n          } else if (row.value === \"D\") {\n            return <FormattedMessage id=\"D\" />;\n          } else if (row.value === \"PND\") {\n            return <FormattedMessage id=\"PND\" />;\n          } else if (row.value === \"DNS\") {\n            return <FormattedMessage id=\"DNS\" />;\n          }else if (row.value === \"EP\") {\n            return <FormattedMessage id=\"EP\" />;\n          }else if (row.value === \"DNF\") {\n            return <FormattedMessage id=\"DNF\" />;\n          }else if (row.value === \"DSQ\") {\n            return <FormattedMessage id=\"DSQ\" />;\n          }else if (row.value === \"EV\") {\n            return <FormattedMessage id=\"EV\" />;\n          }else if (row.value === \"FIN\") {\n            return <FormattedMessage id=\"FIN\" />;\n          }else if (row.value === \"GAP\") {\n            return <FormattedMessage id=\"GAP\" />;\n          }else\n          { return \"\"}\n        },\n        filterMethod: (filter, row) => {\n          if (filter.value === \"\") {\n            return true;\n          }\n\n          if (Tableuniqueinscription_status_code.includes(filter.value)) {\n            return row[filter.id] === filter.value;\n          } else {\n            return true;\n          }\n        },\n        Filter: ({ filter, onChange }) => (\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\", textAlignLast: \"center\" }}\n            value={filter ? filter.value : \"all\"}\n          >\n            <FormattedMessage id=\"ALL\">\n              {txt => <option value=\"all\">{txt}</option>}\n            </FormattedMessage>\n            {Tableuniqueinscription_status_code.map(k => {\n              return (\n                <FormattedMessage id={k.toString()}>\n                  {txt => <option key={k.toString()} value={k}>{txt}</option>}\n                </FormattedMessage>\n              );\n            })}\n          </select>\n        )\n      },\n      {\n        Header: (size > 800) ? <FormattedMessage id=\"FAVORITE\" /> : \"FAV\",\n        filterable: false,\n        sortable: false,\n        maxWidth: (size > 800) ? 70 : 50,\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => (\n          <Favorites ListaFavoritos={row.original.athlete.athlete_id} />\n\n        )\n      }\n    ];\n    return (\n      <ReactTable\n        defaultSorted={[\n          {\n            id: \"dorsal_number\",\n            desc: false\n          }\n        ]}\n        previousText={<FormattedMessage id=\"PREVIOUS\" />}\n        nextText={<FormattedMessage id=\"NEXT\" />}\n        columns={columns}\n        data={this.props.athleteList}\n        filterable\n        noDataText={<FormattedMessage id=\"NODATA\" />}\n        defaultPageSize={minimalSize(this.props.athleteList.length,20)}\n        pageSizeOptions={calculatePagination(this.props.athleteList.length, 20)}\n        showPagination={true}\n        showPaginationTop={false}\n        showPaginationBottom={true}\n        showPageSizeOptions={true}\n        showPageJump={true}\n        collapseOnSortingChange={true}\n        collapseOnPageChange={true}\n        collapseOnDataChange={true}\n        freezeWhenExpanded={false}\n        sortable={true}\n        multiSort={true}\n        resizable={true}\n        defaultSortDesc={false}\n        pageText={<FormattedMessage id=\"PAGE\" />}\n        rowsText={\"\"}\n        className=\"-striped -highlight\"\n\n      />\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { FormattedMessage } from 'react-intl';\n\nexport default class NumberParticipants extends Component {\n    render() {\n        return (\n            <div>\n                {/* Info boxes */}\n                <div className=\"col-md-3 col-sm-6 col-xs-12\">\n                    <div className=\"info-box\">\n                        <span className=\"info-box-icon bg-aqua\"><i className=\"ion ion-ios-contact-outline\" /></span>\n                        <div className=\"info-box-content\">\n                            <span className=\"info-box-text\"><FormattedMessage id=\"ATHLETES\" /></span>\n                            <span className=\"info-box-number\">{this.props.athleteList.length}</span>\n                        </div>\n                        {/* /.info-box-content */}\n                    </div>\n                    {/* /.info-box */}\n                </div>\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { FormattedMessage } from 'react-intl';\n\nexport default class NumberCategories extends Component {\n    render() {\n        //get the category\n        let category = this.props.athleteList.map(athelete => {\n            return athelete.category;\n        });\n        //remove duplicates\n        const Tableuniquecategory = [...new Set(category)];\n        return (\n            <div>\n                {/* Info boxes */}\n                <div className=\"col-md-3 col-sm-6 col-xs-12\">\n                    <div className=\"info-box\">\n                        <span className=\"info-box-icon bg-blue\"><i className=\"ion ion-ios-analytics-outline\" /></span>\n                        <div className=\"info-box-content\">\n                            <span className=\"info-box-text\"><FormattedMessage id=\"CATEGORY\" /></span>\n                            <span className=\"info-box-number\">{Tableuniquecategory.length}</span>\n                        </div>\n                        {/* /.info-box-content */}\n                    </div>\n                    {/* /.info-box */}\n                </div>\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from \"react\";\nimport { FormattedMessage } from 'react-intl';\nexport default class NumberTeams extends Component {\n    render() {\n        //get the Club\n        let club = this.props.athleteList.map(athelete => {\n            return athelete.club;\n        });\n        //remove duplicates\n        const Tableuniqueclub = [...new Set(club)];\n        return (\n            <div>\n                {/* Info boxes */}\n                <div className=\"col-md-3 col-sm-6 col-xs-12\">\n                    <div className=\"info-box\">\n                        <span className=\"info-box-icon bg-yellow\"><i className=\"ion ion-ios-people-outline\" /></span>\n                        <div className=\"info-box-content\">\n                            <span className=\"info-box-text\"><FormattedMessage id=\"TEAMS\" /></span>\n                            <span className=\"info-box-number\">{Tableuniqueclub.length}</span>\n                        </div>\n                        {/* /.info-box-content */}\n                    </div>\n                    {/* /.info-box */}\n                </div>\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { FormattedMessage } from 'react-intl';\n\nexport default class NumberNationalities extends Component {\n    render() {\n        var nacionality\n        //get the nacionality\n        if( this.props.giveup===true){\n            nacionality = this.props.athleteList.map(athelete => {\n                return athelete.country;});\n        }\n        else{\n             nacionality = this.props.athleteList.map(athelete => {\n                return athelete.athlete.nacionality;});\n        }\n\n        //remove duplicates\n        const Tableuniquenacionality = [...new Set(nacionality)];\n        return (\n            <div>\n                {/* Info boxes */}\n                <div className=\"col-md-3 col-sm-6 col-xs-12\">\n                    <div className=\"info-box\">\n                        <span className=\"info-box-icon bg-red\"><i className=\"fa fa-fw fa-map-o\" /></span>\n                        <div className=\"info-box-content\">\n                            <span className=\"info-box-text\"><FormattedMessage id=\"NATIONALITY\" /></span>\n                            <span className=\"info-box-number\">{Tableuniquenacionality.length}</span>\n                        </div>\n                        {/* /.info-box-content */}\n                    </div>\n                    {/* /.info-box */}\n                </div>\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from \"react\";\nimport Header from \"../structure/Header\";\nimport Footer from \"../structure/Footer\";\nimport Menu from \"../structure/Menu\";\nimport TableSubscribers from \"../Tables/TableParticipants\";\nimport WidgetNumberParticipants from \"../Widgets/NumberParticipants\";\nimport WidgetNumberCategories from \"../Widgets/NumberCategories\";\nimport WidgetNumberteams from \"../Widgets/NumberTeams\";\nimport WidgetNumberNacionalities from \"../Widgets/NumberNationalities\";\nimport Loader from \"../Loader/Loader\";\nimport { FormattedMessage } from 'react-intl';\nimport ReactGA from 'react-ga'\n\nconst API_KEY = `${process.env.REACT_APP_API_TRAIL_KEY}`;\nconst API_URL = `${process.env.REACT_APP_API_TRAIL_URL}`;\nconst TOKEN = API_KEY;\nvar EventID = 0;\n\nexport default class EventSubscribers extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      athleteList: [],\n      loading: false,\n    };\n\n  }\n\n  componentWillMount() {\n    try {\n      if (localStorage.getItem(`athleteList${this.props.match.params.EventID}`)) {\n\n        const athList = JSON.parse(localStorage.getItem(`athleteList${this.props.match.params.EventID}`))\n        this.setState({ athleteList: athList, loading: true })\n      }\n\n\n    }\n    catch{\n      localStorage.clear();\n\n    }\n    this.getAthletsList();\n\n  }\n\n\n  /*List of athlets*/\n  getAthletsList = async e => {\n    const API_CALL = await fetch(`${API_URL}/trail/Athletes/${this.props.match.params.EventID}/`, {\n      headers: new Headers({\n        Authorization: TOKEN\n      })\n    });\n    const data = await API_CALL.json();\n    try {\n      localStorage.setItem(`athleteList${this.props.match.params.EventID}`, JSON.stringify(data))\n    }\n    catch{\n      localStorage.clear();\n\n    }\n    this.setState({ athleteList: data, loading: true });\n  };\n\n  closeQuestionForm()\n  {\n    localStorage.setItem(`Respondeu`, JSON.stringify(\"true\"))\n  }\n\n\n  CheckifThereisDatatoShowTable(){\n    \n    if(this.state.athleteList.length >0){\n      return(    \n        <TableSubscribers\n        athleteList={this.state.athleteList}\n        loading={this.state.loading}\n        eventID={this.props.match.params.EventID}\n        competitionID={0}\n      />\n        )\n    }else\n    return(\n      <div class=\"box-body\" style={{textAlign:\"center\"}}>\n        <FormattedMessage id=\"NOTABLEDATA\"/>\n      </div>)\n\n  }\n\n\n  render() {\n    return (\n      <div>\n        <Header eventID={this.props.match.params.EventID} />\n        {/*Send the event id to the MENU, to get the competition list*/}\n        <Menu eventID={this.props.match.params.EventID} competitionID={0} />\n        {/*CONTENT*/}\n        <div>\n          {/* Content Wrapper. Contains page content */}\n          <div className=\"content-wrapper\">\n\n            {/* Content Header (Page header) */}\n            <section className=\"content-header\">\n\n            </section>\n            {/* Main content */}\n            {/*Check if data is loading*/}\n            {(() => {\n              if (this.state.loading === false) {\n                return (\n                  <section className=\"content\">\n                    <div className=\"row\">\n                      <div className=\"col-xs-12\">\n                        <div className=\"box\">\n                          {/* /.box-body */}\n                          <div className=\"box-body\" style={{ display: 'flex', justifyContent: 'center' }}>\n                            <Loader />\n                          </div>\n\n                        </div>\n                      </div>\n                    </div>\n                  </section>\n                )\n              }\n              else {\n                return (\n                  <section className=\"content\">\n                    <div className=\"row\">\n                      {/* widget for the number of participants */}\n                      <WidgetNumberParticipants athleteList={this.state.athleteList} />\n                      {/* widget for the number of Teams */}\n                      <WidgetNumberteams athleteList={this.state.athleteList} />\n                      {/* widget for the number of Categories */}\n                      <WidgetNumberCategories athleteList={this.state.athleteList} />\n                      {/* widget for the number of Nacionalities */}\n                      <WidgetNumberNacionalities athleteList={this.state.athleteList} />\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col-xs-12\">\n                        <div className=\"box\">\n                          {/* /.box-body */}\n                          <div className=\"box box-primary\"></div>\n                          <div style={{ width: 100 + '%!important' }}>\n                            {this.CheckifThereisDatatoShowTable()}\n                          </div>\n                          {/* Table for the list of participants */}\n\n\n                        </div>\n                      </div>\n                      {/* /.col */}\n                    </div>\n                    {/* /.row */}\n\n                  </section>\n\n\n                )\n              }\n            })()}\n          </div>\n          {/* /.content-wrapper */}\n        </div>\n        <Footer eventID={this.props.match.params.EventID} />\n      </div>\n    );\n  }\n\n}\n","import React, { Component } from \"react\";\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\nimport { Link } from \"react-router-dom\";\nimport Favorites from \"../favorites/favoritesChecker\"\nimport { FormattedMessage } from 'react-intl';\nimport { calculatePagination } from \"../Scripts/PaginationHelper\"\nimport { minimalSize } from \"../Scripts/PaginationHelper\"\n\nvar size = window.innerWidth;\n\n\nexport default class TableGiveUP extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: this.props.loading\n    };\n  }\n  CheckSize() {\n    if (size > 800) {\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n  render() {\n    //Info for the filters\n    //get the category\n    let category = this.props.athleteList.map(athelete => {\n      return athelete.escalao;\n    });\n    //remove duplicates\n    const Tableuniquecategory = [...new Set(category.sort())];\n    //get the nacionality\n    let nacionality = this.props.athleteList.map(athelete => {\n      return athelete.country;\n    });\n    //remove duplicates\n    const Tableuniquenacionality = [...new Set(nacionality.sort())];\n    //get the Local\n    let local = this.props.athleteList.map(athelete => {\n      return athelete.local;\n    });\n    //remove duplicates\n    const Tableuniquelocal = [...new Set(local.sort())];\n    //get the Club\n    let club = this.props.athleteList.map(athelete => {\n      return athelete.club;\n    });\n    //remove duplicates\n    const Tableuniqueclub = [...new Set(club.sort())];\n    //Table\n    const columns = [\n      {\n        Header: \"Id\",\n        accessor: \"athlete_id\",\n        sortable: false,\n        style: {\n          textAlign: \"Center\"\n        },\n        width: 100,\n        maxWidth: 100,\n        mimWidth: 100,\n        show: false\n      },\n      {\n        Header: (size>800)? <FormattedMessage id=\"DORSAL\" />:\"PTL\",\n        id: \"peitoral\",\n        accessor: d => Number(d.peitoral),\n        style: {\n          textAlign: \"Center\"\n        },\n        maxWidth:(size>800)?100:90,\n        Filter: ({ filter, onChange }) => (\n          <FormattedMessage id=\"SEARCH\" >\n          {txt => <input\n             onChange={event => onChange(event.target.value)}\n             value={filter ? filter.value : \"\"}\n             placeholder={txt}\n             style={{\n               width: \"100%\",\n               textAlign: \"Center\"\n             }}\n           />}\n           </FormattedMessage>\n        ),\n        Cell: row => (\n\n          <Link\n            to={{ pathname: `/AthleteDetail/${this.props.eventID}/${this.props.competitionID}/${row.original.athlete_id}` }}\n          >\n            <span style={{ color: \"#3c8dbc\" }}>{row.value} </span>\n          </Link>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"NAME\" />,\n        id:\"NAME\",\n        accessor: row => `${row.ranking} ${row.rankingLast}`,\n        maxWidth: (size > 800) ? 400 : 170,\n        style: {\n          textAlign: \"center\"\n        },\n        Filter: ({ filter, onChange }) => (\n          <FormattedMessage id=\"SEARCH\" >\n          {txt => <input\n             onChange={event => onChange(event.target.value)}\n             value={filter ? filter.value : \"\"}\n             placeholder={txt}\n             style={{\n               width: \"100%\",\n               textAlign: \"Center\"\n             }}\n           />}\n           </FormattedMessage>),\n        filterMethod: (filter, row) =>\n        String(row._original.ranking.toLowerCase()).startsWith(filter.value) ||\n        String(row._original.rankingLast.toLowerCase()).startsWith(filter.value) ||\n        String(row._original.ranking.toUpperCase()).startsWith(filter.value) ||\n        String(row._original.rankingLast.toUpperCase()).startsWith(filter.value) ||\n        String(row._original.ranking).startsWith(filter.value) ||\n        String(row._original.rankingLast).startsWith(filter.value) ||\n        String(row._original.ranking+\" \"+row._original.rankingLast).startsWith(filter.value) ||\n        String(row._original.ranking.toUpperCase()+\" \"+row._original.rankingLast.toUpperCase()).startsWith(filter.value)||\n        String(row._original.ranking.toLowerCase()+\" \"+row._original.rankingLast.toLowerCase()).startsWith(filter.value), \n        Cell: row => (\n          <Link\n          to={{ pathname: `/AthleteDetail/${this.props.eventID}/${this.props.competitionID}/${row.original.athlete_id}` }}\n          >\n            <span style={{ color: \"#3c8dbc\" }}>{row.value} </span>\n          </Link>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"TEAM\" />,\n        maxWidth: (size > 800) ? 400 : 140,\n        accessor: \"club\",\n        show : this.CheckSize(),\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => row.value,\n        filterMethod: (filter, row) => {\n          if (filter.value === \"\") {\n            return true;\n          }\n\n          if (Tableuniqueclub.includes(filter.value)) {\n            return row[filter.id] === filter.value;\n          } else {\n            return true;\n          }\n        },\n        Filter: ({ filter, onChange }) => (\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\",textAlignLast:\"center\" }}\n            value={filter ? filter.value : \"all\"}\n          >\n             <FormattedMessage id=\"ALL\">\n              {txt => <option value=\"all\">{txt}</option>}\n            </FormattedMessage>\n            {Tableuniqueclub.map(k => {\n              return (\n                <option key={k.toString()} value={k}>\n                  {k}\n                </option>\n              );\n            })}\n          </select>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"CATEGORY\" />,\n        accessor: \"escalao\",\n        maxWidth: (size > 800) ? 150 : 100,\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => row.value,\n        filterMethod: (filter, row) => {\n          if (filter.value === \"\") {\n            return true;\n          }\n\n          if (Tableuniquecategory.includes(filter.value)) {\n            return row[filter.id] === filter.value;\n          } else {\n            return true;\n          }\n        },\n        Filter: ({ filter, onChange }) => (\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\",textAlignLast:\"center\" }}\n            value={filter ? filter.value : \"all\"}\n          >\n            <FormattedMessage id=\"ALL\">\n              {txt => <option value=\"all\">{txt}</option>}\n            </FormattedMessage>\n            {Tableuniquecategory.map(k => {\n              return (\n                <option key={k.toString()} value={k}>\n                  {k}\n                </option>\n              );\n            })}\n          </select>\n        )\n      },\n\n      {\n        Header: <FormattedMessage id=\"COUNTRY\" />,\n        accessor: \"country\",\n        maxWidth:250,\n        show : this.CheckSize(),\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => row.value,\n        filterMethod: (filter, row) => {\n          if (filter.value === \"\") {\n            return true;\n          }\n\n          if (Tableuniquenacionality.includes(filter.value)) {\n            return row[filter.id] === filter.value;\n          } else {\n            return true;\n          }\n        },\n        Filter: ({ filter, onChange }) => (\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\",textAlignLast:\"center\" }}\n            value={filter ? filter.value : \"all\"}\n          >\n           <FormattedMessage id=\"ALL\">\n              {txt => <option value=\"all\">{txt}</option>}\n            </FormattedMessage>\n            {Tableuniquenacionality.map(k => {\n              return (\n                <option key={k.toString()} value={k}>\n                  {k}\n                </option>\n              );\n            })}\n          </select>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"PLACE\" />,\n        accessor: \"local\",\n        maxWidth:(size>800)?250:150,\n\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => row.value,\n        filterMethod: (filter, row) => {\n          if (filter.value === \"\") {\n            return true;\n          }\n\n          if (Tableuniquelocal.includes(filter.value)) {\n            return row[filter.id] === filter.value;\n          } else {\n            return true;\n          }\n        },\n        Filter: ({ filter, onChange }) => (\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\",textAlignLast:\"center\" }}\n            value={filter ? filter.value : \"all\"}\n          >\n            <option value=\"all\">Todos</option>\n            {Tableuniquelocal.map(k => {\n              return (\n                <option key={k.toString()} value={k}>\n                  {k}\n                </option>\n              );\n            })}\n          </select>\n        )\n      },\n\n      {\n        Header: (size>800)? <FormattedMessage id=\"FAVORITE\" />:\"FAV\",\n        maxWidth:(size>800)?150:100,\n\n        filterable: false,\n        sortable: false,\n\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => (\n          <Favorites ListaFavoritos={row.original.athlete_id} />\n\n        )\n      }\n    ];\n\n    return (\n      <ReactTable\n        defaultSorted={[\n          {\n            id: \"peitoral\",\n            desc: false\n          }\n        ]}\n        previousText={<FormattedMessage id=\"PREVIOUS\" />}\n        nextText={<FormattedMessage id=\"NEXT\" />}\n        columns={columns}\n        data={this.props.athleteList}\n        filterable\n        noDataText={<FormattedMessage id=\"NODATA\" />}\n        defaultPageSize={4}\n        pageSizeOptions={calculatePagination(this.props.athleteList.length, 4)}\n        showPaginationTop={false}\n        showPaginationBottom={true}\n        showPageSizeOptions={true}\n        showPageJump={true}\n        collapseOnSortingChange={true}\n        collapseOnPageChange={true}\n        collapseOnDataChange={true}\n        freezeWhenExpanded={false}\n        sortable={true}\n        multiSort={true}\n        resizable={true}\n        defaultSortDesc={false}\n        pageText={<FormattedMessage id=\"PAGE\" />}\n        rowsText={\"\"}\n        className=\"-striped -highlight\"\n\n      />\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\nimport { Link } from \"react-router-dom\";\nimport Favorites from \"../favorites/favoritesChecker\"\nimport { FormattedMessage } from 'react-intl';\nimport { calculatePagination } from \"../Scripts/PaginationHelper\"\nimport { minimalSize } from \"../Scripts/PaginationHelper\"\n\nvar size = window.innerWidth;\n\n\nexport default class TableDisqualified extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: this.props.loading\n    };\n  }\n  CheckSize() {\n    if (size > 800) {\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n  render() {\n    //Info for the filters\n    //get the category\n    let category = this.props.athleteList.map(athelete => {\n      return athelete.escalao;\n    });\n    //remove duplicates\n    const Tableuniquecategory = [...new Set(category.sort())];\n    //get the nacionality\n    let nacionality = this.props.athleteList.map(athelete => {\n      return athelete.country;\n    });\n    //remove duplicates\n    const Tableuniquenacionality = [...new Set(nacionality.sort())];\n    //get the Local\n    let local = this.props.athleteList.map(athelete => {\n      return athelete.local;\n    });\n    //remove duplicates\n    const Tableuniquelocal = [...new Set(local.sort())];\n    //get the Club\n    let club = this.props.athleteList.map(athelete => {\n      return athelete.club;\n    });\n    //remove duplicates\n    const Tableuniqueclub = [...new Set(club.sort())];\n    //Table\n    const columns = [\n      {\n        Header: \"Id\",\n        accessor: \"athlete_id\",\n        sortable: false,\n        style: {\n          textAlign: \"Center\"\n        },\n        width: 100,\n        maxWidth: 100,\n        mimWidth: 100,\n        show: false\n      },\n      {\n        Header: (size>800)? <FormattedMessage id=\"DORSAL\" />:\"PTL\",\n        id: \"peitoral\",\n        accessor: d => Number(d.peitoral),\n        style: {\n          textAlign: \"Center\"\n        },\n        maxWidth:(size>800)?100:90,\n        Filter: ({ filter, onChange }) => (\n          <FormattedMessage id=\"SEARCH\" >\n          {txt => <input\n             onChange={event => onChange(event.target.value)}\n             value={filter ? filter.value : \"\"}\n             placeholder={txt}\n             style={{\n               width: \"100%\",\n               textAlign: \"Center\"\n             }}\n           />}\n           </FormattedMessage>\n        ),\n        Cell: row => (\n\n          <Link\n            to={{ pathname: `/AthleteDetail/${this.props.eventID}/${this.props.competitionID}/${row.original.athlete_id}` }}\n          >\n            <span style={{ color: \"#3c8dbc\" }}>{row.value} </span>\n          </Link>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"NAME\" />,\n        id:\"NAME\",\n        accessor: row => `${row.ranking} ${row.rankingLast}`,\n        maxWidth: (size > 800) ? 400 : 170,\n        style: {\n          textAlign: \"center\"\n        },\n        Filter: ({ filter, onChange }) => (\n          <FormattedMessage id=\"SEARCH\" >\n          {txt => <input\n             onChange={event => onChange(event.target.value)}\n             value={filter ? filter.value : \"\"}\n             placeholder={txt}\n             style={{\n               width: \"100%\",\n               textAlign: \"Center\"\n             }}\n           />}\n           </FormattedMessage>),\n        filterMethod: (filter, row) =>\n        String(row._original.ranking.toLowerCase()).startsWith(filter.value) ||\n        String(row._original.rankingLast.toLowerCase()).startsWith(filter.value) ||\n        String(row._original.ranking.toUpperCase()).startsWith(filter.value) ||\n        String(row._original.rankingLast.toUpperCase()).startsWith(filter.value) ||\n        String(row._original.ranking).startsWith(filter.value) ||\n        String(row._original.rankingLast).startsWith(filter.value) ||\n        String(row._original.ranking+\" \"+row._original.rankingLast).startsWith(filter.value) ||\n        String(row._original.ranking.toUpperCase()+\" \"+row._original.rankingLast.toUpperCase()).startsWith(filter.value)||\n        String(row._original.ranking.toLowerCase()+\" \"+row._original.rankingLast.toLowerCase()).startsWith(filter.value), \n        Cell: row => (\n          <Link\n          to={{ pathname: `/AthleteDetail/${this.props.eventID}/${this.props.competitionID}/${row.original.athlete_id}` }}\n          >\n            <span style={{ color: \"#3c8dbc\" }}>{row.value} </span>\n          </Link>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"TEAM\" />,\n        maxWidth: (size > 800) ? 400 : 140,\n        accessor: \"club\",\n        show : this.CheckSize(),\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => row.value,\n        filterMethod: (filter, row) => {\n          if (filter.value === \"\") {\n            return true;\n          }\n\n          if (Tableuniqueclub.includes(filter.value)) {\n            return row[filter.id] === filter.value;\n          } else {\n            return true;\n          }\n        },\n        Filter: ({ filter, onChange }) => (\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\",textAlignLast:\"center\" }}\n            value={filter ? filter.value : \"all\"}\n          >\n             <FormattedMessage id=\"ALL\">\n              {txt => <option value=\"all\">{txt}</option>}\n            </FormattedMessage>\n            {Tableuniqueclub.map(k => {\n              return (\n                <option key={k.toString()} value={k}>\n                  {k}\n                </option>\n              );\n            })}\n          </select>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"CATEGORY\" />,\n        accessor: \"escalao\",\n        maxWidth: (size > 800) ? 150 : 100,\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => row.value,\n        filterMethod: (filter, row) => {\n          if (filter.value === \"\") {\n            return true;\n          }\n\n          if (Tableuniquecategory.includes(filter.value)) {\n            return row[filter.id] === filter.value;\n          } else {\n            return true;\n          }\n        },\n        Filter: ({ filter, onChange }) => (\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\",textAlignLast:\"center\" }}\n            value={filter ? filter.value : \"all\"}\n          >\n            <FormattedMessage id=\"ALL\">\n              {txt => <option value=\"all\">{txt}</option>}\n            </FormattedMessage>\n            {Tableuniquecategory.map(k => {\n              return (\n                <option key={k.toString()} value={k}>\n                  {k}\n                </option>\n              );\n            })}\n          </select>\n        )\n      },\n\n      {\n        Header: <FormattedMessage id=\"COUNTRY\" />,\n        accessor: \"country\",\n        maxWidth:250,\n        show : this.CheckSize(),\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => row.value,\n        filterMethod: (filter, row) => {\n          if (filter.value === \"\") {\n            return true;\n          }\n\n          if (Tableuniquenacionality.includes(filter.value)) {\n            return row[filter.id] === filter.value;\n          } else {\n            return true;\n          }\n        },\n        Filter: ({ filter, onChange }) => (\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\",textAlignLast:\"center\" }}\n            value={filter ? filter.value : \"all\"}\n          >\n           <FormattedMessage id=\"ALL\">\n              {txt => <option value=\"all\">{txt}</option>}\n            </FormattedMessage>\n            {Tableuniquenacionality.map(k => {\n              return (\n                <option key={k.toString()} value={k}>\n                  {k}\n                </option>\n              );\n            })}\n          </select>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"PLACE\" />,\n        accessor: \"local\",\n        maxWidth:(size>800)?250:150,\n\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => row.value,\n        filterMethod: (filter, row) => {\n          if (filter.value === \"\") {\n            return true;\n          }\n\n          if (Tableuniquelocal.includes(filter.value)) {\n            return row[filter.id] === filter.value;\n          } else {\n            return true;\n          }\n        },\n        Filter: ({ filter, onChange }) => (\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\",textAlignLast:\"center\" }}\n            value={filter ? filter.value : \"all\"}\n          >\n            <option value=\"all\">Todos</option>\n            {Tableuniquelocal.map(k => {\n              return (\n                <option key={k.toString()} value={k}>\n                  {k}\n                </option>\n              );\n            })}\n          </select>\n        )\n      },\n\n      {\n        Header: (size>800)? <FormattedMessage id=\"FAVORITE\" />:\"FAV\",\n        maxWidth:(size>800)?150:100,\n\n        filterable: false,\n        sortable: false,\n\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => (\n          <Favorites ListaFavoritos={row.original.athlete_id} />\n\n        )\n      }\n    ];\n\n    return (\n      <ReactTable\n        defaultSorted={[\n          {\n            id: \"peitoral\",\n            desc: false\n          }\n        ]}\n        previousText={<FormattedMessage id=\"PREVIOUS\" />}\n        nextText={<FormattedMessage id=\"NEXT\" />}\n        columns={columns}\n        data={this.props.athleteList}\n        filterable\n        noDataText={<FormattedMessage id=\"NODATA\" />}\n        defaultPageSize={4}\n        pageSizeOptions={calculatePagination(this.props.athleteList.length, 4)}\n        showPaginationTop={false}\n        showPaginationBottom={true}\n        showPageSizeOptions={true}\n        showPageJump={true}\n        collapseOnSortingChange={true}\n        collapseOnPageChange={true}\n        collapseOnDataChange={true}\n        freezeWhenExpanded={false}\n        sortable={true}\n        multiSort={true}\n        resizable={true}\n        defaultSortDesc={false}\n        pageText={<FormattedMessage id=\"PAGE\" />}\n        rowsText={\"\"}\n        className=\"-striped -highlight\"\n\n      />\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Header from \"../structure/Header\";\nimport Footer from \"../structure/Footer\";\nimport Menu from \"../structure/Menu\";\nimport TableGiveUp from \"../Tables/TableGiveUp\";\nimport TableDisqualified from \"../Tables/TableDisqualified\";\nimport WidgetNumberParticipants from \"../Widgets/NumberParticipants\"\nimport Loader from \"../Loader/Loader\";\nimport WidgetNumberNacionalities from \"../Widgets/NumberNationalities\";\nimport { FormattedMessage } from 'react-intl';\n\n\nconst API_KEY = `${process.env.REACT_APP_API_TRAIL_KEY}`;\nconst API_URL = `${process.env.REACT_APP_API_TRAIL_URL}`;\nconst TOKEN = API_KEY;\nexport default class EventSubscribers extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      atheleGiveUPList: [],\n      atheleDisqualifiedList: [],\n      loadingGiveUP: false,\n      loadingDisqualified: false,\n    };\n\n\n  }\n\n  componentWillMount() {\n    if (JSON.parse(localStorage.getItem(`atheleGiveUPList${this.props.match.params.EventID}${this.props.match.params.CompID}`)) && JSON.parse(localStorage.getItem(`atheleDisqualifiedList${this.props.match.params.EventID}${this.props.match.params.CompID}`))) {\n      const atheleGiveUPList = JSON.parse(localStorage.getItem(`atheleGiveUPList${this.props.match.params.EventID}${this.props.match.params.CompID}`))\n      const atheleDisqualifiedList = JSON.parse(localStorage.getItem(`atheleDisqualifiedList${this.props.match.params.EventID}${this.props.match.params.CompID}`))\n      this.setState({ atheleGiveUPList: atheleGiveUPList, atheleDisqualifiedList: atheleDisqualifiedList, loadingGiveUP: true, loadingDisqualified: true })\n    }\n    this.getAthletesGiveUPList = this.getAthletesGiveUPList.bind(this);\n    this.getAthletesDisqualifiedList = this.getAthletesDisqualifiedList.bind(this);\n    this.getAthletesGiveUPList();\n    this.getAthletesDisqualifiedList();\n  }\n\n  /*when props change*/\n  componentDidUpdate(prevProps) {\n    if (prevProps.match.params.CompID !== this.props.match.params.CompID) {\n      this.setState({ loadingGiveUP: false, loadingDisqualified: false })\n      try {\n        if (JSON.parse(localStorage.getItem(`atheleGiveUPList${this.props.match.params.EventID}${this.props.match.params.CompID}`)) && JSON.parse(localStorage.getItem(`atheleDisqualifiedList${this.props.match.params.EventID}${this.props.match.params.CompID}`))) {\n          const atheleGiveUPList = JSON.parse(localStorage.getItem(`atheleGiveUPList${this.props.match.params.EventID}${this.props.match.params.CompID}`))\n          const atheleDisqualifiedList = JSON.parse(localStorage.getItem(`atheleDisqualifiedList${this.props.match.params.EventID}${this.props.match.params.CompID}`))\n          this.setState({ atheleGiveUPList: atheleGiveUPList, atheleDisqualifiedList: atheleDisqualifiedList, loadingGiveUP: true, loadingDisqualified: true })\n        }\n      }\n      catch{\n        localStorage.clear();\n\n      }\n      this.getAthletesGiveUPList();\n      this.getAthletesDisqualifiedList();\n    }\n  }\n\n  /*Get giveup athletes*/\n  getAthletesGiveUPList = async e => {\n    const API_CALL = await fetch(`${API_URL}/competition/AthsGiveup/${this.props.match.params.CompID}/`, {\n      headers: new Headers({\n        Authorization: TOKEN\n      })\n    });\n    const data = await API_CALL.json();\n    try {\n      localStorage.setItem(`atheleGiveUPList${this.props.match.params.EventID}${this.props.match.params.CompID}`, JSON.stringify(data))\n    }\n    catch{\n      localStorage.clear();\n\n    }\n    this.setState({ atheleGiveUPList: data, loadingGiveUP: true });\n  };\n\n  /*Get disqualified list athletes*/\n  getAthletesDisqualifiedList = async e => {\n\n    const API_CALL = await fetch(`${API_URL}/competition/AthDisqualified/${this.props.match.params.CompID}/`, {\n      headers: new Headers({\n        Authorization: TOKEN\n      })\n    });\n    const data = await API_CALL.json();\n    try {\n      localStorage.setItem(`atheleDisqualifiedList${this.props.match.params.EventID}${this.props.match.params.CompID}`, JSON.stringify(data))\n    }\n    catch{\n      localStorage.clear();\n\n    }\n    this.setState({ atheleDisqualifiedList: data, loadingDisqualified: true });\n\n  };\n  CheckifThereisDatatoShowTableD(){\n    \n    if(this.state.atheleDisqualifiedList.length >0){\n      return(    \n        <TableDisqualified\n        eventID={this.props.match.params.EventID}\n        competitionID={this.props.match.params.CompID}\n        athleteList={this.state.atheleDisqualifiedList}\n        loading={this.state.loading}\n      />\n        )\n    }else\n    return(\n      <div class=\"box-body\" style={{textAlign:\"center\"}}>\n        <FormattedMessage id=\"NOTABLEDATA\"/>\n      </div>)\n\n  }\n  CheckifThereisDatatoShowTableG(){\n    \n    if(this.state.atheleGiveUPList.length >0){\n      return(    \n        <TableGiveUp\n        eventID={this.props.match.params.EventID}\n        competitionID={this.props.match.params.CompID}\n        athleteList={this.state.atheleGiveUPList}\n        loading={this.state.loading}\n      />\n        )\n    }else\n    return(\n      <div class=\"box-body\" style={{textAlign:\"center\"}}>\n        <FormattedMessage id=\"NOTABLEDATA\"/>\n      </div>)\n\n  }\n\n\n\n  render() {\n    return (\n      <div>\n        <Header eventID={this.props.match.params.EventID} />\n        {/*Send the event id to the MENU, to get the competition list*/}\n        <Menu eventID={this.props.match.params.EventID} competitionID={this.props.match.params.CompID} />\n        {/*CONTENT*/}\n        <div>\n          {/* Content Wrapper. Contains page content */}\n          <div className=\"content-wrapper\">\n            {/* Content Header (Page header) */}\n            <section className=\"content-header\">\n              <h1>\n                <span >{this.props.match.params.CompName}</span>\n                <span style={{ float: \"right\" }}>< FormattedMessage id=\"QUIT\" /></span>\n              </h1>\n            </section>\n            {/* Main content */}\n            {/*Check if data is loading*/}\n            {(() => {\n              if (this.state.loadingGiveUP === false) {\n                return (\n                  <section className=\"content\">\n                    <div className=\"row\">\n                      <div className=\"col-xs-12\">\n                        <div className=\"box\">\n                          {/* /.box-body */}\n                          <div className=\"box-body\" style={{ display: 'flex', justifyContent: 'center' }}>\n                            <Loader />\n                          </div>\n\n                        </div>\n                      </div>\n                    </div>\n                  </section>\n                )\n              }\n              else {\n                return (\n                  <section className=\"content\">\n                    <div className=\"row\">\n                      {/* widget for the number of participants */}\n                      <WidgetNumberParticipants athleteList={this.state.atheleGiveUPList} />\n                      <WidgetNumberNacionalities giveup={true} athleteList={this.state.atheleGiveUPList} />\n\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col-xs-12\">\n                        <div className=\"box\">\n                          {/* /.box-body */}\n                          <div className=\"box box-primary\"></div>\n                          {this.CheckifThereisDatatoShowTableG()}\n                        </div>\n                      </div>\n                      {/* /.col */}\n                    </div>\n                    {/* /.row */}\n                  </section>\n                )\n              }\n            })()}\n            <section className=\"content-header\">\n              <h1>\n                {/*<span >{this.props.match.params.CompName}</span> */}\n                <span style={{ float: \"right\" }}>< FormattedMessage id=\"DISUALIFIED\" /></span>\n              </h1>\n            </section>\n            {/*Check if data is loading*/}\n            {(() => {\n              if (this.state.loadingDisqualified === false) {\n                return (\n                  <section className=\"content\">\n                    <div className=\"row\">\n                      <div className=\"col-xs-12\">\n                        <div className=\"box\">\n                          {/* /.box-body */}\n                          <div className=\"box-body\" style={{ display: 'flex', justifyContent: 'center' }}>\n                            <Loader />\n                          </div>\n\n                        </div>\n                      </div>\n                    </div>\n                  </section>\n                )\n              }\n              else {\n                return (\n                  <section className=\"content\">\n                    <div className=\"row\">\n                      {/* widget for the number of participants */}\n                      <WidgetNumberParticipants athleteList={this.state.atheleDisqualifiedList} />\n                      <WidgetNumberNacionalities giveup={true} athleteList={this.state.atheleDisqualifiedList} />\n\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col-xs-12\">\n                        <div className=\"box\">\n                          {/* /.box-body */}\n                          <div className=\"box box-primary\"></div>\n                          {this.CheckifThereisDatatoShowTableD()}\n                        </div>\n                      </div>\n                      {/* /.col */}\n                    </div>\n                    {/* /.row */}\n                  </section>\n                )\n              }\n            })()}\n\n          </div>\n          {/* /.content-wrapper */}\n        </div>\n        <Footer eventID={this.props.match.params.EventID} />\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\nimport { Link } from \"react-router-dom\";\nimport Favorites from \"../favorites/favoritesChecker\"\nimport { FormattedMessage } from 'react-intl';\nimport { calculatePagination } from \"../Scripts/PaginationHelper\"\nimport { minimalSize } from \"../Scripts/PaginationHelper\"\n\n\nvar size = window.innerWidth;\n\n\nexport default class TableSubscribers extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: this.props.loading\n    };\n  }\n\n  CheckSize() {\n    if (size > 800) {\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n\n  addFavorites() {\n    localStorage.setItem(\"ListaFavoritos\", this.props.ListaFavoritos)\n  }\n  render() {\n    //Info for the filters\n    //get the category\n    let category = this.props.athleteList.map(athelete => {\n      return athelete.category;\n    });\n    //remove duplicates\n    const Tableuniquecategory = [...new Set(category.sort())];\n    //get the nacionality\n    let nacionality = this.props.athleteList.map(athelete => {\n      return athelete.athlete.nacionality;\n    });\n    //remove duplicates\n    const Tableuniquenacionality = [...new Set(nacionality.sort())];\n    //get the Club\n    let club = this.props.athleteList.map(athelete => {\n      return athelete.club;\n    });\n    //remove duplicates\n    const Tableuniqueclub = [...new Set(club.sort())];\n    //get the inscription_status_code\n    let inscription_status_code = this.props.athleteList.map(athelete => {\n      return athelete.inscription_status_code;\n    });\n    //remove duplicates\n    const Tableuniqueinscription_status_code = [\n      ...new Set(inscription_status_code.sort())\n    ];\n    //Gender\n\n    let sexo = this.props.athleteList.map(athelete => {\n      return athelete.athlete.gender;\n    });\n    //remove duplicates\n    const Tableuniquesexo = [...new Set(sexo.sort())];\n\n\n    //Table\n    const columns = [\n      {\n        Header: \"Id\",\n        accessor: \"athlete.athlete_id\",\n        sortable: false,\n        style: {\n          textAlign: \"Center\"\n        },\n        width: 100,\n        maxWidth: 100,\n        mimWidth: 100,\n        show: false\n      },\n      {\n        Header: (size > 800) ? <FormattedMessage id=\"DORSAL\" /> : \"PTL\",\n        id: \"dorsal_number\",\n        accessor: d => Number(d.dorsal_number),\n        style: {\n          textAlign: \"Center\"\n        },\n        maxWidth: (size > 800) ? 100 : 60,\n        Filter: ({ filter, onChange }) => (\n          <FormattedMessage id=\"SEARCH\" >\n            {txt => <input\n              onChange={event => onChange(event.target.value)}\n              value={filter ? filter.value : \"\"}\n              placeholder={txt}\n              style={{\n                width: \"100%\",\n                textAlign: \"Center\"\n              }}\n            />}\n          </FormattedMessage>\n        ),\n        Cell: row => (\n\n          <Link\n            to={{ pathname: `/AthleteDetail/${this.props.eventID}/${this.props.competitionID}/${row.original.athlete.athlete_id}` }}\n          >\n            <span style={{ color: \"#3c8dbc\" }}>{row.value} </span>\n          </Link>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"NAME\" />,\n        id:\"NAME\",\n        accessor: row => `${row.athlete.ranking} ${row.athlete.rankingLast}`,\n        maxWidth: (size > 800) ? 380 : 140,\n        style: {\n          textAlign: \"center\"\n        },\n        Filter: ({ filter, onChange }) => (\n          <FormattedMessage id=\"SEARCH\" >\n          {txt => <input\n             onChange={event => onChange(event.target.value)}\n             value={filter ? filter.value : \"\"}\n             placeholder={txt}\n             style={{\n               width: \"100%\",\n               textAlign: \"Center\"\n             }}\n           />}\n           </FormattedMessage>),\n        filterMethod: (filter, row) =>\n        String(row._original.athlete.ranking.toLowerCase()).startsWith(filter.value) ||\n        String(row._original.athlete.rankingLast.toLowerCase()).startsWith(filter.value) ||\n        String(row._original.athlete.ranking.toUpperCase()).startsWith(filter.value) ||\n        String(row._original.athlete.rankingLast.toUpperCase()).startsWith(filter.value) ||\n        String(row._original.athlete.ranking).startsWith(filter.value) ||\n        String(row._original.athlete.rankingLast).startsWith(filter.value) ||\n        String(row._original.athlete.ranking+\" \"+row._original.athlete.rankingLast).startsWith(filter.value) ||\n        String(row._original.athlete.ranking.toUpperCase()+\" \"+row._original.athlete.rankingLast.toUpperCase()).startsWith(filter.value)||\n        String(row._original.athlete.ranking.toLowerCase()+\" \"+row._original.athlete.rankingLast.toLowerCase()).startsWith(filter.value), \n        Cell: row => (\n          <Link\n          to={{ pathname: `/AthleteDetail/${this.props.eventID}/${this.props.competitionID}/${row.original.athlete.athlete_id}` }}\n          >\n            <span style={{ color: \"#3c8dbc\" }}>{row.value} </span>\n          </Link>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"GENDER\" />,\n        accessor: \"athlete.gender\",\n        maxWidth: (size > 800) ? 150 : 60,\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => row.value,\n        filterMethod: (filter, row) => {\n          if (filter.value === \"\") {\n            return true;\n          }\n\n          if (Tableuniquesexo.includes(filter.value)) {\n            return row[filter.id] === filter.value;\n          } else {\n            return true;\n          }\n        },\n        Filter: ({ filter, onChange }) => (\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\", textAlignLast: \"center\" }}\n            value={filter ? filter.value : \"all\"}\n          >\n            <FormattedMessage id=\"ALL\">\n              {txt => <option value=\"all\">{txt}</option>}\n            </FormattedMessage>\n            {Tableuniquesexo.map(k => {\n              return (\n                <option key={k.toString()} value={k}>\n                  {k}\n                </option>\n              );\n            })}\n          </select>\n        )\n\n      },\n      {\n        Header: <FormattedMessage id=\"TEAM\" />,\n        show: this.CheckSize(),\n        maxWidth:400,\n        accessor: \"club\",\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => row.value,\n        filterMethod: (filter, row) => {\n          if (filter.value === \"\") {\n            return true;\n          }\n\n          if (Tableuniqueclub.includes(filter.value)) {\n            return row[filter.id] === filter.value;\n          } else {\n            return true;\n          }\n        },\n        Filter: ({ filter, onChange }) => (\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\", textAlignLast: \"center\" }}\n            value={filter ? filter.value : \"all\"}\n          >\n            <FormattedMessage id=\"ALL\">\n              {txt => <option value=\"all\">{txt}</option>}\n            </FormattedMessage>\n            {Tableuniqueclub.map(k => {\n              return (\n                <option key={k.toString()} value={k}>\n                  {k}\n                </option>\n              );\n            })}\n          </select>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"CATEGORY\" />,\n        maxWidth:150,\n        accessor: \"category\",\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => row.value,\n        filterMethod: (filter, row) => {\n          if (filter.value === \"\") {\n            return true;\n          }\n\n          if (Tableuniquecategory.includes(filter.value)) {\n            return row[filter.id] === filter.value;\n          } else {\n            return true;\n          }\n        },\n        Filter: ({ filter, onChange }) => (\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\", textAlignLast: \"center\" }}\n            value={filter ? filter.value : \"all\"}\n          >\n            <FormattedMessage id=\"ALL\">\n              {txt => <option value=\"all\">{txt}</option>}\n            </FormattedMessage>\n            {Tableuniquecategory.map(k => {\n              return (\n                <option key={k.toString()} value={k}>\n                  {k}\n                </option>\n              );\n            })}\n          </select>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"COUNTRY\" />,\n        show: this.CheckSize(),\n        maxWidth:200,\n        accessor: \"athlete.nacionality\",\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => row.value,\n        filterMethod: (filter, row) => {\n          if (filter.value === \"\") {\n            return true;\n          }\n\n          if (Tableuniquenacionality.includes(filter.value)) {\n            return row[filter.id] === filter.value;\n          } else {\n            return true;\n          }\n        },\n        Filter: ({ filter, onChange }) => (\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\", textAlignLast: \"center\" }}\n            value={filter ? filter.value : \"all\"}\n          >\n            <FormattedMessage id=\"ALL\">\n              {txt => <option value=\"all\">{txt}</option>}\n            </FormattedMessage>\n            {Tableuniquenacionality.map(k => {\n              return (\n                <option key={k.toString()} value={k}>\n                  {k}\n                </option>\n              );\n            })}\n          </select>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"STATUS\" />,\n        maxWidth:150,\n        accessor: \"inscription_status_code\",\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => {\n          if (row.value === \"I\") {\n            return <FormattedMessage id=\"I\" />;\n          } else if (row.value === \"CI\") {\n            return <FormattedMessage id=\"CI\" />;\n          } else if (row.value === \"AN\") {\n            return <FormattedMessage id=\"AN\" />;\n          } else if (row.value === \"D\") {\n            return <FormattedMessage id=\"D\" />;\n          } else if (row.value === \"PND\") {\n            return <FormattedMessage id=\"PND\" />;\n          } else if (row.value === \"DNS\") {\n            return <FormattedMessage id=\"DNS\" />;\n          } else if (row.value === \"EP\") {\n            return <FormattedMessage id=\"EP\" />;\n          } else if (row.value === \"DNF\") {\n            return <FormattedMessage id=\"DNF\" />;\n          } else if (row.value === \"DSQ\") {\n            return <FormattedMessage id=\"DSQ\" />;\n          } else if (row.value === \"EV\") {\n            return <FormattedMessage id=\"EV\" />;\n          } else if (row.value === \"FIN\") {\n            return <FormattedMessage id=\"FIN\" />;\n          } else if (row.value === \"GAP\") {\n            return <FormattedMessage id=\"GAP\" />;\n          } else { return \"\" }\n        },\n        filterMethod: (filter, row) => {\n          if (filter.value === \"\") {\n            return true;\n          }\n\n          if (Tableuniqueinscription_status_code.includes(filter.value)) {\n            return row[filter.id] === filter.value;\n          } else {\n            return true;\n          }\n        },\n        Filter: ({ filter, onChange }) => (\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\", textAlignLast: \"center\" }}\n            value={filter ? filter.value : \"all\"}\n          >\n            <FormattedMessage id=\"ALL\">\n              {txt => <option value=\"all\">{txt}</option>}\n            </FormattedMessage>\n            {Tableuniqueinscription_status_code.map(k => {\n              return (\n                <FormattedMessage id={k.toString()}>\n                  {txt => <option key={k.toString()} value={k}>{txt}</option>}\n                </FormattedMessage>\n              );\n            })}\n          </select>\n        )\n      },\n      {\n        Header: (size > 800) ? <FormattedMessage id=\"FAVORITE\" /> : \"FAV\",\n        filterable: false,\n        sortable: false,\n        maxWidth: (size > 800) ? 100 : 50,\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => (\n          <Favorites ListaFavoritos={row.original.athlete.athlete_id} />\n        )\n      }\n    ];\n    return (\n      <ReactTable\n        defaultSorted={[\n          {\n            id: \"dorsal_number\",\n            desc: false\n          }\n        ]}\n        previousText={<FormattedMessage id=\"PREVIOUS\" />}\n        nextText={<FormattedMessage id=\"NEXT\" />}\n        columns={columns}\n        data={this.props.athleteList}\n        filterable\n        noDataText={<FormattedMessage id=\"NODATA\" />}\n        defaultPageSize={minimalSize(this.props.athleteList.length, 20)}\n        pageSizeOptions={calculatePagination(this.props.athleteList.length, 20)}\n        showPagination={true}\n        showPaginationTop={false}\n        showPaginationBottom={true}\n        showPageSizeOptions={true}\n        showPageJump={true}\n        collapseOnSortingChange={true}\n        collapseOnPageChange={true}\n        collapseOnDataChange={true}\n        freezeWhenExpanded={false}\n        sortable={true}\n        multiSort={true}\n        resizable={true}\n        pageText={<FormattedMessage id=\"PAGE\" />}\n        defaultSortDesc={false}\n        rowsText={\"\"}\n        className=\"-striped -highlight\"\n\n      />\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Header from \"../structure/Header\";\nimport Footer from \"../structure/Footer\";\nimport Menu from \"../structure/Menu\";\nimport TableSubscribersCompetition from \"../Tables/TableParticipantsCompetition\";\nimport WidgetNumberParticipants from \"../Widgets/NumberParticipants\";\nimport WidgetNumberCategories from \"../Widgets/NumberCategories\";\nimport WidgetNumberteams from \"../Widgets/NumberTeams\";\nimport WidgetNumberNacionalities from \"../Widgets/NumberNationalities\";\nimport Loader from \"../Loader/Loader\";\nimport { FormattedMessage} from 'react-intl';\n\nconst API_KEY = `${process.env.REACT_APP_API_TRAIL_KEY}`;\nconst API_URL = `${process.env.REACT_APP_API_TRAIL_URL}`;\nconst TOKEN = API_KEY;\n\nexport default class EventSubscribers extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      athleteList: [],\n      loading: false,\n    };\n  }\n  componentWillMount() {\n    try {\n      if (localStorage.getItem(`athleteList${this.props.match.params.EventID}${this.props.match.params.CompID}`)) {\n        const athList = JSON.parse(localStorage.getItem(`athleteList${this.props.match.params.EventID}${this.props.match.params.CompID}`))\n        this.setState({ athleteList: athList, loading: true })\n      }\n    }\n    catch{\n      localStorage.clear();\n\n    }\n    this.getAthletsList = this.getAthletsList.bind(this);\n    this.getAthletsList();\n\n  }\n  /*when props change*/\n  componentDidUpdate(prevProps) {\n    if (prevProps.match.params.CompID !== this.props.match.params.CompID) {\n      this.setState({ loading: false });\n      try {\n        if (localStorage.getItem(`athleteList${this.props.match.params.EventID}${this.props.match.params.CompID}`)) {\n          const athList = JSON.parse(localStorage.getItem(`athleteList${this.props.match.params.EventID}${this.props.match.params.CompID}`))\n          this.setState({ athleteList: athList, loading: true })\n        }\n      }\n      catch{\n        localStorage.clear();\n\n      }\n      this.getAthletsList();\n    }\n  }\n  /*get list of athlets*/\n  getAthletsList = async e => {\n\n    const API_CALL = await fetch(`${API_URL}/competition/AthsList/${this.props.match.params.CompID}/`, {\n      headers: new Headers({\n        Authorization: TOKEN\n      })\n    });\n    const data = await API_CALL.json();\n    try {\n      localStorage.setItem(`athleteList${this.props.match.params.EventID}${this.props.match.params.CompID}`, JSON.stringify(data))\n    }\n    catch{\n      localStorage.clear();\n\n    }\n    this.setState({ athleteList: data, loading: true });\n\n  };\n  CheckifThereisDatatoShowTable(){\n    \n    if(this.state.athleteList.length >0){\n      return(    \n        <TableSubscribersCompetition\n        eventID={this.props.match.params.EventID}\n        competitionID={this.props.match.params.CompID}\n        athleteList={this.state.athleteList}\n        loading={this.state.loading}\n      />\n        )\n    }else\n    return(\n      <div class=\"box-body\" style={{textAlign:\"center\"}}>\n        <FormattedMessage id=\"NOTABLEDATA\"/>\n      </div>)\n\n  }\n\n  render() {\n    return (\n      <div>\n        <Header eventID={this.props.match.params.EventID} />\n        <Menu eventID={this.props.match.params.EventID} competitionID={this.props.match.params.CompID} />\n        {/*Send the event id to the MENU, to get the competition list*/}\n        {/*CONTENT*/}\n        <div>\n          {/* Content Wrapper. Contains page content */}\n          <div className=\"content-wrapper\">\n            {/* Content Header (Page header) */}\n            <section className=\"content-header\">\n              <h1>\n                <span>{this.props.match.params.CompName}</span>\n              </h1>\n            </section>\n            {/* Main content */}\n            {/*Check if data is loading*/}\n            {(() => {\n              if (this.state.loading === false) {\n                return (\n                  <section className=\"content\">\n                    <div className=\"row\">\n                      <div className=\"col-xs-12\">\n                        <div className=\"box\">\n                          {/* /.box-body */}\n                          <div className=\"box-body\" style={{ display: 'flex', justifyContent: 'center' }}>\n                            <Loader />\n                          </div>\n\n                        </div>\n                      </div>\n                    </div>\n                  </section>\n                )\n              }\n              else {\n                return (\n                  <section className=\"content\">\n                    <div className=\"row\">\n                      {/* widget for the number of participants */}\n                      <WidgetNumberParticipants athleteList={this.state.athleteList} />\n                      {/* widget for the number of Teams */}\n                      <WidgetNumberteams athleteList={this.state.athleteList} />\n                      {/* widget for the number of Categories */}\n                      <WidgetNumberCategories athleteList={this.state.athleteList} />\n                      {/* widget for the number of Nacionalities */}\n                      <WidgetNumberNacionalities athleteList={this.state.athleteList} />\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col-xs-12\">\n                        <div className=\"box\">\n                          {/* /.box-body */}\n                          <div className=\"box box-primary\"></div>\n                            {this.CheckifThereisDatatoShowTable()}\n                        </div>\n                      </div>\n                      {/* /.col */}\n                    </div>\n                    {/* /.row */}\n                  </section>\n                )\n              }\n            })()}\n          </div>\n          {/* /.content-wrapper */}\n        </div>\n        <Footer eventID={this.props.match.params.EventID} />\n      </div>\n    );\n  }\n}\n","export function FormatTime(time) {\n    var TimeSplit = time.split(\":\")\n    var H = TimeSplit[0]\n    var M = TimeSplit[1]\n    var S = TimeSplit[2]\n    if (H.length === 1) {\n        H = \"0\" + H\n    }\n    if (M.length === 1) {\n        M = \"0\" + M\n    }\n    if (S.length === 1) {\n        S = \"0\" + S\n    }\n    return (H + \":\" + M + \":\" + S)\n}\n","import React, { Component } from \"react\";\nimport ReactTable from \"react-table\";\nimport { Link } from \"react-router-dom\";\nimport Favorites from \"../favorites/favoritesChecker\"\nimport { FormatTime } from \"../Scripts/time\"\nimport { FormattedMessage } from 'react-intl';\nimport { calculatePagination } from \"../Scripts/PaginationHelper\"\nimport { minimalSize } from \"../Scripts/PaginationHelper\"\n\n\nvar size = window.innerWidth;\n\nexport default class TableCheckpoints extends Component {\n\n  CheckSize() {\n    if (size > 800) {\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n\n  checkPosition(position) {\n    if (0 === parseInt(position)) {\n      return (\"-\")\n    }\n    else {\n      return (position)\n\n    }\n  }\n\n  render() {\n    //Info for the filters\n    //get the category\n    let category = this.props.athleteList.map(athelete => {\n      return athelete.escalao;\n    });\n    //remove duplicates\n    const Tableuniquecategory = [...new Set(category.sort())];\n    //get the nacionality\n    let nacionality = this.props.athleteList.map(athelete => {\n      return athelete.country;\n    });\n    //remove duplicates\n    const Tableuniquenacionality = [...new Set(nacionality.sort())];\n\n    //get the Club\n    let club = this.props.athleteList.map(athelete => {\n      return athelete.club;\n    });\n    //remove duplicates\n    const Tableuniqueclub = [...new Set(club.sort())];\n\n    //Gender\n\n    let sexo = this.props.athleteList.map(athelete => {\n      return athelete.sexo;\n    });\n    //remove duplicates\n    const Tableuniquesexo = [...new Set(sexo.sort())];\n\n\n\n    //Table\n\n    const columns = [\n      {\n        Header: \"Id\",\n        accessor: \"athlete_id\",\n        sortable: false,\n        style: {\n          textAlign: \"Center\"\n        },\n        maxWidth: 100,\n        show: false\n      },\n      {\n        Header:  <FormattedMessage id=\"GERAL\" /> ,\n        accessor: \"PositionGlobal\",\n        id: \"PositionGlobal\",\n\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => (\n          <span> {this.checkPosition(row.value)} </span>\n        ),\n        maxWidth: (size > 800) ? 80 : 60,\n        Filter: ({ filter, onChange }) => (\n          <FormattedMessage id=\"SEARCH\" >\n            {txt => <input\n              onChange={event => onChange(event.target.value)}\n              value={filter ? filter.value : \"\"}\n              placeholder={txt}\n              style={{\n                width: \"100%\",\n                textAlign: \"Center\"\n              }}\n            />}\n          </FormattedMessage>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"FILTER\" />,\n        style: {\n          textAlign: \"Center\"\n        },\n        filterable: false,\n        sortable: false,\n        Cell: row => (\n          <span> {this.checkPosition(row.viewIndex+1)} </span>\n        ),\n        maxWidth: (size > 800) ? 80 : 45,\n      },\n      {\n        Header:  <FormattedMessage id=\"DORSAL\" /> ,\n        id: \"peitoral\",\n        accessor: d => Number(d.peitoral),\n        style: {\n          textAlign: \"Center\"\n        },\n        maxWidth: (size > 800) ? 80 : 60,\n        Filter: ({ filter, onChange }) => (\n          <FormattedMessage id=\"SEARCH\" >\n            {txt => <input\n              onChange={event => onChange(event.target.value)}\n              value={filter ? filter.value : \"\"}\n              placeholder={txt}\n              style={{\n                width: \"100%\",\n                textAlign: \"Center\"\n              }}\n            />}\n          </FormattedMessage>\n        ),\n        Cell: row => (\n          <Link\n            to={{ pathname: `/AthleteDetail/${this.props.eventID}/${this.props.competitionID}/${row.original.athlete_id}` }}\n          >\n            <span style={{ color: \"#3c8dbc\" }}>{row.value} </span>\n          </Link>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"NAME\" />,\n        id:\"NAME\",\n        accessor: row => `${row.ranking} ${row.rankingLast}`,\n        maxWidth: (size > 800) ? 300 : 130,\n        style: {\n          textAlign: \"center\"\n        },\n        Filter: ({ filter, onChange }) => (\n          <FormattedMessage id=\"SEARCH\" >\n          {txt => <input\n             onChange={event => onChange(event.target.value)}\n             value={filter ? filter.value : \"\"}\n             placeholder={txt}\n             style={{\n               width: \"100%\",\n               textAlign: \"Center\"\n             }}\n           />}\n           </FormattedMessage>),\n        filterMethod: (filter, row) =>\n        String(row._original.ranking.toLowerCase()).startsWith(filter.value) ||\n        String(row._original.rankingLast.toLowerCase()).startsWith(filter.value) ||\n        String(row._original.ranking.toUpperCase()).startsWith(filter.value) ||\n        String(row._original.rankingLast.toUpperCase()).startsWith(filter.value) ||\n        String(row._original.ranking).startsWith(filter.value) ||\n        String(row._original.rankingLast).startsWith(filter.value) ||\n        String(row._original.ranking+\" \"+row._original.rankingLast).startsWith(filter.value) ||\n        String(row._original.ranking.toUpperCase()+\" \"+row._original.rankingLast.toUpperCase()).startsWith(filter.value)||\n        String(row._original.ranking.toLowerCase()+\" \"+row._original.rankingLast.toLowerCase()).startsWith(filter.value),      \n        Cell: row => (\n          <Link\n          to={{ pathname: `/AthleteDetail/${this.props.eventID}/${this.props.competitionID}/${row.original.athlete_id}` }}\n          >\n            <span style={{ color: \"#3c8dbc\" }}>{row.value} </span>\n          </Link>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"GENDER\" />,\n        accessor: \"sexo\",\n        maxWidth: (size > 800) ? 90 : 60,\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => row.value,\n        filterMethod: (filter, row) => {\n          if (filter.value === \"\") {\n            return true;\n          }\n\n          if (Tableuniquesexo.includes(filter.value)) {\n            return row[filter.id] === filter.value;\n          } else {\n            return true;\n          }\n        },\n        Filter: ({ filter, onChange }) => (\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\", textAlignLast: \"center\" }}\n            value={filter ? filter.value : \"all\"}\n          >\n            <FormattedMessage id=\"ALL\">\n              {txt => <option value=\"all\">{txt}</option>}\n            </FormattedMessage>\n            {Tableuniquesexo.map(k => {\n              return (\n                <option key={k.toString()} value={k}>\n                  {k}\n                </option>\n              );\n            })}\n          </select>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"TEAM\" />,\n        accessor: \"club\",\n        maxWidth: (size > 800) ? 400 : 200,\n        show: this.CheckSize(),\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => row.value,\n        filterMethod: (filter, row) => {\n          if (filter.value === \"\") {\n            return true;\n          }\n\n          if (Tableuniqueclub.includes(filter.value)) {\n            return row[filter.id] === filter.value;\n          } else {\n            return true;\n          }\n        },\n        Filter: ({ filter, onChange }) => (\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\", textAlignLast: \"center\" }}\n            value={filter ? filter.value : \"all\"}\n          >\n            <FormattedMessage id=\"ALL\">\n              {txt => <option value=\"all\">{txt}</option>}\n            </FormattedMessage>\n            {Tableuniqueclub.map(k => {\n              return (\n                <option key={k.toString()} value={k}>\n                  {k}\n                </option>\n              );\n            })}\n          </select>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"CATEGORY\" />,\n        accessor: \"escalao\",\n        maxWidth: (size > 800) ? 200 : 60,\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => row.value,\n        filterMethod: (filter, row) => {\n          if (filter.value === \"\") {\n            return true;\n          }\n\n          if (Tableuniquecategory.includes(filter.value)) {\n            return row[filter.id] === filter.value;\n          } else {\n            return true;\n          }\n        },\n        Filter: ({ filter, onChange }) => (\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\", textAlignLast: \"center\" }}\n            value={filter ? filter.value : \"all\"}\n          >\n            <FormattedMessage id=\"ALL\">\n              {txt => <option value=\"all\">{txt}</option>}\n            </FormattedMessage>\n            {Tableuniquecategory.map(k => {\n              return (\n                <option key={k.toString()} value={k}>\n                  {k}\n                </option>\n              );\n            })}\n          </select>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"COUNTRY\" />,\n        accessor: \"country\",\n        maxWidth: (size > 800) ? 200 : 100,\n        style: {\n          textAlign: \"Center\"\n        },\n        show: this.CheckSize(),\n        Cell: row => row.value,\n        filterMethod: (filter, row) => {\n          if (filter.value === \"\") {\n            return true;\n          }\n\n          if (Tableuniquenacionality.includes(filter.value)) {\n            return row[filter.id] === filter.value;\n          } else {\n            return true;\n          }\n        },\n        Filter: ({ filter, onChange }) => (\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\", textAlignLast: \"center\" }}\n            value={filter ? filter.value : \"all\"}\n          >\n            <FormattedMessage id=\"ALL\">\n              {txt => <option value=\"all\">{txt}</option>}\n            </FormattedMessage>\n            {Tableuniquenacionality.map(k => {\n              return (\n                <option key={k.toString()} value={k}>\n                  {k}\n                </option>\n              );\n            })}\n          </select>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"TIME\" />,\n        accessor: \"acumulated_time\",\n        filterable: false,\n        sortable: false,\n        maxWidth: (size > 800) ? 80 : 65,\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => FormatTime(row.value)\n\n      },\n      {\n        Header: (size > 800) ? \"Dif 1º\" : \"Dif 1º\",\n        accessor: \"dif\",\n        filterable: false,\n        sortable: false,\n        maxWidth: (size > 800) ? 80 : 65,\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => FormatTime(row.value)\n      },\n      {\n        Header: (size > 800) ? <FormattedMessage id=\"FAVORITE\" /> : \"FAV\",\n        filterable: false,\n        sortable: false,\n        maxWidth: (size > 800) ? 80 : 55,\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => (\n          <Favorites ListaFavoritos={row.original.athlete_id} />\n\n        )\n      }\n    ];\n    return (\n      <ReactTable\n      defaultSorted={[\n        {\n          id: 'PositionGlobal',\n          desc: false\n        },\n        {\n          id: 'peitoral',\n          desc: false\n        },\n      ]}\n        previousText={<FormattedMessage id=\"PREVIOUS\" />}\n        nextText={<FormattedMessage id=\"NEXT\" />}\n        columns={columns}\n        data={this.props.athleteList.sort()}\n        filterable\n        noDataText={<FormattedMessage id=\"NODATA\" />}\n        defaultPageSize={minimalSize(this.props.athleteList.length, 20)}\n        pageSizeOptions={calculatePagination(this.props.athleteList.length, 20)}\n        showPagination={true}\n        showPaginationTop={false}\n        showPaginationBottom={true}\n        showPageSizeOptions={true}\n        showPageJump={true}\n        collapseOnSortingChange={true}\n        collapseOnPageChange={true}\n        collapseOnDataChange={true}\n        freezeWhenExpanded={false}\n        sortable={true}\n        multiSort={true}\n        resizable={true}\n        pageText={<FormattedMessage id=\"PAGE\" />}\n        rowsText={\"\"}\n        className=\"-striped -highlight\"\n      />\n    );\n  }\n}\n","import React, { Component } from 'react'\nimport { Line } from 'react-chartjs-2';\nimport { FormattedMessage } from 'react-intl';\n\nvar data;\n\nexport default class Velocity extends Component {\n\n  chartDataVerification() {\n\n    if (!!(this.props.Faster) && !!(this.props.Normal)) {\n      return (<Line data={data} />)\n\n    }\n    else {\n      return (<p><FormattedMessage id=\"NODATA\" /></p>)\n\n\n    }\n  }\n\n\n\n\n  render() {\n    if (!!(this.props.Normal) && !!(this.props.Faster)) {\n      var position = []\n      this.props.checkpoint.map(data => { position.push(data.local) })\n      data = {\n        labels: (position.length > 2) ? position.slice(1) : position.Normal,\n        datasets: [\n          {\n            label: this.props.Name,\n            fill: false,\n            lineTension: 0.1,\n            backgroundColor: '#00c0ef',\n            borderColor: '#00c0ef',\n            borderCapStyle: 'butt',\n            borderDash: [],\n            borderDashOffset: 0.0,\n            borderJoinStyle: 'miter',\n            pointBorderColor: 'black',\n            pointBackgroundColor: '#00c0ef',\n            pointBorderWidth: 1,\n            borderWidth: 5,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: '#00c0ef',\n            pointHoverBorderColor: '#00c0ef',\n            pointHoverBorderWidth: 2,\n            pointRadius: 1,\n            pointHitRadius: 10,\n            data: (this.props.Normal.length > 2) ? this.props.Normal.slice(1) : this.props.Normal\n          },\n          {\n            label: this.props.LanguageFaster,\n            fill: false,\n            lineTension: 0.1,\n            backgroundColor: '#dd4b39',\n            borderColor: '#dd4b39',\n            borderCapStyle: 'butt',\n            borderDash: [],\n            borderDashOffset: 0.0,\n            borderJoinStyle: 'miter',\n            pointBorderColor: 'r#dd4b39',\n            pointBackgroundColor: '#dd4b39',\n            pointBorderWidth: 1,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: '#dd4b39',\n            pointHoverBorderColor: '#dd4b39',\n            pointHoverBorderWidth: 2,\n            pointRadius: 1,\n            pointHitRadius: 10,\n            data: (this.props.Faster.length > 2) ? this.props.Faster.slice(1) : this.props.Faster\n          },\n          {\n            label: this.props.LanguageAverage,\n            fill: false,\n            lineTension: 0.1,\n            backgroundColor: 'rgb(63, 81, 181)',\n            borderColor: 'rgb(63, 81, 181)',\n            borderCapStyle: 'butt',\n            borderDash: [],\n            borderDashOffset: 0.0,\n            borderJoinStyle: 'miter',\n            pointBorderColor: 'rgb(63, 81, 181)',\n            pointBackgroundColor: 'rgb(63, 81, 181)',\n            pointBorderWidth: 1,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: 'rgb(63, 81, 181)',\n            pointHoverBorderColor: 'rgb(63, 81, 181)',\n            pointHoverBorderWidth: 2,\n            pointRadius: 1,\n            pointHitRadius: 10,\n            data: (this.props.Average.length > 2) ? this.props.Average.slice(1) : this.props.Average\n          },\n          {\n            label: this.props.LanguageSlow,\n            fill: false,\n            lineTension: 0.1,\n            backgroundColor: '#009688',\n            borderColor: '#009688',\n            borderCapStyle: 'butt',\n            borderDash: [],\n            borderDashOffset: 0.0,\n            borderJoinStyle: 'miter',\n            pointBorderColor: '#009688',\n            pointBackgroundColor: '#009688',\n            pointBorderWidth: 1,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: '#009688',\n            pointHoverBorderColor: '#009688',\n            pointHoverBorderWidth: 2,\n            pointRadius: 1,\n            pointHitRadius: 10,\n            data: (this.props.Slow.length > 2) ? this.props.Slow.slice(1) : this.props.Slow\n          },\n\n        ]\n\n      };\n\n    }\n\n\n\n    return (\n\n        this.chartDataVerification()\n\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { Line } from 'react-chartjs-2';\nimport { FormattedMessage} from 'react-intl';\n\nvar data;\n\nexport default class Position extends Component {\n\n    chartDataVerification() {\n\n        if (!!(this.props.Global) && !!(this.props.Tier) && !!(this.props.Gender)) {\n            return (<Line\n                data={data}\n\n                options={{\n                    legend: {\n                        display: true\n                    },\n                    scales: {\n                        yAxes: [{\n                            ticks: {\n                                max: this.props.maxY,\n                                min: 0,\n                                stepSize: 1\n                            }\n                        }]\n                    },\n                }} />)\n\n        }\n        else {\n            return (<p><FormattedMessage id=\"NODATA\" /></p>)\n\n\n        }\n    }\n\n    render() {\n        var position = []\n        this.props.checkpoint.map(data => { position.push(data.local) })\n        if (!!(this.props.Global) && !!(this.props.Tier) && !!(this.props.Gender)) {\n            data = {\n                labels: (position.length > 2) ? position.slice(1) : position,\n                datasets: [\n                    {\n                        label: this.props.LANGUAGEGERAL,\n                        fill: false,\n                        lineTension: 0.1,\n                        backgroundColor: '#455A64',\n                        borderColor: '#455A64',\n                        borderCapStyle: 'butt',\n                        borderDash: [],\n                        borderDashOffset: 0.0,\n                        borderJoinStyle: 'miter',\n                        pointBorderColor: '#455A64',\n                        pointBackgroundColor: '#455A64',\n                        pointBorderWidth: 1,\n                        pointHoverRadius: 5,\n                        pointHoverBackgroundColor: '#455A64',\n                        pointHoverBorderColor: '#455A64',\n                        pointHoverBorderWidth: 2,\n                        pointRadius: 1,\n                        pointHitRadius: 10,\n                        data: (this.props.Global.length > 2) ? this.props.Global.slice(1) : this.props.Global\n                    },\n                    {\n                        label:  this.props.LANGUAGEGENDER,\n                        fill: false,\n                        lineTension: 0.1,\n                        backgroundColor: 'rgba(75,192,192,0.4)',\n                        borderColor: 'rgba(75,192,192,1)',\n                        borderCapStyle: 'butt',\n                        borderDash: [],\n                        borderDashOffset: 0.0,\n                        borderJoinStyle: 'miter',\n                        pointBorderColor: 'rgba(75,192,192,1)',\n                        pointBackgroundColor: 'rgba(75,192,192,1)',\n                        pointBorderWidth: 1,\n                        pointHoverRadius: 5,\n                        pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n                        pointHoverBorderColor: 'rgba(220,220,220,1)',\n                        pointHoverBorderWidth: 2,\n                        pointRadius: 1,\n                        pointHitRadius: 10,\n                        data: (this.props.Gender.length > 2) ? this.props.Gender.slice(1) : this.props.Gender\n                    },\n                    {\n                        label:  this.props.LANGUAGECATEGORY,\n                        fill: false,\n                        lineTension: 0.1,\n                        backgroundColor: '#9CCC65',\n                        borderColor: '#9CCC65',\n                        borderCapStyle: 'butt',\n                        borderDash: [],\n                        borderDashOffset: 0.0,\n                        borderJoinStyle: 'miter',\n                        pointBorderColor: '#9CCC65',\n                        pointBackgroundColor: '#9CCC65',\n                        pointBorderWidth: 1,\n                        pointHoverRadius: 5,\n                        pointHoverBackgroundColor: '#9CCC65',\n                        pointHoverBorderColor: '#9CCC65',\n                        pointHoverBorderWidth: 2,\n                        pointRadius: 1,\n                        pointHitRadius: 10,\n                        data: (this.props.Tier.length > 2) ? this.props.Tier.slice(1) : this.props.Tier\n                    }\n\n                ]\n\n            };\n\n\n        }\n\n\n\n        return (\n            this.chartDataVerification()\n\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Bar } from 'react-chartjs-2';\n\nvar options;\nvar data;\n\nexport default class bar extends Component {\n\n\n    render() {\n        if (this.props.ISThree === true) {\n            data = {\n                labels: this.props.data.map(items => { return (items.Label) }),\n                datasets: [\n                    {\n                        label: this.props.Inscription,\n                        fill: false,\n                        lineTension: 0.1,\n                        backgroundColor: [\"#EF9A9A\", \"#B0BEC5\", \"#F48FB1\", \"#B39DDB\", \"#BCAAA4\", \"#9FA8DA\", \"#FFAB91\", \"#90CAF9\", \"#FFCC80\", \"#C5E1A5\", \"#81D4FA\", \"#FFF59D\", \"#FFE082\", \"#80CBC4\", \"#E6EE9C\", \"#80DEEA\",\n                        \"#C62828\", \"#37474F\", \"#AD1457\", \"#424242\", \"#6A1B9A\", \"#4E342E\", \"#4527A0\", \"#D84315\", \"#283593\", \"#1565C0\", \"#EF6C00\", \"#0277BD\", \"#FF8F00\", \"#00838F\", \"#F9A825\", \"#00695C\", \"#9E9D24\",\n                        \"#2E7D32\", \"#558B2F\", \"#F44336\", \"#607D8B\", \"#E91E63\", \"#795548\", \"#9C27B0\", \"#795548\", \"#673AB7\", \"#FF5722\", \"#FF9800\", \"#2196F3\", \"#FF9800\", \"#03A9F4\", \"#FFC107\", \"#00BCD4\", \"#FFEB3B\", \"#009688\",\n                        \"#4CAF50\",\"#CDDC39\",\"#009688\",\"#00BCD4\",\"#CDDC39\",\"#EF9A9A\", \"#B0BEC5\", \"#F48FB1\", \"#EEEEEE\", \"#B39DDB\", \"#BCAAA4\", \"#9FA8DA\", \"#FFAB91\", \"#90CAF9\", \"#FFCC80\", \"#C5E1A5\", \"#81D4FA\", \"#FFF59D\", \"#FFE082\", \"#80CBC4\", \"#E6EE9C\", \"#80DEEA\",\n                        \"#C62828\", \"#37474F\", \"#AD1457\", \"#424242\", \"#6A1B9A\", \"#4E342E\", \"#4527A0\", \"#D84315\", \"#283593\", \"#1565C0\", \"#EF6C00\", \"#0277BD\", \"#FF8F00\", \"#00838F\", \"#F9A825\", \"#00695C\", \"#9E9D24\",\n                        \"#2E7D32\", \"#558B2F\", \"#F44336\", \"#607D8B\", \"#E91E63\", \"#795548\", \"#9C27B0\", \"#795548\", \"#673AB7\", \"#FF5722\", \"#FF9800\", \"#2196F3\", \"#FF9800\", \"#03A9F4\", \"#FFC107\", \"#00BCD4\", \"#FFEB3B\", \"#009688\",\n                        \"#4CAF50\",\"#CDDC39\",\"#009688\",\"#00BCD4\",\"#CDDC39\"],\n                        pointBorderColor: '#455A64',\n                        pointBackgroundColor: '#455A64',\n                        pointBorderWidth: 1,\n                        pointHoverRadius: 5,\n                        pointHoverBackgroundColor: '#455A64',\n                        pointHoverBorderColor: '#455A64',\n                        pointHoverBorderWidth: 2,\n                        pointRadius: 1,\n                        pointHitRadius: 10,\n                        data: this.props.data.map(items => { return (items.Value) })\n                    },\n                    {\n                        label: this.props.Start,\n                        fill: false,\n                        lineTension: 0.1,\n                        backgroundColor:[\"#EF9A9A\", \"#B0BEC5\", \"#F48FB1\", \"#B39DDB\", \"#BCAAA4\", \"#9FA8DA\", \"#FFAB91\", \"#90CAF9\", \"#FFCC80\", \"#C5E1A5\", \"#81D4FA\", \"#FFF59D\", \"#FFE082\", \"#80CBC4\", \"#E6EE9C\", \"#80DEEA\",\n                        \"#C62828\", \"#37474F\", \"#AD1457\", \"#424242\", \"#6A1B9A\", \"#4E342E\", \"#4527A0\", \"#D84315\", \"#283593\", \"#1565C0\", \"#EF6C00\", \"#0277BD\", \"#FF8F00\", \"#00838F\", \"#F9A825\", \"#00695C\", \"#9E9D24\",\n                        \"#2E7D32\", \"#558B2F\", \"#F44336\", \"#607D8B\", \"#E91E63\", \"#795548\", \"#9C27B0\", \"#795548\", \"#673AB7\", \"#FF5722\", \"#FF9800\", \"#2196F3\", \"#FF9800\", \"#03A9F4\", \"#FFC107\", \"#00BCD4\", \"#FFEB3B\", \"#009688\",\n                        \"#4CAF50\",\"#CDDC39\",\"#009688\",\"#00BCD4\",\"#CDDC39\",\"#EF9A9A\", \"#B0BEC5\", \"#F48FB1\", \"#EEEEEE\", \"#B39DDB\", \"#BCAAA4\", \"#9FA8DA\", \"#FFAB91\", \"#90CAF9\", \"#FFCC80\", \"#C5E1A5\", \"#81D4FA\", \"#FFF59D\", \"#FFE082\", \"#80CBC4\", \"#E6EE9C\", \"#80DEEA\",\n                        \"#C62828\", \"#37474F\", \"#AD1457\", \"#424242\", \"#6A1B9A\", \"#4E342E\", \"#4527A0\", \"#D84315\", \"#283593\", \"#1565C0\", \"#EF6C00\", \"#0277BD\", \"#FF8F00\", \"#00838F\", \"#F9A825\", \"#00695C\", \"#9E9D24\",\n                        \"#2E7D32\", \"#558B2F\", \"#F44336\", \"#607D8B\", \"#E91E63\", \"#795548\", \"#9C27B0\", \"#795548\", \"#673AB7\", \"#FF5722\", \"#FF9800\", \"#2196F3\", \"#FF9800\", \"#03A9F4\", \"#FFC107\", \"#00BCD4\", \"#FFEB3B\", \"#009688\",\n                        \"#4CAF50\",\"#CDDC39\",\"#009688\",\"#00BCD4\",\"#CDDC39\"],\n                        pointBackgroundColor: '#455A64',\n                        pointBorderWidth: 1,\n                        pointHoverRadius: 5,\n                        pointHoverBackgroundColor: '#455A64',\n                        pointHoverBorderColor: '#455A64',\n                        pointHoverBorderWidth: 2,\n                        pointRadius: 1,\n                        pointHitRadius: 10,\n                        data: this.props.dataStart.map(items => { return (items.Value) })\n                    },\n                    {\n                        label: this.props.Arrivals,\n                        fill: false,\n                        lineTension: 0.1,\n                        backgroundColor: [\"#EF9A9A\", \"#B0BEC5\", \"#F48FB1\", \"#B39DDB\", \"#BCAAA4\", \"#9FA8DA\", \"#FFAB91\", \"#90CAF9\", \"#FFCC80\", \"#C5E1A5\", \"#81D4FA\", \"#FFF59D\", \"#FFE082\", \"#80CBC4\", \"#E6EE9C\", \"#80DEEA\",\n                        \"#C62828\", \"#37474F\", \"#AD1457\", \"#424242\", \"#6A1B9A\", \"#4E342E\", \"#4527A0\", \"#D84315\", \"#283593\", \"#1565C0\", \"#EF6C00\", \"#0277BD\", \"#FF8F00\", \"#00838F\", \"#F9A825\", \"#00695C\", \"#9E9D24\",\n                        \"#2E7D32\", \"#558B2F\", \"#F44336\", \"#607D8B\", \"#E91E63\", \"#795548\", \"#9C27B0\", \"#795548\", \"#673AB7\", \"#FF5722\", \"#FF9800\", \"#2196F3\", \"#FF9800\", \"#03A9F4\", \"#FFC107\", \"#00BCD4\", \"#FFEB3B\", \"#009688\",\n                        \"#4CAF50\",\"#CDDC39\",\"#009688\",\"#00BCD4\",\"#CDDC39\",\"#EF9A9A\", \"#B0BEC5\", \"#F48FB1\", \"#EEEEEE\", \"#B39DDB\", \"#BCAAA4\", \"#9FA8DA\", \"#FFAB91\", \"#90CAF9\", \"#FFCC80\", \"#C5E1A5\", \"#81D4FA\", \"#FFF59D\", \"#FFE082\", \"#80CBC4\", \"#E6EE9C\", \"#80DEEA\",\n                        \"#C62828\", \"#37474F\", \"#AD1457\", \"#424242\", \"#6A1B9A\", \"#4E342E\", \"#4527A0\", \"#D84315\", \"#283593\", \"#1565C0\", \"#EF6C00\", \"#0277BD\", \"#FF8F00\", \"#00838F\", \"#F9A825\", \"#00695C\", \"#9E9D24\",\n                        \"#2E7D32\", \"#558B2F\", \"#F44336\", \"#607D8B\", \"#E91E63\", \"#795548\", \"#9C27B0\", \"#795548\", \"#673AB7\", \"#FF5722\", \"#FF9800\", \"#2196F3\", \"#FF9800\", \"#03A9F4\", \"#FFC107\", \"#00BCD4\", \"#FFEB3B\", \"#009688\",\n                        \"#4CAF50\",\"#CDDC39\",\"#009688\",\"#00BCD4\",\"#CDDC39\"],\n                        pointBorderColor: '#455A64',\n                        pointBackgroundColor: '#455A64',\n                        pointBorderWidth: 1,\n                        pointHoverRadius: 5,\n                        pointHoverBackgroundColor: '#455A64',\n                        pointHoverBorderColor: '#455A64',\n                        pointHoverBorderWidth: 2,\n                        pointRadius: 1,\n                        pointHitRadius: 10,\n                        data: this.props.dataLast.map(items => { return (items.Value) })\n                    }\n                ]\n\n            }\n        }\n        else {\n            data = {\n                labels: this.props.data.map(items => { return (items.Label) }),\n                datasets: [\n                    {\n                        label: this.props.Inscription,\n                        fill: false,\n                        lineTension: 0.1,\n                        backgroundColor:[\"#EF9A9A\", \"#B0BEC5\", \"#F48FB1\", \"#B39DDB\", \"#BCAAA4\", \"#9FA8DA\", \"#FFAB91\", \"#90CAF9\", \"#FFCC80\", \"#C5E1A5\", \"#81D4FA\", \"#FFF59D\", \"#FFE082\", \"#80CBC4\", \"#E6EE9C\", \"#80DEEA\",\n                        \"#C62828\", \"#37474F\", \"#AD1457\", \"#424242\", \"#6A1B9A\", \"#4E342E\", \"#4527A0\", \"#D84315\", \"#283593\", \"#1565C0\", \"#EF6C00\", \"#0277BD\", \"#FF8F00\", \"#00838F\", \"#F9A825\", \"#00695C\", \"#9E9D24\",\n                        \"#2E7D32\", \"#558B2F\", \"#F44336\", \"#607D8B\", \"#E91E63\", \"#795548\", \"#9C27B0\", \"#795548\", \"#673AB7\", \"#FF5722\", \"#FF9800\", \"#2196F3\", \"#FF9800\", \"#03A9F4\", \"#FFC107\", \"#00BCD4\", \"#FFEB3B\", \"#009688\",\n                        \"#4CAF50\",\"#CDDC39\",\"#009688\",\"#00BCD4\",\"#CDDC39\",\"#EF9A9A\", \"#B0BEC5\", \"#F48FB1\", \"#EEEEEE\", \"#B39DDB\", \"#BCAAA4\", \"#9FA8DA\", \"#FFAB91\", \"#90CAF9\", \"#FFCC80\", \"#C5E1A5\", \"#81D4FA\", \"#FFF59D\", \"#FFE082\", \"#80CBC4\", \"#E6EE9C\", \"#80DEEA\",\n                        \"#C62828\", \"#37474F\", \"#AD1457\", \"#424242\", \"#6A1B9A\", \"#4E342E\", \"#4527A0\", \"#D84315\", \"#283593\", \"#1565C0\", \"#EF6C00\", \"#0277BD\", \"#FF8F00\", \"#00838F\", \"#F9A825\", \"#00695C\", \"#9E9D24\",\n                        \"#2E7D32\", \"#558B2F\", \"#F44336\", \"#607D8B\", \"#E91E63\", \"#795548\", \"#9C27B0\", \"#795548\", \"#673AB7\", \"#FF5722\", \"#FF9800\", \"#2196F3\", \"#FF9800\", \"#03A9F4\", \"#FFC107\", \"#00BCD4\", \"#FFEB3B\", \"#009688\",\n                        \"#4CAF50\",\"#CDDC39\",\"#009688\",\"#00BCD4\",\"#CDDC39\"],\n                        pointBorderColor: '#455A64',\n                        pointBackgroundColor: '#455A64',\n                        pointBorderWidth: 1,\n                        pointHoverRadius: 5,\n                        pointHoverBackgroundColor: '#455A64',\n                        pointHoverBorderColor: '#455A64',\n                        pointHoverBorderWidth: 2,\n                        pointRadius: 1,\n                        pointHitRadius: 10,\n                        data: this.props.data.map(items => { return (items.Value) })\n                    }\n                ]\n\n            }\n        }\n\n        options = {\n            legend: {\n                display: false,\n                position: 'bottom',\n\n            },\n            scales: {\n                yAxes: [{\n                    ticks: {\n                        beginAtZero: true,\n                        min: 0,\n                        stepSize: 10,\n                    }\n                }]\n            }\n        };\n\n        return (\n            <div>\n                <Bar data={data} options={options} />\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Pie  } from 'react-chartjs-2';\n\nvar options;\nexport default class pie extends Component {\n\n\n    render() {\n        const data = {\n\n            labels: this.props.data.map(items => { return (items.Label) }),\n            datasets: [\n                {\n                    fill: false,\n                    lineTension: 0.1,\n                    backgroundColor: [\"#64B5F6\",\"#9575CD\",\"#EF9A9A\", \"#B0BEC5\", \"#F48FB1\", \"#EEEEEE\", \"#B39DDB\", \"#BCAAA4\", \"#9FA8DA\", \"#FFAB91\", \"#90CAF9\", \"#FFCC80\", \"#C5E1A5\", \"#81D4FA\", \"#FFF59D\", \"#FFE082\", \"#80CBC4\", \"#E6EE9C\", \"#80DEEA\",\n                    \"#C62828\", \"#37474F\", \"#AD1457\", \"#424242\", \"#6A1B9A\", \"#4E342E\", \"#4527A0\", \"#D84315\", \"#283593\", \"#1565C0\", \"#EF6C00\", \"#0277BD\", \"#FF8F00\", \"#00838F\", \"#F9A825\", \"#00695C\", \"#9E9D24\",\n                    \"#2E7D32\", \"#558B2F\", \"#F44336\", \"#607D8B\", \"#E91E63\", \"#795548\", \"#9C27B0\", \"#795548\", \"#673AB7\", \"#FF5722\", \"#FF9800\", \"#2196F3\", \"#FF9800\", \"#03A9F4\", \"#FFC107\", \"#00BCD4\", \"#FFEB3B\", \"#009688\",\n                    \"#4CAF50\",\"#CDDC39\",\"#009688\",\"#00BCD4\",\"#CDDC39\",\"#EF9A9A\", \"#B0BEC5\", \"#F48FB1\", \"#EEEEEE\", \"#B39DDB\", \"#BCAAA4\", \"#9FA8DA\", \"#FFAB91\", \"#90CAF9\", \"#FFCC80\", \"#C5E1A5\", \"#81D4FA\", \"#FFF59D\", \"#FFE082\", \"#80CBC4\", \"#E6EE9C\", \"#80DEEA\",\n                    \"#C62828\", \"#37474F\", \"#AD1457\", \"#424242\", \"#6A1B9A\", \"#4E342E\", \"#4527A0\", \"#D84315\", \"#283593\", \"#1565C0\", \"#EF6C00\", \"#0277BD\", \"#FF8F00\", \"#00838F\", \"#F9A825\", \"#00695C\", \"#9E9D24\",\n                    \"#2E7D32\", \"#558B2F\", \"#F44336\", \"#607D8B\", \"#E91E63\", \"#795548\", \"#9C27B0\", \"#795548\", \"#673AB7\", \"#FF5722\", \"#FF9800\", \"#2196F3\", \"#FF9800\", \"#03A9F4\", \"#FFC107\", \"#00BCD4\", \"#FFEB3B\", \"#009688\",\n                    \"#4CAF50\",\"#CDDC39\",\"#009688\",\"#00BCD4\",\"#CDDC39\"],\n                    pointBorderColor: '#455A64',\n                    pointBackgroundColor: '#455A64',\n                    pointBorderWidth: 1,\n                    pointHoverRadius: 5,\n                    pointHoverBackgroundColor: '#455A64',\n                    pointHoverBorderColor: '#455A64',\n                    pointHoverBorderWidth: 2,\n                    pointRadius: 1,\n                    pointHitRadius: 10,\n                    data: this.props.data.map(items => { return (items.Value) })\n                }]\n        }\n\n        options = {\n            legend: {\n                display: true,\n                position: 'bottom',\n            },\n        };\n\n        return (\n            <div>\n                <Pie  data={data} options={options} />\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Bar } from 'react-chartjs-2';\n\nvar options;\nvar data;\n\nexport default class GenderComp extends Component {\n    render() {\n             data = {\n                labels: this.props.data.map(items => { return (items.Label) }),\n                datasets: [\n                    {\n                        label: this.props.Inscription,\n                        fill: false,\n                        lineTension: 0.1,\n                        backgroundColor: [\n                            \"#64B5F6\", \"#9575CD\",\n                        ],\n                        pointBorderColor: '#455A64',\n                        pointBackgroundColor: '#455A64',\n                        pointBorderWidth: 1,\n                        pointHoverRadius: 5,\n                        pointHoverBackgroundColor: '#455A64',\n                        pointHoverBorderColor: '#455A64',\n                        pointHoverBorderWidth: 2,\n                        pointRadius: 1,\n                        pointHitRadius: 10,\n                        data: this.props.data.map(items => { return (items.Value) })\n                    },\n                    {\n                        label: this.props.Start,\n                        fill: false,\n                        lineTension: 0.1,\n                        backgroundColor: [\n                            \"#64B5F6\", \"#9575CD\",\n                        ],\n                        pointBorderColor: '#455A64',\n                        pointBackgroundColor: '#455A64',\n                        pointBorderWidth: 1,\n                        pointHoverRadius: 5,\n                        pointHoverBackgroundColor: '#455A64',\n                        pointHoverBorderColor: '#455A64',\n                        pointHoverBorderWidth: 2,\n                        pointRadius: 1,\n                        pointHitRadius: 10,\n                        data: this.props.dataStart.map(items => { return (items.Value) })\n                    },\n                    {\n                        label: this.props.Arrivals,\n                        fill: false,\n                        lineTension: 0.1,\n                        backgroundColor: [\n                            \"#64B5F6\", \"#9575CD\",\n                        ],\n                        pointBorderColor: '#455A64',\n                        pointBackgroundColor: '#455A64',\n                        pointBorderWidth: 1,\n                        pointHoverRadius: 5,\n                        pointHoverBackgroundColor: '#455A64',\n                        pointHoverBorderColor: '#455A64',\n                        pointHoverBorderWidth: 2,\n                        pointRadius: 1,\n                        pointHitRadius: 10,\n                        data: this.props.dataLast.map(items => { return (items.Value) })\n                    }\n                ]\n\n            }\n        \n\n\n        options = {\n            legend: {\n                display: false,\n            },\n            scales: {\n                yAxes: [{\n                  ticks: {\n                    beginAtZero: true,\n                    min: 0\n                  }    \n                }]\n              }   \n        };\n\n        return (\n            <div>\n            <Bar data={data} options={options} />\n        </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Line } from 'react-chartjs-2';\n\nvar data;\nvar options;\nexport default class Ground extends Component {\n    render() {\n            data = {\n            labels:this.props.data.map(items => { return (items.checkpoint.local) }),\n            datasets: [\n              {\n                label: this.props.Name,\n                fill: true,\n                lineTension: 0.1,\n                backgroundColor: '#BCAAA4',\n                borderColor: '#66BB6A',\n                borderDash: [],\n                borderDashOffset: 0.0,\n                borderJoinStyle: 'miter',\n                pointBorderColor: '#212121',\n                pointBackgroundColor: '#212121',\n                pointBorderWidth: 1,\n                pointHoverRadius: 5,\n                pointHoverBackgroundColor: '#212121',\n                pointHoverBorderColor: '#212121',\n                pointHoverBorderWidth: 2,\n                pointRadius: 1,\n                pointHitRadius: 10,\n                data: this.props.data.map(items => { return (items.checkpoint.altitude) })\n              }              \n            ]\n          };\n          \n        options = {\n            legend: {\n                display: false,\n            },\n            scales: {\n                yAxes: [{\n                  ticks: {\n                    beginAtZero: true,\n                    min: 0,\n                  },   \n                  scaleLabel: {\n                    display: true,\n                    labelString: 'm'\n                  } \n                }]\n              }   \n        };\n        \n    \n    \n    \n        return (\n            <Line data={data} options={options} />\n    \n        )\n      }\n}\n","import React, { Component } from 'react'\nimport { Line } from 'react-chartjs-2';\n\nvar options;\nvar data;\n\nexport default class Checkpoint extends Component {\n    render() {\n        data = {\n            labels: this.props.data.map(items => { return (items.Label) }),\n            datasets: [\n                {\n                    fill: true,\n                    lineTension: 0.1,\n                    backgroundColor: '#90CAF9',\n                    borderColor: '#42A5F5',\n                    borderDash: [],\n                    borderDashOffset: 0.0,\n                    borderJoinStyle: 'miter',\n                    pointBorderColor: '#263238',\n                    pointBackgroundColor: '#263238',\n                    pointBorderWidth: 1,\n                    pointHoverRadius: 5,\n                    pointHoverBackgroundColor: '#263238',\n                    pointHoverBorderColor: '#263238',\n                    pointHoverBorderWidth: 2,\n                    pointRadius: 1,\n                    pointHitRadius: 10,\n                    data: this.props.data.map(items => { return (items.Value) })\n                }\n            ]\n        };\n\n        options = {\n            legend: {\n                display: false,\n            },\n            scales: {\n                yAxes: [{\n                    ticks: {\n                        beginAtZero: true,\n                        min: 0,\n                    }\n                }]\n            }\n        };\n        return (\n            <div>\n                <Line data={data} options={options} />\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { FormattedMessage } from 'react-intl';\nimport { FormatTime } from \"../Scripts/time\"\n\nexport default class FasterMale extends Component {\n    checkZeros(value) {\n        if (value===\"00:00:00\") {\n          return (\"-\")\n        }\n        else {\n          return (value)\n        }\n      }\n      checkShowNameZeros(value, time) {\n        if (time===\"00:00:00\") {\n          return (\"-\")\n        }\n        else {\n          return (value)\n        }\n      }\n    render() {\n        var Array = this.props.athleteList.filter(function (el) {\n            return el.sexo ===\"M\"\n                   \n          });\n        //get the faster time\n        let fasterTime = Array.map(athelete => {\n            return athelete.acumulated_time;\n        });\n        //get the faster athlete name\n        let fasterName = Array.map(athelete => {\n            return athelete.name;\n        });\n\n        return (\n\n            <div>\n                {/* Info boxes */}\n                <div className=\"col-md-3 col-sm-6 col-xs-12\">\n                    <div className=\"info-box\">\n                        <span className=\"info-box-icon bg-blue\"><i className=\"fa fa-fw fa-male\" /></span>\n                        <div className=\"info-box-content\">\n                            <span className=\"info-box-text\"><FormattedMessage id=\"FASTER\" /></span>\n                            <span className=\"info-box-text\"> <strong>{ (fasterTime[0])?this.checkShowNameZeros(fasterName[0],FormatTime(fasterTime[0])):\"\"} </strong></span>\n                            <span className=\"info-box-number\"> <small>{(fasterTime[0])?this.checkZeros(FormatTime(fasterTime[0])):\"\"}</small></span>\n                        </div>\n                        {/* /.info-box-content */}\n                    </div>\n                    {/* /.info-box */}\n                </div>\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { FormattedMessage } from 'react-intl';\nimport { FormatTime } from \"../Scripts/time\"\n\nexport default class FasterFemale extends Component {\n    checkZeros(value) {\n        if (value===\"00:00:00\") {\n          return (\"-\")\n        }\n        else {\n          return (value)\n        }\n      }\n      checkShowNameZeros(value, time) {\n        if (time===\"00:00:00\") {\n          return (\"-\")\n        }\n        else {\n          return (value)\n        }\n      }\n    render() {\n        var Array = this.props.athleteList.filter(function (el) {\n            return el.sexo ===\"F\"\n                   \n          });\n        //get the faster time\n        let fasterTime = Array.map(athelete => {\n            return athelete.acumulated_time;\n        });\n        //get the faster athlete name\n        let fasterName = Array.map(athelete => {\n            return athelete.name;\n        });\n        return (\n            <div>\n                {/* Info boxes */}\n                <div className=\"col-md-3 col-sm-6 col-xs-12\">\n                    <div className=\"info-box\">\n                        <span className=\"info-box-icon bg-blue\"><i className=\"fa fa-fw fa-female\" /></span>\n                        <div className=\"info-box-content\">\n                            <span className=\"info-box-text\"><FormattedMessage id=\"FASTERF\" /></span>\n                            <span className=\"info-box-text\"> <strong>{ (fasterTime[0])?this.checkShowNameZeros(fasterName[0],FormatTime(fasterTime[0])):\"\"} </strong></span>\n                            <span className=\"info-box-number\"> <small>{(fasterTime[0])?this.checkZeros(FormatTime(fasterTime[0])):\"\"}</small></span>\n                        </div>\n                        {/* /.info-box-content */}\n                    </div>\n                    {/* /.info-box */}\n                </div>\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from \"react\";\nimport Header from \"../structure/Header\";\nimport Footer from \"../structure/Footer\";\nimport Menu from \"../structure/Menu\";\nimport TableCheckpoints from \"../Tables/TableCheckpoints\";\nimport WidgetNumberParticipants from \"../Widgets/NumberParticipants\"\nimport WidgetFasterMale from \"../Widgets/FasterMale\"\nimport WidgetFasterFemale from \"../Widgets/FasterFemale\"\nimport Loader from \"../Loader/Loader\";\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { FormattedMessage } from 'react-intl';\n\n\nconst API_KEY = `${process.env.REACT_APP_API_TRAIL_KEY}`;\nconst API_URL = `${process.env.REACT_APP_API_TRAIL_URL}`;\nconst TOKEN = API_KEY;\nvar AthleteListSize = 0;\nvar sizeCheckpointList = 0;\nvar arrayTotalAthlets = [];\n\nexport default class EventSubscribers extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      CheckpointList: [],\n      loadingAthlets: false,\n      loadingCheckpoints: false,\n      Checkpointid: 0,\n      checkpointname: \"\",\n      checkpointnameShow: <div>< FormattedMessage id=\"SEARCHING\" />&nbsp;&nbsp;<i class=\"fa fa-refresh fa-spin\" /></div>,\n      AtheletsTotal: 0,\n      AtheletsTotalLoaded: false,\n      CheckpointTotalLoaded: false,\n      AthleteList: [],\n      CheckpointTotal: []\n    };\n    this.GetFirstRunCheckpointList();\n    this.GetTotalAthlets()\n    setInterval(this.GetFirstRunCheckpointList, 300000); // runs every 5 min.\n    setInterval(this.GetTotalAthlets, 300000); // runs every 5 min.\n\n\n  }\n\n\n\n  /*for the first time when page is loaded */\n  GetFirstRunCheckpointList = async e => {\n    const API_CALL = await fetch(`${API_URL}/competition/Checkpoints/${this.props.match.params.CompID}/`, {\n      headers: new Headers({\n        Authorization: TOKEN\n      })\n    });\n    const data = await API_CALL.json();\n    this.setState({ CheckpointList: data, loadingCheckpoints: true });\n    this.Getlastcheckpoint();\n\n  };\n\n  /*for the  time when props change */\n  GetCheckpointList = async e => {\n    const API_CALL = await fetch(`${API_URL}/competition/Checkpoints/${this.props.match.params.CompID}/`, {\n      headers: new Headers({\n        Authorization: TOKEN\n      })\n    });\n    const data = await API_CALL.json();\n    this.setState({ CheckpointList: data, loadingCheckpoints: true });\n  };\n\n  /*get list of athlets*/\n  GetAthleteList = async e => {\n    const API_CALL = await fetch(`${API_URL}/results/AthsTimeWithGlobalPositions/${this.props.match.params.CompID}/${this.state.Checkpointid}/`, {\n      headers: new Headers({\n        Authorization: TOKEN\n      })\n    });\n    const data = await API_CALL.json();\n    AthleteListSize = await data.length;\n    this.setState({ AthleteList: data, loadingAthlets: true });\n  };\n  /*get total of athlets by checkpoint*/\n   GetTotalAthlets = async e =>{\n    const API_CALL = await fetch(`${API_URL}/results/AthTotalByCheckpoint/${this.props.match.params.CompID}/`, {\n      headers: new Headers({\n        Authorization: TOKEN\n      })\n    });\n    const data = await API_CALL.json()\n    this.setState({ CheckpointTotal: data, CheckpointTotalLoaded: true });\n\n  };\n\n  /*when props change*/\n  async componentDidUpdate(prevProps) {\n    if (prevProps.match.params.CompID !== this.props.match.params.CompID) {\n      this.setState({ loadingAthlets: false })\n      await this.GetFirstRunCheckpointList();\n      await this.GetTotalAthlets();\n\n    }\n  }\n\n  /*when props change*/\n  UpdateStateCheckpoint(checkpointID, checkpointName) {\n    this.setState({ Checkpointid: checkpointID, checkpointname: checkpointName, loadingAthlets: false, checkpointnameShow: checkpointName }, this.GetAthleteList);\n  };\n\n  /*get last checkpoint with values in the database*/\n  async Getlastcheckpoint() {\n    let checkpointID = this.state.CheckpointList.map(checkpoint => checkpoint.checkpoint.checkpoint_id)\n    let checkpointName = this.state.CheckpointList.map(checkpoint => checkpoint.checkpoint.local)\n    sizeCheckpointList = checkpointID.length - 1; //-1 because array start in 0\n    this.setState({ Checkpointid: checkpointID[sizeCheckpointList], checkpointname: checkpointName[sizeCheckpointList] });\n    await this.GetAthleteList();\n\n    //Search for the last checkpoint with times inserted\n    if (AthleteListSize === 0) {\n      while (sizeCheckpointList >= 0) {\n        sizeCheckpointList = sizeCheckpointList - 1;\n        this.setState({ Checkpointid: checkpointID[sizeCheckpointList], checkpointname: checkpointName[sizeCheckpointList] });\n        await this.GetAthleteList();\n        if (AthleteListSize > 0) {\n          this.setState({ checkpointnameShow: this.state.checkpointname })\n          break;\n        }\n        else {\n          //if there is no times\n          if (sizeCheckpointList === 0) {\n            this.setState({ Checkpointid: checkpointID[0], checkpointname: checkpointName[0] });\n            this.setState({ checkpointnameShow: this.state.checkpointname })\n            await this.GetAthleteList();\n            break;\n          }\n        }\n\n\n      }\n    }\n    else {\n      this.setState({ checkpointnameShow: this.state.checkpointname })\n    }\n\n  }\n\n  GetBadgesvalues(checkpoint) {\n    var total = 0;\n    this.state.CheckpointTotal.map(checkpointValue => { if (checkpointValue.CheckpointID === checkpoint) { total = checkpointValue.Value } })\n    return (total);\n  }\n\n\n  CheckpointList(checkpoint_order, length) {\n    if (checkpoint_order === '99') {\n      return (<span style={{ padding: '1px' }} class=\"fa fa-fw fa-flag-checkered\" ></span>)\n    }\n    else if (checkpoint_order === '00') {\n      return (<span style={{ padding: '1px' }} class=\"fa fa-fw fa-bell-o\" ></span>)\n    }\n    else { return (<span style={{ padding: '1px' }}>{checkpoint_order}</span>) }\n  }\n\n  CheckifThereisDatatoShowTable(){\n    \n    if(this.state.AthleteList.length >0){\n      return(    \n      <TableCheckpoints\n        athleteList={this.state.AthleteList}\n        eventID={this.props.match.params.EventID}\n        competitionID={this.props.match.params.CompID}\n        loading={this.state.loading}/>\n        )\n    }else\n    return(\n      <div class=\"box-body\" style={{textAlign:\"center\"}}>\n        <FormattedMessage id=\"NOTABLEDATA\"/>\n      </div>)\n\n  }\n\n\n\n  /*Loading message for the checkpoints*/\n  LoadingCheckpoints() {\n    if (this.state.loadingCheckpoints === false) {\n      return (\n        <th key=\"Loading\"> <a href=\"##\">< FormattedMessage id=\"LOADING\" /><i class=\"fa fa-refresh fa-spin\" /></a></th>\n      )\n    }\n    else\n      return (\n        this.state.CheckpointList.map(checkpoint => {\n          if (checkpoint.checkpoint.checkpoint_id === this.state.Checkpointid) {\n            return (\n\n              <th key={checkpoint.checkpoint.checkpoint_id} >\n                <Tooltip placement=\"top\" title={<span style={{ fontSize: \"16px\" }}>{checkpoint.checkpoint.local}</span>} arrow>\n                  <a style={{ color: '#37474F', fontSize: '22px' }} onClick={() => this.UpdateStateCheckpoint(checkpoint.checkpoint.checkpoint_id, checkpoint.checkpoint.local)} href=\"##\">\n                    {this.CheckpointList(checkpoint.checkpoint_order, this.state.CheckpointList.length)}\n                    <span class=\"badge bg-red\">{this.GetBadgesvalues(checkpoint.checkpoint.checkpoint_id)}</span>\n\n                  </a>\n                </Tooltip>\n\n\n              </th>\n            )\n          }\n          else {\n            return (\n              <th key={checkpoint.checkpoint.checkpoint_id} >\n                <Tooltip placement=\"top\" title={<span style={{ fontSize: \"16px\" }}>{checkpoint.checkpoint.local}</span>} arrow>\n                  <a onClick={() => this.UpdateStateCheckpoint(checkpoint.checkpoint.checkpoint_id, checkpoint.checkpoint.local)} href=\"##\">\n                    {this.CheckpointList(checkpoint.checkpoint_order, this.state.CheckpointList.length)}\n                    <span class=\"badge bg-red\">{this.GetBadgesvalues(checkpoint.checkpoint.checkpoint_id)}</span>\n                  </a>\n                </Tooltip>\n\n              </th>\n\n            )\n          }\n\n\n\n        }))\n  }\n\n  /*Loading message for the athlete*/\n  LoadingAthletes() {\n    if (this.state.loadingAthlets === false) {\n      return (\n        <section className=\"content\">\n          <div className=\"row\">\n            <div className=\"col-xs-12\">\n              <div className=\"box\">\n                {/* /.box-body */}\n                <div className=\"box-body\" style={{ display: 'flex', justifyContent: 'center' }}>\n                  <Loader />\n                </div>\n\n              </div>\n            </div>\n          </div>\n        </section>\n      )\n    }\n    else {\n      return (\n        <section className=\"content\">\n          <div className=\"row\">\n            {/* widget for the number of participants */}\n            <WidgetNumberParticipants athleteList={this.state.AthleteList} />\n            {/* widget for the Faster */}\n            <WidgetFasterMale athleteList={this.state.AthleteList} />\n            <WidgetFasterFemale athleteList={this.state.AthleteList} />\n\n\n          </div>\n          <div className=\"row\">\n            <section  className=\"content-header\">\n              <h1 style={{paddingBottom:'20px'}}>\n                <span> {this.state.checkpointnameShow}</span>\n              </h1>\n            </section>\n\n          </div>\n\n\n          <div\n            style={{\n              padding: \"10px 30px\",\n              background: \"#3c8dbc\",\n              zIndex: 999999,\n              fontSize: 16,\n              fontWeight: 600\n            }}\n          >\n\n            <table className=\"text-center\" style={{ padding: \"5px\", border: \"5px\", width: \"100%\" }}>\n              <tbody>\n                <tr style={{ textAlign: \"center !important\" }} >\n                  {this.LoadingCheckpoints()} {/* load checkpoint */}\n                </tr>\n              </tbody>\n            </table>\n\n\n          </div>\n          <div className=\"row\">\n            <div className=\"col-xs-12\">\n              <div className=\"box box-primary\">\n                {/* /.box-body */}\n                <div className=\"box-body\"></div>\n\n                {this.CheckifThereisDatatoShowTable()}\n              </div>\n            </div>\n            {/* /.col */}\n          </div>\n          {/* /.row */}\n        </section>\n      )\n    }\n  }\n\n  render() {\n\n    return (\n      <div>\n        <Header eventID={this.props.match.params.EventID} />\n        {/*Send the event id to the MENU, to get the competition list*/}\n        <Menu eventID={this.props.match.params.EventID} competitionID={this.props.match.params.CompID} />\n        {/*CONTENT*/}\n        <div>\n          {/* Content Wrapper. Contains page content */}\n          <div className=\"content-wrapper\">\n\n            {/* Content Header (Page header) */}\n            <section className=\"content-header\">\n              <h1>\n\n                <span >{this.props.match.params.CompName}</span>\n              </h1>\n            </section>\n\n\n            {/* Main content */}\n            {/*Check if data is loading*/}\n            {this.LoadingAthletes()} {/* loaded athletes */}\n          </div>\n          {/* /.content-wrapper */}\n        </div>\n        <Footer eventID={this.props.match.params.EventID} />\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\nimport { Link } from \"react-router-dom\";\nimport Favorites from \"../favorites/favoritesChecker\"\nimport {FormatTime} from \"../Scripts/time\"\nimport { FormattedMessage } from 'react-intl';\n\nvar size = window.innerWidth;\n\n\nexport default class TableSubscribers extends Component {\n  \n  CheckSize() {\n    if(size > 1500){\n      return true;\n    }\n    else{\n      return false;\n    }\n  }\n\n  render() {\n    \n    //Info for the filters\n    //get the category\n    let category = this.props.athleteList.map(athelete => {\n      return athelete.escalao;\n    });\n    //remove duplicates\n    const Tableuniquecategory = [...new Set(category.sort())];\n    //get the nacionality\n    let nacionality = this.props.athleteList.map(athelete => {\n      return athelete.country;\n    });\n    //remove duplicates\n    const Tableuniquenacionality = [...new Set(nacionality.sort())];\n  \n    //get the Club\n    let club = this.props.athleteList.map(athelete => {\n      return athelete.club;\n    });\n    //remove duplicates\n    const Tableuniqueclub = [...new Set(club.sort())];\n\n\n    //Table\n    const columns = [\n      {\n        Header: \"Id\",\n        accessor: \"athlete_id\",\n        sortable: false,\n        style: {\n          textAlign: \"Center\"\n        },\n        width: 100,\n        maxWidth: 100,\n        mimWidth: 100,\n        show: false\n      },\n      {\n        Header: (size>800)?<FormattedMessage id=\"POSITION\" />:\"POS\",\n        accessor: this.props.position,\n        id: 'PositionGlobal',\n        style: {\n          display: \"flex\",\n          textAlign: \"Center\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        },\n        maxWidth:(size>800)?100:55,\n        Filter: ({ filter, onChange }) => (\n          <FormattedMessage id=\"SEARCH\" >\n          {txt => <input\n            onChange={event => onChange(event.target.value)}\n            value={filter ? filter.value : \"\"}\n            placeholder={txt}\n            style={{\n              width: \"100%\",\n              textAlign: \"Center\"\n            }}\n          />}\n        </FormattedMessage>\n        )\n      },\n      {\n        Header: (size>800)?<FormattedMessage id=\"PHOTO\" /> :\"PTL\",\n        id: \"photo\",\n        show: (size>800)?true:false,\n        accessor: \"photo\",\n        style: {\n          display: \"flex\",\n          textAlign: \"Center\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        },\n        maxWidth:(size>800)?200:60, \n        Cell: row => (\n          <img className=\"profile-user-img img-responsive img-circle\" src={row.value}></img>\n        )\n      },\n      {\n        Header: (size>800)?<FormattedMessage id=\"DORSAL\" /> :\"PTL\",\n        id: \"peitoral\",\n        accessor: d => Number(d.peitoral),\n        style: {\n          display: \"flex\",\n          textAlign: \"Center\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        },\n        maxWidth:(size>800)?100:60,\n        Filter: ({ filter, onChange }) => (\n          <FormattedMessage id=\"SEARCH\" >\n          {txt => <input\n            onChange={event => onChange(event.target.value)}\n            value={filter ? filter.value : \"\"}\n            placeholder={txt}\n            style={{\n              width: \"100%\",\n              textAlign: \"Center\"\n            }}\n          />}\n        </FormattedMessage>\n        ),\n        \n        Cell: row => (\n\n          <Link\n            to={{ pathname: `/AthleteDetail/${this.props.eventID}/${this.props.competitionID}/${row.original.athlete_id}` }}\n          >\n            <span style={{ color: \"#3c8dbc\" }}>{row.value} </span>\n          </Link>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"NAME\" />,\n        accessor: \"name\",\n        maxWidth:(size>800)?300:130,\n        style: {\n          display: \"flex\",\n          textAlign: \"Center\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        },\n        Filter: ({ filter, onChange }) => (\n          <FormattedMessage id=\"SEARCH\" >\n          {txt => <input\n            onChange={event => onChange(event.target.value)}\n            value={filter ? filter.value : \"\"}\n            placeholder={txt}\n            style={{\n              width: \"100%\",\n              textAlign: \"Center\"\n            }}\n          />}\n        </FormattedMessage>\n        ),\n        \n        Cell: row => (\n\n          <Link\n            to={{ pathname: `/AthleteDetail/${this.props.eventID}/${this.props.competitionID}/${row.original.athlete_id}` }}\n          >\n            <span style={{ color: \"#3c8dbc\" }}>{row.value} </span>\n          </Link>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"TEAM\" />,\n        accessor: \"club\",\n        show : this.CheckSize(),\n        maxWidth:300,\n        style: {\n          display: \"flex\",\n          textAlign: \"Center\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        },\n        Cell: row => row.value,\n        filterMethod: (filter, row) => {\n          if (filter.value === \"\") {\n            return true;\n          }\n\n          if (Tableuniqueclub.includes(filter.value)) {\n            return row[filter.id] === filter.value;\n          } else {\n            return true;\n          }\n        },\n        Filter: ({ filter, onChange }) => (\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\", textAlignLast:\"center\" }}\n            value={filter ? filter.value : \"all\"}\n          >\n            <FormattedMessage id=\"ALL\">\n              {txt => <option value=\"all\">{txt}</option>}\n            </FormattedMessage>\n            {Tableuniqueclub.map(k => {\n              return (\n                <option key={k.toString()} value={k}>\n                  {k}\n                </option>\n              );\n            })}\n          </select>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"CATEGORY\" />,\n        accessor: \"escalao\",\n        maxWidth:(size>800)?150:80,\n        style: {\n          display: \"flex\",\n          textAlign: \"Center\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        },\n        Cell: row => row.value,\n        filterMethod: (filter, row) => {\n          if (filter.value === \"\") {\n            return true;\n          }\n\n          if (Tableuniquecategory.includes(filter.value)) {\n            return row[filter.id] === filter.value;\n          } else {\n            return true;\n          }\n        },\n        Filter: ({ filter, onChange }) => (\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\", textAlignLast:\"center\" }}\n            value={filter ? filter.value : \"all\"}\n          >\n             <FormattedMessage id=\"ALL\">\n              {txt => <option value=\"all\">{txt}</option>}\n            </FormattedMessage>\n            {Tableuniquecategory.map(k => {\n              return (\n                <option key={k.toString()} value={k}>\n                  {k}\n                </option>\n              );\n            })}\n          </select>\n        )\n      },\n      {\n        Header:  <FormattedMessage id=\"COUNTRY\" />,\n        accessor: \"country\",\n        maxWidth:150,\n        show : this.CheckSize(),\n        style: {\n          display: \"flex\",\n          textAlign: \"Center\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        },\n        Cell: row => row.value,\n        filterMethod: (filter, row) => {\n          if (filter.value === \"\") {\n            return true;\n          }\n\n          if (Tableuniquenacionality.includes(filter.value)) {\n            return row[filter.id] === filter.value;\n          } else {\n            return true;\n          }\n        },\n        Filter: ({ filter, onChange }) => (\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\", textAlignLast:\"center\" }}\n            value={filter ? filter.value : \"all\"}\n          >\n           <FormattedMessage id=\"ALL\">\n              {txt => <option value=\"all\">{txt}</option>}\n            </FormattedMessage>\n            {Tableuniquenacionality.map(k => {\n              return (\n                <option key={k.toString()} value={k}>\n                  {k}\n                </option>\n              );\n            })}\n          </select>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"TIME\" />,\n        accessor: \"acumulated_time\",\n        maxWidth:(size>800)?100:100,\n        filterable:false,\n        sortable:false,\n        style: {\n          display: \"flex\",\n          textAlign: \"Center\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        },\n        Cell: row => FormatTime(row.value)\n        \n      },\n      {\n        Header: (size>800)?\"Dif 1º\" : \"Dif 1º\",\n        maxWidth:(size>800)?100:100,\n        accessor: \"dif\",\n        filterable:false,\n        sortable:false,\n        style: {\n          display: \"flex\",\n          textAlign: \"Center\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        },\n        Cell: row => FormatTime(row.value)\n        },\n      {\n        Header: (size>800)?<FormattedMessage id=\"FAVORITE\" />:\"FAV\",\n        filterable: false,\n        sortable:false,\n        maxWidth:(size>800)?100:50,\n        style: {\n          display: \"flex\",\n          textAlign: \"Center\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        },\n        Cell: row => (\n          <Favorites ListAthletes={this.props.athleteList} ListaFavoritos={row.original.athlete_id} />\n        )\n      }\n    ];\n    return (\n      <ReactTable\n      defaultSorted={[\n        {\n          id: 'PositionGlobal',\n          desc: false\n        },\n        {\n          id: 'peitoral',\n          desc: false\n        },\n      ]}\n      previousText={<FormattedMessage id=\"PREVIOUS\" />}\n      nextText={<FormattedMessage id=\"NEXT\" />}\n        columns={columns}\n        data={this.props.athleteList}\n        filterable={false}\n        noDataText={<FormattedMessage id=\"NODATA\" />}\n        defaultPageSize={this.props.athleteList.length}\n        showPagination={false}\n        showPaginationTop={false}\n        showPaginationBottom={false}\n        showPageSizeOptions={false}\n        showPageJump={true}\n        collapseOnSortingChange={true}\n        collapseOnPageChange={true}\n        collapseOnDataChange={true}\n        freezeWhenExpanded={false}\n        sortable={false}\n        multiSort={true}\n        resizable={true}\n        defaultSortDesc={false}\n        pageText={<FormattedMessage id=\"PAGE\" />}\n        rowsText={\"\"}\n        className=\"-striped -highlight\"\n\n      />\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Header from \"../structure/Header\";\nimport Footer from \"../structure/Footer\";\nimport Menu from \"../structure/Menu\";\nimport TableWinners from \"../Tables/TableWinners\";\nimport WidgetFaster from \"../Widgets/Faster\"\nimport Loader from \"../Loader/Loader\";\nimport { FormattedMessage } from 'react-intl';\n\n\nconst API_KEY = `${process.env.REACT_APP_API_TRAIL_KEY}`;\nconst API_URL = `${process.env.REACT_APP_API_TRAIL_URL}`;\nconst TOKEN = API_KEY;\nvar size = window.innerWidth;\n\nexport default class Winners extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            CategoryList: [],\n            loadingCategory: false,\n            loadingAthlete: false,\n            CategoryName: \"Global\",\n            Positon: \"PositionGlobal\",\n            Gender: \"M\",\n            AthleteList: []\n        };\n        this.GetCategoryList();\n        this.GetCategoryList = this.GetCategoryList.bind(this);\n\n\n    }\n\n    StaticElementGlobal() {\n        if (this.state.CategoryName === \"Global\") {\n            return (<th key=\"Global\" > <a style={{ color: '#37474F', fontSize: '22px' }} onClick={() => this.UpdateStateCheckpoint(\"Global\")} href=\"##\"><FormattedMessage id=\"GERAL\" /></a></th>\n            )\n        }\n        else {\n            return (\n                <th key=\"Global\" > <a onClick={() => this.UpdateStateCheckpoint(\"Global\")} href=\"##\"><FormattedMessage id=\"GERAL\" /></a></th>\n            )\n\n        }\n    }\n\n    StaticElementGlobalM() {\n        if (this.state.CategoryName === \"Global M\") {\n            return (<th key=\"GlobalM\" > <a style={{ color: '#37474F', fontSize: '22px' }} onClick={() => this.UpdateStateCheckpoint(\"Global M\")} href=\"##\"> <FormattedMessage id=\"MEN\" /> </a></th>\n            )\n        }\n        else {\n            return (\n                <th key=\"GlobalM\" > <a onClick={() => this.UpdateStateCheckpoint(\"Global M\")} href=\"##\"> <FormattedMessage id=\"MEN\" /> </a></th>\n            )\n\n        }\n    }\n    StaticElementGlobalF() {\n        if (this.state.CategoryName === \"Global F\") {\n            return (\n\n                <th key=\"GlobalF\" > <a style={{ color: '#37474F', fontSize: '22px' }} onClick={() => this.UpdateStateCheckpoint(\"Global F\")} href=\"##\"> <FormattedMessage id=\"WOMEN\" /> </a></th>\n            )\n        }\n        else {\n            return (\n\n                <th key=\"GlobalF\" > <a onClick={() => this.UpdateStateCheckpoint(\"Global F\")} href=\"##\"> <FormattedMessage id=\"WOMEN\" /></a></th>\n            )\n\n        }\n    }\n\n      /*get Category for the winners*/\n      GetCategoryList = async e => {\n        const API_CALL = await fetch(`${API_URL}/results/AthsFinalTimeGlobalWithPositions/${this.props.match.params.CompID}/`, {\n            headers: new Headers({\n                Authorization: TOKEN\n            })\n        });\n        const data = await API_CALL.json();\n        const API_CALL1 = await fetch(`${API_URL}/results/AthsWinnersGlobal/${this.props.match.params.CompID}/`, {\n            headers: new Headers({\n                Authorization: TOKEN\n            })\n        });\n        const dataSlice = await API_CALL1.json();\n\n        //get the category\n        let category = data.map(athelete => {\n            return athelete.escalao;\n        });\n        //remove duplicates\n        const Tableuniquecategory = [...new Set(category)];\n        Tableuniquecategory.sort();\n        this.setState({ CategoryList: Tableuniquecategory, AthleteList: dataSlice,  loadingAthlete: true, loadingCategory: true });\n    };\n    /*get Global winners*/\n    GetAthleteListGender = async e => {\n        const API_CALL = await fetch(`${API_URL}/results/AthsWinnersGender/${this.props.match.params.CompID}/${this.state.Gender}/`, {\n            headers: new Headers({\n                Authorization: TOKEN\n            })\n        });\n        const data = await API_CALL.json();\n        this.setState({ AthleteList: data, loadingAthlete: true });\n    };\n    /*get Category winners*/\n    GetAthleteListCategory = async e => {\n        const API_CALL = await fetch(`${API_URL}/results/AthsWinnersTier/${this.props.match.params.CompID}/${this.state.CategoryName}/`, {\n            headers: new Headers({\n                Authorization: TOKEN\n            })\n        });\n        const data = await API_CALL.json();\n        this.setState({ AthleteList: data, loadingAthlete: true });\n    };\n    /*props change*/\n    componentDidUpdate(prevProps) {\n        if (prevProps.match.params.CompID !== this.props.match.params.CompID) {\n            this.setState({ Positon: \"PositionGlobal\", loadingAthlete: false });\n            this.GetCategoryList();\n            this.UpdateStateCheckpoint(\"Global\");\n        }\n    }\n    /*Check if is global or tier*/\n    async UpdateStateCheckpoint(Category) {\n        if (Category === \"Global\") {\n            this.setState({ CategoryName: Category, Positon: \"PositionGlobal\", loadingAthlete: false }, this.GetCategoryList);\n        }\n        else if (Category === \"Global M\") {\n            this.setState({ CategoryName: Category, Positon: \"PositionGender\", Gender: \"M\", loadingAthlete: false }, this.GetAthleteListGender);\n        }\n        else if (Category === \"Global F\") {\n            this.setState({ CategoryName: Category, Positon: \"PositionGender\", Gender: \"F\", loadingAthlete: false }, this.GetAthleteListGender);\n        }\n        else {\n            this.setState({ CategoryName: Category, Positon: \"PositionTier\", loadingAthlete: false }, this.GetAthleteListCategory);\n        }\n    };\n\n    CheckifThereisDatatoShowTable(){\n    \n        if(this.state.AthleteList.length >0){\n          return(    \n            <TableWinners\n            eventID={this.props.match.params.EventID}\n            competitionID={this.props.match.params.CompID}\n            athleteList={this.state.AthleteList}\n            loading={this.state.loading}\n            position={this.state.Positon}\n        />\n            )\n        }else\n        return(\n          <div class=\"box-body\" style={{textAlign:\"center\"}}>\n            <FormattedMessage id=\"NOTABLEDATA\"/>\n          </div>)\n    \n      }\n    /*Loadings*/\n    LoadingAthlete() {\n        if (this.state.loadingAthlete === false) {\n            return (\n                <section className=\"content\">\n                    <div className=\"row\">\n                        <div className=\"col-xs-12\">\n                            <div className=\"box\">\n                                {/* /.box-body */}\n                                <div className=\"box-body\" style={{ display: 'flex', justifyContent: 'center' }}>\n                                    <Loader />\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            )\n\n        }\n        else {\n            return (\n                <section className=\"content\">\n                    <div className=\"row\">\n                        {/* widget for the Faster */}\n                    </div>\n                    <div\n                        style={{\n                            padding: \"10px 30px\",\n                            background: \"#3c8dbc\",\n                            zIndex: 999999,\n                            fontSize: 16,\n                            fontWeight: 600\n                        }}\n                    >\n                         <table className=\"text-center\" style={{ padding: \"5px\", border: \"5px\", width: \"100%\", marginBottom: \"10px\"}}>\n                         {this.StaticElementsTable()}\n                         </table>\n                        <table className=\"text-center\" style={{ padding: \"5px\", border: \"5px\", width: \"100%\" }}>\n                            {this.LoadingCategory()}\n                        </table>\n\n\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-xs-12\">\n                            <div className=\"box box-primary\">\n                                {/* /.box-body */}\n                                <div className=\"box-body\"></div>\n                                {this.CheckifThereisDatatoShowTable()}\n                            </div>\n                        </div>\n                        {/* /.col */}\n                    </div>\n                    {/* /.row */}\n                </section>\n\n            )\n\n        }\n\n    }\n\n    StaticElementsTable(){\n        return (\n            <tbody>\n                <tr>\n\n                    {this.StaticElementGlobal()}\n                    {this.StaticElementGlobalM()}\n                    {this.StaticElementGlobalF()}\n                </tr>\n            </tbody>\n\n        )\n\n\n    }\n\n    LoadingCategory() {\n        if (this.state.loadingCategory === false) {\n            return (\n                <th> <a href=\"##\"><FormattedMessage id=\"LOADING\" /> <i class=\"fa fa-refresh fa-spin\"></i></a></th>\n            )\n        }\n        else {\n            return (\n                <tbody>\n                    <tr>\n                        {this.state.CategoryList.map(category => {\n                            if (this.state.CategoryName === category) {\n                                return (\n                                    <th key={category} > <a style={{ color: '#37474F', fontSize: '22px' }} onClick={() => this.UpdateStateCheckpoint(category)} href=\"##\">{category}</a></th>\n                                )\n                            }\n                            else {\n                                return (\n                                    <th key={category} > <a onClick={() => this.UpdateStateCheckpoint(category)} href=\"##\">{category}</a></th>\n                                )\n                            }\n\n                        })}\n                    </tr>\n                </tbody>\n\n            )\n\n        }\n\n    }\n    render() {\n        return (\n            <div>\n                <Header eventID={this.props.match.params.EventID} />\n                {/*Send the event id to the MENU, to get the competition list*/}\n                <Menu eventID={this.props.match.params.EventID} competitionID={this.props.match.params.CompID} />\n                {/*CONTENT*/}\n                <div>\n                    {/* Content Wrapper. Contains page content */}\n                    <div className=\"content-wrapper\">\n                        {/* Content Header (Page header) */}\n                        <section className=\"content-header\">\n                            <h1>\n                                {/* <span style={{ float: \"right\" }}> {this.state.CategoryName} </span>*/}\n                                <span> {this.props.match.params.CompName} </span>\n                            </h1>\n                        </section>\n                        {/* Main content */}\n                        {this.LoadingAthlete()}\n                    </div>\n                    {/* /.content-wrapper */}\n                </div>\n                <Footer eventID={this.props.match.params.EventID} />\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { FormattedMessage } from 'react-intl';\nimport { FormatTime } from \"../Scripts/time\"\n\nexport default class FasterMale extends Component {\n\n    render() {\n        //get the faster time\n        let fasterTime = this.props.athleteList.map(athelete => {\n            return athelete.acumulated_time;\n        });\n        //get the faster athlete name\n        let fasterName = this.props.athleteList.map(athelete => {\n            return athelete.name;\n        });\n\n        return (\n\n            <div>\n                {/* Info boxes */}\n                <div className=\"col-md-3 col-sm-6 col-xs-12\">\n                    <div className=\"info-box\">\n                        <span className=\"info-box-icon bg-blue\"><i className=\"fa fa-fw fa-clock-o\" /></span>\n                        <div className=\"info-box-content\">\n                            <span className=\"info-box-text\"><FormattedMessage id=\"FASTER\" /></span>\n                            <span className=\"info-box-text\"> <strong>{fasterName[0]} </strong></span>\n                            <span className=\"info-box-number\"> <small>{(fasterTime[0])?FormatTime(fasterTime[0]):\"\"}</small></span>\n                        </div>\n                        {/* /.info-box-content */}\n                    </div>\n                    {/* /.info-box */}\n                </div>\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from \"react\";\nimport ReactTable from \"react-table\";\nimport { FormatTime } from \"../Scripts/time\"\nimport { calculatePagination } from \"../Scripts/PaginationHelper\"\nimport { FormattedMessage } from 'react-intl';\nimport './blink_me.css';\nvar size = window.innerWidth;\n\nexport default class TableGlobal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: this.props.loading\n    };\n  }\n\n\n  CheckSize() {\n    if (size > 800) {\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n\n  checkZerosPos(value) {\n    if (parseInt(value)===0) {\n      return (\"-\")\n    }\n    else {\n      return (value)\n    }\n  }\n\n  checkZerosTime(value, distance, prediction, position) {\n    \n    if(prediction===\"YES\" || position===1)\n    {\n      return (value)\n    }\n    if(parseInt(distance) != 0)\n    {\n      if(value===\"00:00:00\"){\n        return(\"-\")\n      }\n      else {\n        return (value)\n      }\n    }\n    else\n    {\n      return (value)\n    }\n\n\n  }\n\n  CalculateKMperH(checkpointName, time) {\n    var distance\n    this.props.checkpoint.map(checkpoint => {\n      if (checkpoint.checkpoint.local === checkpointName) {\n        distance = checkpoint.distancia_acumulada\n      }\n      return null\n    })\n    var km = distance / 1000;\n    var TimeSplit = time.split(\":\")\n    var H = TimeSplit[0]\n    var M = TimeSplit[1]\n    var S = TimeSplit[2]\n    var finaltime = parseFloat(H) + parseFloat((M / 60)) + parseFloat((S / 3600))\n    var KMperH = parseFloat(km) / parseFloat(finaltime)\n    if (isNaN(KMperH)) {\n      KMperH = 0;\n    }\n    if (KMperH === Infinity) {\n      KMperH = 0;\n    }\n    return (KMperH.toFixed(2))\n  }\n\n  CalculateMINperKM(checkpointName, time) {\n    var MInperKM = parseFloat(60 / this.CalculateKMperH(checkpointName, time))\n    if (!isFinite(MInperKM)) {\n      MInperKM = 0;\n    }\n    if (isNaN(MInperKM)) {\n      MInperKM = 0;\n    }\n    if (MInperKM === Infinity) {\n      MInperKM = 0;\n    }\n    return (MInperKM.toFixed(2));\n    \n\n  }\n\n  getDistance(checkpointName) {\n    var distance\n\n    this.props.checkpoint.map(checkpoint => {\n      if (checkpoint.checkpoint.local === checkpointName) {\n        distance = checkpoint.distancia_acumulada\n      }\n      return null\n    })\n    distance = parseFloat(distance / 1000);\n    return (distance.toFixed(2) + \" km\")\n\n  }\n  getaltitude(checkpointName) {\n    var Altitude\n\n    this.props.checkpoint.map(checkpoint => {\n      if (checkpoint.checkpoint.local === checkpointName) {\n        Altitude = checkpoint.checkpoint.altitude\n      }\n      return null\n    })\n    return (Altitude + \" m\")\n\n  }\n  ReturnPredictions(prediction, time, state) {\n    if (state == \"EP\") {\n      if (prediction === \"NO\") {\n        return (<span>{time}</span>)\n      }\n      else {\n        return (\n          <div  >\n            <span class=\"color\">{time}</span>\n            <br />\n            <span class=\"blink_me\"><FormattedMessage id=\"FORECAST\" /></span>\n          </div>\n        )\n\n\n      }\n    }\n    else {\n      return (<span>-</span>)\n    }\n\n  }\n  render() {\n\n    //Info for the filters\n\n    //Table\n    const columns = [\n      {\n        Header: \"Id\",\n        accessor: \"athlete_id\",\n        sortable: false,\n        style: {\n          textAlign: \"Center\"\n        },\n        show: false\n      },\n      {\n        Header: \"prediction\",\n        accessor: \"prediction\",\n        sortable: false,\n        style: {\n          textAlign: \"Center\"\n        },\n        show: false\n      },\n      {\n        Header: \"time_status\",\n        accessor: \"time_status\",\n        sortable: false,\n        style: {\n          textAlign: \"Center\"\n        },\n        show: false\n      },\n      {\n        Header: <FormattedMessage id=\"GERAL\" />,\n        width: (size > 800) ? 70 : 50,\n\n        accessor: \"PositionGlobal\",\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => (\n          <span> {row.original.prediction == \"NO\" ? this.checkZerosPos(row.value) : \"-\"} </span>\n        ),\n\n      },\n      {\n        Header: <FormattedMessage id=\"GENDER\" />,\n        width: (size > 800) ? 70 : 50,\n\n        accessor: \"PositionGender\",\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => (\n          <span> {row.original.prediction == \"NO\" ? this.checkZerosPos(row.value) : \"-\"} </span>\n        ),\n\n      },\n      {\n        Header: <FormattedMessage id=\"CATEGORY\" />,\n        width: (size > 800) ? 70 : 60,\n\n        accessor: \"PositionTier\",\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => (\n          <span> {row.original.prediction == \"NO\" ? this.checkZerosPos(row.value) : \"-\"} </span>\n        ),\n\n      },\n\n      {\n        Header: <FormattedMessage id=\"PLACE\" />,\n        accessor: \"local\",\n        filterable: false,\n        sortable: false,\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => row.value\n\n      },\n      {\n        Header: <FormattedMessage id=\"TIME\" />,\n        accessor: \"acumulated_time\",\n        filterable: false,\n        sortable: false,\n        maxWidth: (size > 800) ? 200 : 70,\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => this.ReturnPredictions(row.original.prediction, this.checkZerosTime(FormatTime(row.value),this.getDistance(row.original.local), row.original.prediction,row.original.PositionGlobal) , row.original.time_status)\n\n      },\n      {\n        Header: \"Dif 1º\",\n        accessor: \"dif\",\n        filterable: false,\n        sortable: false,\n        maxWidth: (size > 800) ? 200 : 70,\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => (\n          <span> {this.checkZerosTime(FormatTime(row.value), this.getDistance(row.original.local),\"NO\",row.original.PositionGlobal)} </span>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"HEIGHT\" />,\n        filterable: false,\n        sortable: false,\n        show: this.CheckSize(),\n        maxWidth: 90,\n\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => this.getaltitude(row.original.local)\n      },\n      {\n        Header: <FormattedMessage id=\"DISTANCE\" />,\n        filterable: false,\n        sortable: false,\n        show: this.CheckSize(),\n        maxWidth: 90,\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => this.getDistance(row.original.local)\n      },\n      {\n        Header: \"KM/H\",\n        filterable: false,\n        sortable: false,\n        maxWidth: (size > 800) ? 60 : 50,\n\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => (\n          <span> {row.original.prediction == \"NO\" && row.original.time_status == \"EP\" ? this.checkZerosPos(this.CalculateKMperH(row.original.local, row.original.acumulated_time)) : \"-\"} </span>\n        )\n      },\n      {\n        Header: \"MIN/KM\",\n        filterable: false,\n        sortable: false,\n        maxWidth: (size > 800) ? 60 : 55,\n\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => (\n          <span> {row.original.prediction == \"NO\" && row.original.time_status == \"EP\" ? this.checkZerosPos(this.CalculateMINperKM(row.original.local, row.original.acumulated_time)) : \"-\"} </span>\n\n        )\n      }\n    ];\n    return (\n      <ReactTable\n        columns={columns}\n        data={this.props.athleteList}\n        filterable={false}\n        noDataText={<FormattedMessage id=\"NODATA\" />}\n        defaultPageSize={parseInt(this.props.checkpoint.length)}\n        showPagination={false}\n        showPaginationTop={false}\n        showPaginationBottom={false}\n        showPageSizeOptions={false}\n        showPageJump={false}\n        collapseOnSortingChange={true}\n        collapseOnPageChange={true}\n        collapseOnDataChange={true}\n        freezeWhenExpanded={false}\n        sortable={false}\n        multiSort={false}\n        resizable={false}\n        defaultSortDesc={false}\n        pageText={<FormattedMessage id=\"PAGE\" />}\n        rowsText={\"\"}\n        className=\"-striped -highlight\"\n      />\n    );\n  }\n}\n","import React, { Component } from 'react'\nimport { FormattedMessage } from 'react-intl';\n\nexport default class PositionGlobal extends Component {\n    render() {\n        return (\n            <div>\n                {/* Info boxes */}\n                <div className=\"col-md-3 col-sm-6 col-xs-12\">\n                    <div className=\"info-box\">\n                        <span className={`info-box-icon bg-${this.props.color}`}><i className=\"ion ion-ios-people-outline\" /></span>\n                        <div className=\"info-box-content\">\n                            <span className=\"info-box-text\"><FormattedMessage id=\"GERAL\" />: <strong>{this.props.positionGlobal}</strong></span>\n                            <span className=\"info-box-text\"><FormattedMessage id=\"GENDER\" />: <strong>{this.props.positionGender}</strong></span>\n                            <span className=\"info-box-text\"><FormattedMessage id=\"CATEGORY\" />: <strong>{this.props.positionTier}</strong></span>\n                        </div>\n                        {/* /.info-box-content */}\n                    </div>\n                    {/* /.info-box */}\n                </div>\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class FasterMale extends Component {\n    render() {\n\n        return (\n\n            <div>\n                {/* Info boxes */}\n                <div className=\"col-md-3 col-sm-6 col-xs-12\">\n                    <div className=\"info-box\">\n                        <span className={`info-box-icon bg-${this.props.color}`}><i className=\"fa fa-refresh fa-spin\" /></span>\n                        <div className=\"info-box-content\">\n                            <span className=\"info-box-text\">{this.props.text}</span>\n                        </div>\n                        {/* /.info-box-content */}\n                    </div>\n                    {/* /.info-box */}\n                </div>\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class PositionGlobal extends Component {\n    checkZeros(value) {\n        if (value===\"00:00:00\") {\n          return (\"-\")\n        }\n        else {\n          return (value)\n        }\n      }\n    render() {\n        return (\n            <div>\n                {/* Info boxes */}\n                <div className=\"col-md-3 col-sm-6 col-xs-12\">\n                    <div className=\"info-box\">\n                        <span className={`info-box-icon bg-${this.props.color}`}><i className=\"fa fa-fw fa-clock-o\" /></span>\n                        <div className=\"info-box-content\">\n                            <span className=\"info-box-text\">{this.props.name}</span>\n                            <span className=\"info-box-number\">{this.checkZeros(this.props.time)}</span>\n                        </div>\n                        {/* /.info-box-content */}\n                    </div>\n                    {/* /.info-box */}\n                </div>\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class velocity extends Component {\n    checkZeros(value) {\n        if (parseInt(value)===0) {\n          return (\"-\")\n        }\n        else {\n          return (value)\n        }\n      }\n    render() {\n        return (\n            <div>\n            {/* Info boxes */}\n            <div className=\"col-md-3 col-sm-6 col-xs-12\">\n                <div className=\"info-box\">\n                    <span className={`info-box-icon bg-${this.props.color}`}><i className=\"fa fa-dashboard\" /></span>\n                    <div className=\"info-box-content\">\n                        <span className=\"info-box-text\">{this.props.name}</span>\n                        <span className=\"info-box-number\">{this.checkZeros(this.props.speedKM)}</span>\n                        <span className=\"info-box-number\">{this.checkZeros(this.props.speedMIN)}</span>\n\n                    </div>\n                    {/* /.info-box-content */}\n                </div>\n                {/* /.info-box */}\n            </div>\n\n        </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { FormattedMessage } from 'react-intl';\n\nexport default class LastPlace extends Component {\n    render() {\n        return (\n\n            <div>\n                {/* Info boxes */}\n                <div className=\"col-md-3 col-sm-6 col-xs-12\">\n                    <div className=\"info-box\">\n                        <span className={`info-box-icon bg-${this.props.color}`}><i className=\"fa fa-fw fa-map-signs\" /></span>\n                        <div className=\"info-box-content\">\n                            <span className=\"info-box-text\"><FormattedMessage id=\"LAST_POINT\" /></span>\n                            <span className=\"info-box-number\">{this.props.place}</span>\n                        </div>\n                        {/* /.info-box-content */}\n                    </div>\n                    {/* /.info-box */}\n                </div>\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport Header from \"../structure/Header\";\nimport Footer from \"../structure/Footer\";\nimport Menu from \"../structure/Menu\";\nimport TableGlobal from \"../Tables/TableGlobal\"\nimport Loader from \"../Loader/Loader\";\nimport ChartVelocity from \"../Chart/Velocity\"\nimport ChartPosition from \"../Chart/Position\"\nimport PositonWidget from \"../Widgets/Position\"\nimport LoadingWidget from \"../Widgets/Loading\"\nimport TimeWidget from '../Widgets/Time'\nimport VelocityWidget from '../Widgets/velocity';\nimport PlaceWidget from '../Widgets/LastPlace';\nimport FavoriteChecker from \"../favorites/favoritesChecker\"\nimport { FormattedMessage } from 'react-intl';\nimport { FormatTime } from \"../Scripts/time\"\n\nconst API_KEY = `${process.env.REACT_APP_API_TRAIL_KEY}`;\nconst API_URL = `${process.env.REACT_APP_API_TRAIL_URL}`;\nconst TOKEN = API_KEY;\nconst MICROSERVICE_PDFS = `${process.env.REACT_APP_PUBLIC_MICROSERVICE_PDFS}`;\n\n//for the charts\nvar LastCheckpointID = 0;\nvar Faster = [];\nvar FasterID = 0;\nexport default class AthleteDetail extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loadingGlobal: false,\n            loadingTier: false,\n            loadingGender: false,\n            loadingCheckpoint: false,\n            loadingList: false,\n            loadingFaster: false,\n            loadingSlow: false,\n            loadingAverage: false,\n            ListGlobal: [],\n            ListFaster: [],\n            ListSlow: [],\n            ListAverage: [],\n            PersonalInfo: [],\n            athleteList: [],\n            athleteListStatus: [],\n            CheckpointInfo: [],\n            AthleteID: this.props.match.params.AthleteID,\n        };\n\n    }\n\n    componentWillMount() {\n        //CACHES\n        try {\n            if (localStorage.getItem(`ListGlobal${this.props.match.params.EventID}${this.props.match.params.AthleteID}`)) {\n                const ListGlobal = JSON.parse(localStorage.getItem(`ListGlobal${this.props.match.params.EventID}${this.props.match.params.AthleteID}`))\n                this.setState({ ListGlobal: ListGlobal, loadingGlobal: true })\n            }\n            if (localStorage.getItem(`PersonalInfo${this.props.match.params.EventID}${this.props.match.params.AthleteID}`)) {\n                const PersonalInfo = JSON.parse(localStorage.getItem(`PersonalInfo${this.props.match.params.EventID}${this.props.match.params.AthleteID}`))\n                this.setState({ PersonalInfo: PersonalInfo })\n            }\n            if (localStorage.getItem(`ListFaster${this.props.match.params.CompID}`)) {\n                const ListFaster = JSON.parse(localStorage.getItem(`ListFaster${this.props.match.params.CompID}`))\n                this.setState({ ListFaster: ListFaster, loadingFaster: true })\n            }\n            if (localStorage.getItem(`ListSlow${this.props.match.params.CompID}`)) {\n                const ListFaster = JSON.parse(localStorage.getItem(`ListSlow${this.props.match.params.CompID}`))\n                this.setState({ ListSlow: ListFaster, loadingSlow: true })\n            }\n            if (localStorage.getItem(`ListAverage${this.props.match.params.CompID}`)) {\n                const ListFaster = JSON.parse(localStorage.getItem(`ListAverage${this.props.match.params.CompID}`))\n                this.setState({ ListAverage: ListFaster, loadingAverage: true })\n            }\n            if (localStorage.getItem(`CheckpointInfo${this.props.match.params.CompID}`)) {\n                const CheckpointInfo = JSON.parse(localStorage.getItem(`CheckpointInfo${this.props.match.params.CompID}`))\n                this.setState({ CheckpointInfo: CheckpointInfo, loadingCheckpoint: true })\n            }\n            if (localStorage.getItem(`athleteListStatus${this.props.match.params.CompID}${this.props.match.params.AthleteID}`)) {\n                const athleteListStatus = JSON.parse(localStorage.getItem(`athleteListStatus${this.props.match.params.CompID}${this.props.match.params.AthleteID}`))\n                this.setState({ athleteListStatus: athleteListStatus, loadingList: true })\n            }\n\n        }\n        catch{\n\n        }\n        //END CACHE\n        this.GetListGlobal();\n        this.GetCheckpointInfo();\n        this.GetListGlobalFaster();\n        this.GetListGlobalSlow();\n        this.GetListGlobalAverage();\n\n    }\n\n    GetListGlobal = async e => {\n        const API_CALL = await fetch(`${API_URL}/results/AthTimesWithPositions/${this.props.match.params.CompID}/${this.props.match.params.AthleteID}/`, {\n            headers: new Headers({\n                Authorization: TOKEN\n            })\n        });\n        const data = await API_CALL.json();\n        const dataSlice = data.slice(0, 1); //Get the personal info\n        try {\n            localStorage.setItem(`ListGlobal${this.props.match.params.EventID}${this.props.match.params.AthleteID}`, JSON.stringify(data))\n            localStorage.setItem(`PersonalInfo${this.props.match.params.EventID}${this.props.match.params.AthleteID}`, JSON.stringify(dataSlice))\n        }\n        catch{\n            localStorage.clear();\n        }\n        this.setState({ ListGlobal: data, loadingGlobal: true, PersonalInfo: dataSlice });\n    };\n\n    GetListGlobalFaster = async e => {\n        const API_CALL = await fetch(`${API_URL}/results/faster/${this.props.match.params.CompID}/`, {\n            headers: new Headers({\n                Authorization: TOKEN\n            })\n        });\n        const data = await API_CALL.json();\n        try {\n            localStorage.setItem(`ListFaster${this.props.match.params.CompID}`, JSON.stringify(data))\n        }\n        catch{\n            localStorage.clear();\n        }\n        this.setState({ ListFaster: data, loadingFaster: true });\n\n    };\n    GetListGlobalSlow = async e => {\n        const API_CALL = await fetch(`${API_URL}/results/slow/${this.props.match.params.CompID}/`, {\n            headers: new Headers({\n                Authorization: TOKEN\n            })\n        });\n        const data = await API_CALL.json();\n        try {\n            localStorage.setItem(`ListSlow${this.props.match.params.CompID}`, JSON.stringify(data))\n        }\n        catch{\n            localStorage.clear();\n        }\n        this.setState({ ListSlow: data, loadingSlow: true });\n\n    };\n    GetListGlobalAverage = async e => {\n        const API_CALL = await fetch(`${API_URL}/results/average/${this.props.match.params.CompID}/`, {\n            headers: new Headers({\n                Authorization: TOKEN\n            })\n        });\n        const data = await API_CALL.json();\n        try {\n            localStorage.setItem(`ListAverage${this.props.match.params.CompID}`, JSON.stringify(data))\n        }\n        catch{\n            localStorage.clear();\n        }\n        this.setState({ ListAverage: data, loadingAverage: true });\n\n    };\n    GetCheckpointInfo = async e => {\n        const API_CALL = await fetch(`${API_URL}/competition/Checkpoints/${this.props.match.params.CompID}/`, {\n            headers: new Headers({\n                Authorization: TOKEN\n            })\n        });\n        const data = await API_CALL.json();\n        try {\n            localStorage.setItem(`CheckpointInfo${this.props.match.params.CompID}`, JSON.stringify(data))\n\n        }\n        catch{\n            localStorage.clear();\n        }\n        this.setState({ CheckpointInfo: data, loadingCheckpoint: true });\n    };\n\n    getAthletsList = async e => {\n\n        const API_CALL = await fetch(`${API_URL}/competition/AthInfo/${this.props.match.params.CompID}/${this.props.match.params.AthleteID}/`, {\n            headers: new Headers({\n                Authorization: TOKEN\n            })\n        });\n        const data = await API_CALL.json();\n        data.map(Athlete => {\n            if (Athlete.athlete.athlete_id === parseInt(this.state.AthleteID)) {\n                try {\n                    localStorage.setItem(`athleteListStatus${this.props.match.params.CompID}${this.props.match.params.AthleteID}`, JSON.stringify(Athlete))\n                }\n                catch{\n                    localStorage.clear();\n\n                }\n                this.setState({ athleteListStatus: Athlete, loadingList: true });\n            }\n            return null;\n\n        })\n\n    };\n\n\n    tableGlobal() {\n        if (this.state.loadingGlobal === false) {\n            return (<Loader />)\n        } else {\n            if (this.state.ListGlobal.length > 0) {\n                //Calculate the data for the arrays\n                return (\n                    <TableGlobal athleteList={this.state.ListGlobal} checkpoint={this.state.CheckpointInfo} />\n                )\n            }\n            else {\n                return (<p style={{ textAlign: \"center\" }}><FormattedMessage id=\"NODATA\" /></p>)\n            }\n        }\n\n    }\n\n    ChartVelocityKMRender() {\n        if (this.state.loadingGlobal === false) {\n            return (<Loader />)\n        } else {\n            if (this.state.athleteListStatus.inscription_status_code === \"FIN\" || this.state.athleteListStatus.inscription_status_code === \"EP\") {\n                if (this.state.ListGlobal.length > 0 && !!(this.state.athleteListStatus.athlete.name)) {\n                    return (\n                        <FormattedMessage id=\"SLOWER\">\n                            {(LanguageSlow) => (\n                                <FormattedMessage id=\"AVERAGE_SPEED\">\n                                    {(LanguageAverage) => (\n\n                                        <FormattedMessage id=\"FASTER\">\n                                            {(LanguageFaster) => (\n                                                <ChartVelocity checkpoint={this.state.ListGlobal} LanguageFaster={LanguageFaster} LanguageSlow={LanguageSlow} LanguageAverage={LanguageAverage} Name={this.state.athleteListStatus.athlete.name} Slow={this.state.ListSlow.map(data => this.CalculateKMperH(data.Local, data.Tempo))} Average={this.state.ListAverage.map(data => this.CalculateKMperH(data.Local, data.Tempo))} Faster={this.state.ListFaster.map(data => this.CalculateKMperH(data.Local, data.Tempo))} Normal={this.state.ListGlobal.map(data => this.CalculateKMperH(data.local, data.acumulated_time))} />\n                                            )}\n                                        </FormattedMessage>\n                                    )}\n                                </FormattedMessage>\n                            )}\n\n                        </FormattedMessage>\n                    )\n                }\n                else {\n                    return (<p><FormattedMessage id=\"NODATA\" /></p>)\n                }\n            }\n\n\n        }\n    }\n\n    ChartVelocityMINRender() {\n        if (this.state.loadingGlobal === false) {\n            return (<Loader />)\n        } else {\n            if (this.state.athleteListStatus.inscription_status_code === \"FIN\" || this.state.athleteListStatus.inscription_status_code === \"EP\") {\n                if (this.state.ListGlobal.length > 0 && !!(this.state.athleteListStatus.athlete.name)) {\n                    return (\n                        <FormattedMessage id=\"SLOWER\">\n                            {(LanguageSlow) => (\n                                <FormattedMessage id=\"AVERAGE_SPEED\">\n                                    {(LanguageAverage) => (\n\n                                        <FormattedMessage id=\"FASTER\">\n                                            {(LanguageFaster) => (\n                                                <ChartVelocity LanguageFaster={LanguageFaster} LanguageSlow={LanguageSlow} LanguageAverage={LanguageAverage} checkpoint={this.state.ListGlobal} Name={this.state.athleteListStatus.athlete.name} Slow={this.state.ListSlow.map(data => this.CalculateMINperKM(data.Local, data.Tempo))} Average={this.state.ListAverage.map(data => this.CalculateMINperKM(data.Local, data.Tempo))} Faster={this.state.ListFaster.map(data => this.CalculateMINperKM(data.Local, data.Tempo))} Normal={this.state.ListGlobal.map(data => this.CalculateMINperKM(data.local, data.acumulated_time))} />\n                                            )}\n                                        </FormattedMessage>\n                                    )}\n                                </FormattedMessage>\n                            )}\n\n                        </FormattedMessage>\n\n                    )\n                }\n                else {\n                    return (<p><FormattedMessage id=\"NODATA\" /></p>)\n                }\n            }\n\n\n        }\n    }\n\n    ChartPositionRender() {\n        if (this.state.loadingGlobal === false && this.state.loadingFaster === false) {\n            return (<Loader />)\n        } else {\n            if (this.state.athleteListStatus.inscription_status_code === \"FIN\" || this.state.athleteListStatus.inscription_status_code === \"EP\") {\n                if (this.state.ListGlobal.length > 0 && this.state.ListGlobal.length > 0 && this.state.ListGlobal.length > 0) {\n                    //Calculate the data for the arrays\n                    var global = []\n                    var Tier = []\n                    var gender = []\n\n                    this.state.ListGlobal.map(data => global.push(data.PositionGlobal))\n                    this.state.ListGlobal.map(data => Tier.push(data.PositionTier))\n                    this.state.ListGlobal.map(data => gender.push(data.PositionGender))\n\n                    return (\n                        <FormattedMessage id=\"CATEGORY\">\n                            {(LANGUAGECATEGORY) => (\n                                <FormattedMessage id=\"GENDER\">\n                                    {(LANGUAGEGENDER) => (\n\n                                        <FormattedMessage id=\"GERAL\">\n                                            {(LANGUAGEGERAL) => (\n                                                <ChartPosition LANGUAGECATEGORY={LANGUAGECATEGORY} LANGUAGEGENDER={LANGUAGEGENDER} LANGUAGEGERAL={LANGUAGEGERAL} checkpoint={this.state.ListGlobal} Global={global} Tier={Tier} Gender={gender} />\n                                            )}\n                                        </FormattedMessage>\n                                    )}\n                                </FormattedMessage>\n                            )}\n\n                        </FormattedMessage>\n\n                    )\n                }\n                else {\n                    return (<p><FormattedMessage id=\"NODATA\" /></p>)\n                }\n            }\n\n        }\n    }\n\n    componentDidMount() {\n        this.getAthletsList()\n\n    }\n\n    getStatus() {\n\n        if (this.state.athleteListStatus.inscription_status_code === \"FIN\") {\n            return (<p style={{ color: \"#3c8dbc\" }} className=\"text-muted text-center\"> <strong><FormattedMessage id=\"FIN\" /></strong></p>);\n        } else if (this.state.athleteListStatus.inscription_status_code === \"EP\") {\n            return (<p style={{ color: \"#00a65a\" }} className=\"text-muted text-center\"> <strong><FormattedMessage id=\"EP\" /></strong></p>);\n        } else if (this.state.athleteListStatus.inscription_status_code === \"DNS\") {\n            return (<p style={{ color: \"#f39c12\" }} className=\"text-muted text-center\"> <strong><FormattedMessage id=\"DNS\" /></strong></p>);\n        } else if (this.state.athleteListStatus.inscription_status_code === \"D\") {\n            return (<p style={{ color: \"#f39c12\" }} className=\"text-muted text-center\"> <strong><FormattedMessage id=\"D\" /></strong></p>);\n        } else if (this.state.athleteListStatus.inscription_status_code === \"DNF\") {\n            return (<p style={{ color: \"#dd4b39\" }} className=\"text-muted text-center\"> <strong><FormattedMessage id=\"DNF\" /></strong></p>);\n        } else if (this.state.athleteListStatus.inscription_status_code === \"DSQ\") {\n            return (<p style={{ color: \"#dd4b39\" }} className=\"text-muted text-center\"> <strong><FormattedMessage id=\"DSQ\" /></strong></p>);\n        }\n    }\n\n    CalculateKMperH(checkpointName, time) {\n        if (time) {\n            var distance\n            this.state.CheckpointInfo.map(checkpoint => {\n                if (checkpoint.checkpoint.local === checkpointName) {\n                    distance = checkpoint.distancia_acumulada\n                }\n                return null;\n            })\n            var km = distance / 1000;\n\n            var TimeSplit = time.split(\":\")\n            var H = TimeSplit[0]\n            var M = TimeSplit[1]\n            var S = TimeSplit[2]\n            var finaltime = parseFloat(H) + parseFloat((M / 60)) + parseFloat((S / 3600))\n            var KMperH = parseFloat(km) / parseFloat(finaltime)\n            if (isNaN(KMperH)) {\n                KMperH = 0;\n            }\n            if (KMperH === Infinity) {\n                KMperH = 0;\n            }\n            return (KMperH.toFixed(2));\n        }\n\n    }\n\n    CalculateMINperKM(checkpointName, time) {\n        if (time) {\n            var MInperKM = parseFloat(60 / this.CalculateKMperH(checkpointName, time))\n            if (!isFinite(MInperKM)) {\n                MInperKM = 0;\n            }\n            if (isNaN(MInperKM)) {\n                MInperKM = 0;\n            }\n            if (MInperKM === Infinity) {\n                MInperKM = 0;\n            }\n            return (MInperKM.toFixed(2));\n        }\n\n\n    }\n\n    PositionWidgetRender() {\n        if (!!(this.state.ListGlobal[this.GetLastPosition()])) //check if is undefined, is because is awaiting for the api response\n        {\n            if (this.state.athleteListStatus.inscription_status_code === \"FIN\" || this.state.athleteListStatus.inscription_status_code === \"EP\") {\n                return (\n                    <div>\n                        <PositonWidget color={\"aqua\"} positionGlobal={(this.state.ListGlobal[this.GetLastPosition()].PositionGlobal) === 0 ? \"-\" : this.state.ListGlobal[this.GetLastPosition()].PositionGlobal} positionTier={(this.state.ListGlobal[this.GetLastPosition()].PositionTier) === 0 ? \"-\" : this.state.ListGlobal[this.GetLastPosition()].PositionTier} positionGender={(this.state.ListGlobal[this.GetLastPosition()].PositionGender) === 0 ? \"-\" : this.state.ListGlobal[this.GetLastPosition()].PositionGender} />\n                    </div>\n                )\n            }\n\n        }\n        else\n            if (this.state.athleteListStatus.inscription_status_code === \"FIN\" || this.state.athleteListStatus.inscription_status_code === \"EP\") {\n                return (\n                    < LoadingWidget color={\"aqua\"} text={< FormattedMessage id=\"LOADING\" />} />\n                )\n            }\n\n    }\n\n    GetLastPosition() {\n        var position = 0;\n        this.state.ListGlobal.forEach(element => {\n            if (element.PositionGlobal > 0) {\n                position = position + 1;\n            }\n        })\n        return (position)\n    }\n\n    TimeVelocityWidgetRender() {\n\n        if (!!(this.state.ListGlobal[this.GetLastPosition()])) //check if is undefined, is because is awaiting for the api response\n        {\n            var KM = 0;\n            var MIN = 0;\n            this.state.ListGlobal.map(data => {\n                if (parseFloat(this.CalculateKMperH(data.local, data.acumulated_time)) !== 0) {\n                    KM = KM + parseFloat(this.CalculateKMperH(data.local, data.acumulated_time))\n                    console.log(KM)\n                }\n                return null\n            })\n            this.state.ListGlobal.map(data => {\n                if (parseFloat(this.CalculateMINperKM(data.local, data.acumulated_time)) !== 0) {\n                    MIN = MIN + parseFloat(this.CalculateMINperKM(data.local, data.acumulated_time))\n                }\n                return null\n            })\n\n            var AvarageKM = (KM / (this.GetLastPosition())).toFixed(2)\n            var AvarageMIN = (MIN / (this.GetLastPosition())).toFixed(2)\n            if (this.state.athleteListStatus.inscription_status_code === \"FIN\" || this.state.athleteListStatus.inscription_status_code === \"EP\") {\n\n                return (\n                    <div>\n                        <TimeWidget time={FormatTime(this.state.ListGlobal[this.GetLastPosition()].acumulated_time)} name={<FormattedMessage id=\"TIME\" />} color={\"yellow\"} />\n                        <VelocityWidget name={<FormattedMessage id=\"AVERAGESPEED\" />} speedKM={isNaN(AvarageKM) ? \"-\" : AvarageKM + \" KM/H\"} speedMIN={isNaN(AvarageMIN) ? \"-\" : AvarageMIN + \" MIN/KM\"} color={\"red\"} />\n                        <PlaceWidget place={this.state.ListGlobal[this.GetLastPosition()].local} color={\"green\"} />\n                    </div>\n\n                )\n            }\n        }\n        else {\n            if (this.state.athleteListStatus.inscription_status_code === \"FIN\" || this.state.athleteListStatus.inscription_status_code === \"EP\") {\n                return (\n                    <div>\n\n                        < LoadingWidget color={\"yellow\"} text={< FormattedMessage id=\"LOADING\" />} />\n                        < LoadingWidget color={\"red\"} text={< FormattedMessage id=\"LOADING\" />} />\n                        < LoadingWidget color={\"green\"} text={< FormattedMessage id=\"LOADING\" />} />\n                    </div>\n                )\n            }\n\n        }\n    }\n\n    chartsRender() {\n        if (this.state.athleteListStatus.inscription_status_code === \"FIN\" || this.state.athleteListStatus.inscription_status_code === \"EP\") {\n\n            return (\n                <div style={{ float: 'right' }} className=\"col-md-9\">\n                    <div className=\"nav-tabs-custom\" >\n                        <ul className=\"nav nav-tabs\">\n                            <li className=\"active\"><a href=\"#VelocityKMperH\" data-toggle=\"tab\">< FormattedMessage id=\"SPEED\" /> KM/H</a></li>\n                            <li ><a href=\"#VelocityMINperH\" data-toggle=\"tab\">< FormattedMessage id=\"SPEED\" /> MIN/KM</a></li>\n                            <li><a href=\"#Position\" data-toggle=\"tab\">< FormattedMessage id=\"POSITION\" /></a></li>\n                        </ul>\n                        <div className=\"tab-content\">\n                            <div className=\"active tab-pane\" id=\"VelocityKMperH\">\n                                {/* Post */}\n                                <div className=\"post\">\n                                    <div className=\"chart\">\n                                        {this.ChartVelocityKMRender()}\n                                    </div>\n                                </div>\n                                {/* /.post */}\n                            </div>\n                            <div className=\"tab-pane\" id=\"VelocityMINperH\">\n                                {/* Post */}\n                                <div className=\"post\">\n                                    <div className=\"chart\">\n                                        {this.ChartVelocityMINRender()}\n                                    </div>\n                                </div>\n                                {/* /.post */}\n                            </div>\n                            {/* /.tab-pane */}\n                            <div className=\"tab-pane\" id=\"Position\">\n                                <div className=\"post\">\n                                    <div className=\"chart\">\n                                        {this.ChartPositionRender()}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        {/* /.tab-content */}\n                    </div>\n                    {/* /.nav-tabs-custom */}\n                </div>\n\n            )\n        }\n\n\n    }\n\n    getLastCheckpoint() {\n        var LastPositon = (this.state.ListGlobal.slice(-1).pop())\n        if (!!(LastPositon)) {\n            this.state.CheckpointInfo.map(checkpoint => {\n                if (checkpoint.checkpoint.local === LastPositon.local) {\n                    if (LastCheckpointID === 0) {\n                        LastCheckpointID = checkpoint.checkpoint.checkpoint_id\n                        //FASTER\n                    }\n\n                }\n                return null\n            }\n            )\n        }\n    }\n\n    showCertificateButton() {\n\n        if (!!(this.state.athleteListStatus.athlete)) {\n\n            if (this.state.athleteListStatus.competition.certification === 1 && this.state.athleteListStatus.inscription_status_code === \"FIN\") {\n                if (!!(this.state.ListGlobal[this.state.ListGlobal.length - 1])) {\n                    return (\n                        <div>\n                            <br></br>\n                            <button href=\"##\" className=\"btn btn-success  btn-block\" onClick={() => this.getCertificate()}><b>< FormattedMessage id=\"CERTIFICATE\" /></b></button>\n                        </div>\n                    )\n                }\n                else {\n                    return (\n                        <div>\n                            <br></br>\n\n                            <button disabled className=\"btn btn-success  btn-block\" ><b> <i class=\"fa fa-refresh fa-spin\"></i> < FormattedMessage id=\"CERTIFICATE\" /></b>\n                            </button>\n\n                        </div>)\n                }\n            }\n\n        }\n    }\n\n    getCertificate() {\n        if (!!(this.state.athleteListStatus.athlete) && !!(this.state.ListGlobal[this.state.ListGlobal.length - 1])) {\n\n            var ID_Template = this.state.athleteListStatus.competition.cert_tpl\n            var Codigo_Validacao = this.state.athleteListStatus.competition.cert_code\n            var Nome_Atleta = encodeURIComponent(this.state.athleteListStatus.athlete.name)\n            var Sexo = this.state.athleteListStatus.athlete.gender\n            var Prova = this.state.athleteListStatus.competition.name\n            var Posicao_Escalao = this.state.ListGlobal[this.state.ListGlobal.length - 1].PositionTier\n            var Escalao = encodeURIComponent(this.state.athleteListStatus.category)\n            var Posicao_Geral = this.state.ListGlobal[this.state.ListGlobal.length - 1].PositionGlobal\n            var Tempo = this.state.ListGlobal[this.state.ListGlobal.length - 1].acumulated_time\n            var Peitoral = this.state.athleteListStatus.dorsal_number\n            var Clube = encodeURIComponent(this.state.athleteListStatus.club)\n\n            var Total_Info_Recebida = ID_Template + Nome_Atleta + Sexo + Prova + Posicao_Geral + Escalao + Posicao_Escalao + Tempo + Peitoral + Clube + Codigo_Validacao;\n\n            var md5 = require('md5');\n            var Hash_Calculada = md5(Total_Info_Recebida)\n            var url = `${MICROSERVICE_PDFS}/${ID_Template}/${Nome_Atleta}/${Sexo}/${Prova}/${Posicao_Geral}/${Escalao}/${Posicao_Escalao}/${Tempo}/${Peitoral}/${Clube}/${Hash_Calculada}`\n\n            window.location.replace(url);\n\n        }\n    }\n\n\n\n    render() {\n        return (\n            <div>\n                <Header eventID={this.props.match.params.EventID} />\n                {/*Send the event id to the MENU, to get the competition list*/}\n                <Menu eventID={this.props.match.params.EventID} competitionID={this.props.match.params.CompID} />\n                <div className=\"content-wrapper\">\n                    <section class=\"content-header\" >\n                        {/*Check if data is loading*/}\n                        {(() => {\n                            if (this.state.loadingCheckpoint === false) {\n                                return (\n                                    <section className=\"content\">\n\n                                        <div className=\"row\">\n                                            <div className=\"col-xs-12\">\n                                                <div className=\"box\">\n                                                    {/* /.box-body */}\n                                                    <div className=\"box-body\" style={{ display: 'flex', justifyContent: 'center' }}>\n                                                        <Loader />\n                                                    </div>\n\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </section>\n                                )\n                            }\n                            else {\n                                return (\n                                    <section className=\"content\">\n                                        <div className=\"row\">\n                                            {/* widget for the number of participants */}\n                                            {this.PositionWidgetRender()}\n                                            {this.TimeVelocityWidgetRender()}\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-md-3\">\n                                                {/* Profile Image */}\n                                                <div className=\"box box-primary\">\n                                                    <div className=\"box-body box-profile\">\n                                                        <img className=\"profile-user-img img-responsive img-circle\" src={!!(this.state.athleteListStatus.athlete) ? this.state.athleteListStatus.athlete.photo_url : \"\"} alt=\"User profile picture\" />\n                                                        {/* NEED TO CHECK IF IS UNDEFINED OR IT WILL CRASH*/}\n                                                        <h3 className=\"profile-username text-center\"> {!!(this.state.athleteListStatus.athlete) ? this.state.athleteListStatus.athlete.name : \"\"}</h3>\n                                                        {this.getStatus()}\n                                                        <ul className=\"list-group list-group-unbordered\">\n                                                            <li className=\"list-group-item\">\n                                                                <b>< FormattedMessage id=\"DORSAL\" /></b> <div className=\"pull-right\">{this.state.athleteListStatus.dorsal_number}</div>\n                                                            </li>\n                                                            <li className=\"list-group-item\">\n                                                                <b>< FormattedMessage id=\"COUNTRY\" /></b> <div className=\"pull-right\"> {!!(this.state.athleteListStatus.athlete) ? this.state.athleteListStatus.athlete.nacionality : \"\"}</div>\n                                                            </li>\n\n                                                            <li className=\"list-group-item\">\n                                                                <b>< FormattedMessage id=\"CATEGORY\" /></b> <div className=\"pull-right\">{this.state.athleteListStatus.category}</div>\n                                                            </li>\n                                                            <li className=\"list-group-item\">\n                                                                <p style={{ textAlign: \"right\" }}>\n                                                                    <div className=\"pull-left\"><b>< FormattedMessage id=\"TEAM\" /></b> </div> {!!(this.state.athleteListStatus.club) ? this.state.athleteListStatus.club : \"\"}\n                                                                </p>\n                                                            </li>\n                                                            <li className=\"list-group-item\">\n                                                                <b>< FormattedMessage id=\"COMPETITION\" /></b> <div className=\"pull-right\"> {!!(this.state.athleteListStatus.competition) ? this.state.athleteListStatus.competition.name : \"\"}</div>\n                                                            </li>\n                                                        </ul>\n                                                        <div>\n                                                            <FavoriteChecker ListaFavoritos={this.props.match.params.AthleteID} AthleteDetail={true} />\n                                                        </div>\n                                                        <div>\n\n                                                            {this.showCertificateButton()}\n                                                        </div>\n\n\n                                                    </div>\n                                                    {/* /.box-body */}\n                                                </div>\n                                                {/* /.box */}\n                                                {/* /.col (LEFT) */}\n\n                                            </div>\n                                            {/* /.col */}\n                                            <div className=\"col-md-9\">\n                                                <div className=\"box box-primary\">\n                                                    <ul className=\"nav nav-tabs\">\n                                                    </ul>\n                                                    <div className=\"tab-content\">\n                                                        <div className=\"active tab-pane\" id=\"Global\">\n                                                            {/* Post */}\n                                                            <div className=\"post\">\n                                                                {/* /.user-block */}\n\n                                                                {this.tableGlobal()}\n\n\n                                                            </div>\n                                                            {/* /.post */}\n                                                        </div>\n                                                        {/* /.tab-pane */}\n\n                                                        {/* /.tab-pane */}\n\n                                                        {/* /.tab-pane */}\n                                                    </div>\n                                                    {/* /.tab-content */}\n                                                </div>\n                                                {/* /.nav-tabs-custom */}\n                                            </div>\n\n                                            {/* LINE CHART */}\n                                            {this.chartsRender()}\n\n                                        </div>\n                                        {/* /.row */}\n                                    </section>\n\n                                )\n                            }\n                        })()}\n                    </section>\n                </div>\n                <Footer eventID={this.props.match.params.EventID} />\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport ReactTable from \"react-table\";\nimport { Link } from \"react-router-dom\";\nimport {FormatTime} from \"../Scripts/time\"\nimport { FormattedMessage } from 'react-intl';\n\nexport default class TableGlobal extends Component {\n\n  \n  render() {\n    //Info for the filters\n    //Table\n    const columns = [\n      {\n        Header: \"Id\",\n        accessor: \"athleteid\",\n        sortable: false,\n        style: {\n          textAlign: \"Center\"\n        },\n\n        show: false\n      },\n\n      {\n        Header: <FormattedMessage id=\"NAME\" />,\n        accessor: \"athleteName\",\n        filterable: false,\n        sortable: false,\n\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => (\n\n            <Link\n              to={{ pathname: `/AthleteDetail/${this.props.eventID}/${this.props.compID}/${row.original.athleteid}` }}\n            >\n              <span style={{ color: \"#3c8dbc\" }}>{row.value} </span>\n            </Link>\n          )\n\n      },\n      {\n        Header: <FormattedMessage id=\"TIME\" />,\n        accessor: \"time\",\n        filterable: false,\n        sortable: false,\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => FormatTime(row.value)\n\n      }\n    ];\n    return (\n      <ReactTable\n        columns={columns}\n        data={this.props.athleteList}\n        filterable\n        noDataText={<FormattedMessage id=\"NODATA\" />}\n        defaultPageSize={parseInt(this.props.athleteList.length)}\n        showPagination={false}\n        showPaginationTop={false}\n        showPaginationBottom={false}\n        showPageSizeOptions={false}\n        showPageJump={false}\n        collapseOnSortingChange={true}\n        collapseOnPageChange={true}\n        collapseOnDataChange={true}\n        freezeWhenExpanded={false}\n        sortable={false}\n        multiSort={false}\n        resizable={false}\n        defaultSortDesc={false}\n        pageText={<FormattedMessage id=\"PAGE\" />}\n        rowsText={\"\"}\n        className=\"-striped -highlight\"\n      />\n    );\n  }\n}\n","import React, { Component } from 'react'\nimport Header from \"../structure/Header\";\nimport Footer from \"../structure/Footer\";\nimport Menu from \"../structure/Menu\";\nimport TableTeams from \"../Tables/TableTeams\";\nimport Loader from \"../Loader/Loader\";\nimport { FormatTime } from \"../Scripts/time\"\nimport { FormattedMessage } from 'react-intl';\n\n\nconst API_KEY = `${process.env.REACT_APP_API_TRAIL_KEY}`;\nconst API_URL = `${process.env.REACT_APP_API_TRAIL_URL}`;\nconst TOKEN = API_KEY;\n\n//Control Variable\nvar firstrun = 0;\n\nexport default class Teams extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            teamlist: [],\n            loading: false,\n            loadingCheckpoint: false,\n            genderState: \"MALE\",\n            checkpointid: 0\n\n        };\n\n\n    }\n\n    componentWillMount() {\n        try {\n            if (JSON.parse(localStorage.getItem(`checkpointid${this.props.match.params.EventID}${this.props.match.params.CompID}`))) {\n                const checkpointid = JSON.parse(localStorage.getItem(`checkpointid${this.props.match.params.EventID}${this.props.match.params.CompID}`))\n                this.setState({ loadingCheckpoint: true, checkpointid: checkpointid })\n            }\n        }\n        catch{\n            localStorage.clear();\n\n        }\n        this.GetLastCheckpoint();\n        this.GetLastCheckpoint = this.GetLastCheckpoint.bind(this);\n    }\n\n    GetLastCheckpoint = async () => {\n        const API_CALL = await fetch(`${API_URL}/competition/Checkpoints/${this.props.match.params.CompID}/`, {\n            headers: new Headers({\n                Authorization: TOKEN\n            })\n        });\n        const data = await API_CALL.json();\n        //dont use the ===, dont work for some reason\n        try {\n            data.map(checkpoint => {\n                if (checkpoint.checkpoint_order == 99) {\n                    localStorage.setItem(`checkpointid${this.props.match.params.EventID}${this.props.match.params.CompID}`, JSON.stringify(checkpoint.checkpoint.checkpoint_id))\n                    this.setState({ loadingCheckpoint: true, checkpointid: checkpoint.checkpoint.checkpoint_id })\n                }\n            })\n        }\n        catch{\n            localStorage.clear();\n\n        }\n    };\n    GetTeamsMale = async () => {\n        if (this.state.loadingCheckpoint === true) {\n            const API_CALL = await fetch(`${API_URL}/results/teamresultsMALE/${this.props.match.params.CompID}/${this.state.checkpointid}/`, {\n                headers: new Headers({\n                    Authorization: TOKEN\n                })\n            });\n            try {\n                const data = await API_CALL.json();\n                localStorage.setItem(`teamlistMale${this.props.match.params.EventID}${this.props.match.params.CompID}`, JSON.stringify(data))\n                this.setState({ teamlist: data, loading: true })\n            }\n            catch{\n\n            }\n           \n        }\n    };\n\n    GetTeamsFemale = async () => {\n        const API_CALL = await fetch(`${API_URL}/results/teamresultsFEMALE/${this.props.match.params.CompID}/${this.state.checkpointid}/`, {\n            headers: new Headers({\n                Authorization: TOKEN\n            })\n        });\n        try {\n            const data = await API_CALL.json();\n            localStorage.setItem(`teamlistFemale${this.props.match.params.EventID}${this.props.match.params.CompID}`, JSON.stringify(data))\n            this.setState({ teamlist: data, loading: true })\n        }\n        catch{\n\n        }\n        \n    };\n\n    GetTeamsMaleorCache() {\n        try {\n            if (JSON.parse(localStorage.getItem(`teamlistMale${this.props.match.params.EventID}${this.props.match.params.CompID}`))) {\n                const teamlist = JSON.parse(localStorage.getItem(`teamlistMale${this.props.match.params.EventID}${this.props.match.params.CompID}`))\n                this.setState({ teamlist: teamlist, loading: true })\n            }\n        }\n        catch{\n\n        }\n        this.GetTeamsMale()\n    }\n\n    GetTeamsFemaleorCache() {\n        try {\n            if (JSON.parse(localStorage.getItem(`teamlistFemale${this.props.match.params.EventID}${this.props.match.params.CompID}`))) {\n                const teamlist = JSON.parse(localStorage.getItem(`teamlistFemale${this.props.match.params.EventID}${this.props.match.params.CompID}`))\n                this.setState({ teamlist: teamlist, loading: true })\n            }\n        }\n        catch{\n\n        }\n        this.GetTeamsFemale()\n    }\n\n    UpdateStateGender(gender) {\n\n        if (this.state.loadingCheckpoint === true) {\n            if (gender === \"MALE\") {\n                this.setState({ genderState: gender, loading: false }, this.GetTeamsMaleorCache)\n            }\n            else {\n                this.setState({ genderState: gender, loading: false }, this.GetTeamsFemaleorCache)\n            }\n        }\n\n\n    }\n    /*when props change*/\n    componentDidUpdate(prevProps) {\n        if (prevProps.match.params.CompID !== this.props.match.params.CompID) {\n            this.GetLastCheckpoint();\n            this.UpdateStateGender(\"MALE\");\n\n        }\n    }\n\n\n    checkIFthereISDataTOShow() {\n        if (this.state.teamlist.length > 0) {\n            return (\n                this.state.teamlist.map(team => {\n                    var APItime = team.Time.split(\":\")\n                    var timeLimited = APItime[0] + \":\" + APItime[1] + \":\" + APItime[2].substring(0, 2)\n                    return (\n                        <div className=\"col-md-4\">\n                            {/* general form elements */}\n                            <div className=\"box box-primary\">\n                                <div className=\"box-header with-border\">\n                                    <div className=\"row\" >\n                                        <div style={{ textAlign: \"center\" }} className=\"col-md-12\">\n                                            <h5>\n                                                <a class=\"btn btn-app\" style={{ pointerEvents: \"none\", fontSize: \"23px\", float: \"left\" }}> <strong>{team.Position}</strong> </a>\n\n                                                <span style={{ fontSize: \"18px\", }}>{team.Team.substring(0, 70)}</span>\n                                                <br></br>\n                                            </h5>\n                                        </div>\n                                    </div>\n                                </div>\n                                {/* /.box-header */}\n                                {/* form start */}\n                                <div className=\"box-body\">\n                                    <div style={{ textAlign: \"center\" }} className=\"col-md-4\">\n                                        <img className=\"profile-user-img img-responsive img-circle\" src={team.LogoURL} alt=\"User profile picture\" />\n                                        <span style={{ fontSize: \"20px\" }}>\n                                            < FormattedMessage id=\"TIMECAPS\" />: </span>\n                                        <span style={{ fontSize: \"20px\" }}>\n                                            <strong>{FormatTime(timeLimited)}</strong> </span>\n                                    </div>\n                                    <div style={{ textAlign: \"center\" }} className=\"col-md-8\">\n                                        <TableTeams eventID={this.props.match.params.EventID} compID={this.props.match.params.CompID} athleteList={team.Athlets} />\n                                    </div>\n                                </div>\n                                {/* /.box-body */}\n\n                            </div>\n                            {/* /.box */}\n\n                        </div>\n\n                    )\n                })\n            )\n\n        }\n        else {\n            return (\n                <div className=\"col-md-12\">\n                    {/* general form elements */}\n                    <div className=\"box box-primary\">\n\n                        {/* /.box-header */}\n                        {/* form start */}\n                        <form role=\"form\">\n                            <div className=\"box-body\">\n                                <p>< FormattedMessage id=\"MESSAGETEAMSDATA\" /></p>\n\n                            </div>\n                            {/* /.box-body */}\n\n                        </form>\n                    </div>\n                    {/* /.box */}\n\n                </div>\n\n            )\n        }\n\n    }\n\n    StaticElementTeamM() {\n        if (this.state.genderState === \"MALE\") {\n\n            return (\n                <th key=\"MALE\" > <a style={{ color: '#37474F' }} onClick={() => this.UpdateStateGender(\"MALE\")} href=\"#\">< FormattedMessage id=\"MEN\" /><i class=\"fa fa-fw fa-male\"></i></a></th>\n            )\n        }\n        else {\n            return (\n                <th key=\"MALE\" > <a style={{ color: 'white' }} onClick={() => this.UpdateStateGender(\"MALE\")} href=\"#\">< FormattedMessage id=\"MEN\" /><i class=\"fa fa-fw fa-male\"></i></a></th>\n            )\n\n        }\n    }\n\n    StaticElementTeamF() {\n        if (this.state.genderState === \"FEMALE\") {\n            return (\n\n                <th key=\"FEMALE\" > <a style={{ color: '#37474F' }} onClick={() => this.UpdateStateGender(\"FEMALE\")} href=\"#\">< FormattedMessage id=\"WOMEN\" /><i class=\"fa fa-fw fa-female\"></i></a></th>\n            )\n        }\n        else {\n            return (\n\n                <th key=\"FEMALE\" > <a style={{ color: 'white' }} onClick={() => this.UpdateStateGender(\"FEMALE\")} href=\"#\">< FormattedMessage id=\"WOMEN\" /><i class=\"fa fa-fw fa-female\"></i></a></th>\n            )\n\n        }\n    }\n\n    render() {\n        if (this.state.loadingCheckpoint === true) {\n            if (firstrun === 0) {\n                this.GetTeamsMaleorCache()\n                firstrun = 1;\n            }\n        }\n\n        return (\n\n            <div>\n                <Header eventID={this.props.match.params.EventID} />\n                {/*Send the event id to the MENU, to get the competition list*/}\n                <Menu eventID={this.props.match.params.EventID} competitionID={this.props.match.params.CompID} />\n                {/* Content Wrapper. Contains page content */}\n\n                <div className=\"content-wrapper\">\n\n                    <div\n                        style={{\n                            paddingTop: \"30px\",\n                            background: \"#367fa9\",\n                            zIndex: 999999,\n                            fontSize: 16,\n                            fontWeight: 600\n                        }}\n                    >\n                        <table className=\"text-center\" style={{ width: \"100%\", borderSpacing: \"10px\", borderCollapse: \"separate\" }}>\n                            <tbody>\n                                <tr >\n                                    {this.StaticElementTeamM()}\n                                    {this.StaticElementTeamF()}\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                    <section className=\"content-header\">\n                        <h1>\n                            <span style={{ float: \"right\" }}>{(this.state.genderState == \"MALE\") ? < FormattedMessage id=\"MEN\" /> : < FormattedMessage id=\"WOMEN\" />}</span>\n\n                            <span >{this.props.match.params.CompName}</span>\n                        </h1>\n                    </section>\n                    {(() => {\n                        if (this.state.loading === false) {\n                            return (\n                                <section className=\"content\">\n                                    <div className=\"row\">\n                                        <div className=\"col-xs-12\">\n                                            <div className=\"box\">\n                                                {/* /.box-body */}\n                                                <div className=\"box-body\" style={{ display: 'flex', justifyContent: 'center' }}>\n                                                    <Loader />\n                                                </div>\n\n                                            </div>\n                                        </div>\n                                    </div>\n                                </section>\n                            )\n                        }\n                        else {\n                            return (\n                                <section className=\"content\">\n\n                                    <div className=\"row\">\n                                        {/* left column */}\n                                        {this.checkIFthereISDataTOShow()}\n                                    </div>\n                                    {/* /.row */}\n                                </section>\n                            )\n\n\n\n                        }\n                    })()}\n                </div>\n                <Footer eventID={this.props.match.params.EventID} />\n\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\nimport { Link } from \"react-router-dom\";\nimport Favorites from \"../favorites/favoritesChecker\"\nimport { calculatePagination } from \"../Scripts/PaginationHelper\"\nimport { minimalSize } from \"../Scripts/PaginationHelper\"\n\nimport { FormattedMessage } from 'react-intl';\n\nvar size = window.innerWidth;\n\nexport default class TableFavorites extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: this.props.athleteList\n    };\n  }\n  CheckSize() {\n    if (size > 800) {\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n\n\n  removeFav(id, index) {\n    return (<Favorites tableFav={true} ListaFavoritos={id} />)\n  }\n  render() {\n    //Info for the filters\n    //get the category\n    let category = this.props.athleteList.map(athelete => {\n      return athelete.category;\n    });\n    //remove duplicates\n    const Tableuniquecategory = [...new Set(category.sort())];\n    //get the nacionality\n    let nacionality = this.props.athleteList.map(athelete => {\n      return athelete.athlete.nacionality;\n    });\n    //remove duplicates\n    const Tableuniquenacionality = [...new Set(nacionality.sort())];\n    //get the competitons\n    let competition = this.props.athleteList.map(athelete => {\n      return athelete.competition.name;\n    });\n    //remove duplicates\n    const Tableuniquecompetition = [...new Set(competition.sort())];\n    //get the Club\n    let club = this.props.athleteList.map(athelete => {\n      return athelete.club;\n    });\n    //remove duplicates\n    const Tableuniqueclub = [...new Set(club.sort())];\n    //get the inscription_status_code\n    let inscription_status_code = this.props.athleteList.map(athelete => {\n      return athelete.inscription_status_code;\n    });\n    //remove duplicates\n    const Tableuniqueinscription_status_code = [\n      ...new Set(inscription_status_code.sort())\n    ];\n\n    //Table\n    const columns = [\n      {\n        Header: \"Id\",\n        accessor: \"athlete_athlete.athlete_id\",\n        sortable: false,\n        style: {\n          textAlign: \"Center\"\n        },\n        width: 100,\n        maxWidth: 100,\n        show: false\n      },\n      {\n\n        Header: (size > 800) ? <FormattedMessage id=\"DORSAL\" /> : \"PTL\",\n        id: \"dorsal_number\",\n        accessor: d => Number(d.dorsal_number),\n        style: {\n          textAlign: \"Center\"\n        },\n        maxWidth: (size > 800) ? 100 : 60,\n\n        Filter: ({ filter, onChange }) => (\n          <FormattedMessage id=\"SEARCH\" >\n            {txt => <input\n              onChange={event => onChange(event.target.value)}\n              value={filter ? filter.value : \"\"}\n              placeholder={txt}\n              style={{\n                width: \"100%\",\n                textAlign: \"Center\"\n              }}\n            />}\n          </FormattedMessage>\n        ),\n        Cell: row => (\n\n          <Link\n            to={{ pathname: `/AthleteDetail/${this.props.eventID}/${row.original.competition.competition_id}/${row.original.athlete.athlete_id}` }}\n          >\n            <span style={{ color: \"#3c8dbc\" }}>{row.value} </span>\n          </Link>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"NAME\" />,\n        id:\"NAME\",\n        accessor: row => `${row.athlete.ranking} ${row.athlete.rankingLast}`,\n        maxWidth: (size > 800) ? 350 : 140,\n        style: {\n          textAlign: \"center\"\n        },\n        filterMethod: (filter, row) =>\n        String(row._original.athlete.ranking.toLowerCase()).startsWith(filter.value) ||\n        String(row._original.athlete.rankingLast.toLowerCase()).startsWith(filter.value) ||\n        String(row._original.athlete.ranking.toUpperCase()).startsWith(filter.value) ||\n        String(row._original.athlete.rankingLast.toUpperCase()).startsWith(filter.value) ||\n        String(row._original.athlete.ranking).startsWith(filter.value) ||\n        String(row._original.athlete.rankingLast).startsWith(filter.value) ||\n        String(row._original.athlete.ranking+\" \"+row._original.athlete.rankingLast).startsWith(filter.value) ||\n        String(row._original.athlete.ranking.toUpperCase()+\" \"+row._original.athlete.rankingLast.toUpperCase()).startsWith(filter.value)||\n        String(row._original.athlete.ranking.toLowerCase()+\" \"+row._original.athlete.rankingLast.toLowerCase()).startsWith(filter.value),  \n        Filter: ({ filter, onChange }) => (\n          <FormattedMessage id=\"SEARCH\" >\n            {txt => <input\n              onChange={event => onChange(event.target.value)}\n              value={filter ? filter.value : \"\"}\n              placeholder={txt}\n              style={{\n                width: \"100%\",\n                textAlign: \"Center\"\n              }}\n            />}\n          </FormattedMessage>\n\n        ),\n        Cell: row => (\n\n          <Link\n            to={{ pathname: `/AthleteDetail/${this.props.eventID}/${row.original.competition.competition_id}/${row.original.athlete.athlete_id}` }}\n          >\n            <span style={{ color: \"#3c8dbc\" }}>{row.value} </span>\n          </Link>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"TEAM\" />,\n        maxWidth:400,\n        accessor: \"club\",\n        style: {\n          textAlign: \"Center\"\n        },\n        show: this.CheckSize(),\n        Cell: row => row.value,\n        filterMethod: (filter, row) => {\n          if (filter.value === \"\") {\n            return true;\n          }\n\n          if (Tableuniqueclub.includes(filter.value)) {\n            return row[filter.id] === filter.value;\n          } else {\n            return true;\n          }\n        },\n        Filter: ({ filter, onChange }) => (\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\", textAlignLast: \"center\" }}\n\n            value={filter ? filter.value : \"all\"}\n          >\n            <FormattedMessage id=\"ALL\">\n              {txt => <option value=\"all\">{txt}</option>}\n            </FormattedMessage>\n            {Tableuniqueclub.map(k => {\n              return (\n                <option key={k.toString()} value={k}>\n                  {k}\n                </option>\n              );\n            })}\n          </select>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"CATEGORY\" />,\n        accessor: \"category\",\n        maxWidth: (size > 800) ? 150 : 95,\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => row.value,\n        filterMethod: (filter, row) => {\n          if (filter.value === \"\") {\n            return true;\n          }\n\n          if (Tableuniquecategory.includes(filter.value)) {\n            return row[filter.id] === filter.value;\n          } else {\n            return true;\n          }\n        },\n        Filter: ({ filter, onChange }) => (\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\", textAlignLast: \"center\" }}\n\n            value={filter ? filter.value : \"all\"}\n          >\n            <FormattedMessage id=\"ALL\">\n              {txt => <option value=\"all\">{txt}</option>}\n            </FormattedMessage>\n            {Tableuniquecategory.map(k => {\n              return (\n                <option key={k.toString()} value={k}>\n                  {k}\n                </option>\n              );\n            })}\n          </select>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"COMPETITION\" />,\n        accessor: \"competition.name\",\n        maxWidth:150,\n        show: this.CheckSize(),\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => row.value,\n        filterMethod: (filter, row) => {\n          if (filter.value === \"\") {\n            return true;\n          }\n\n          if (Tableuniquecompetition.includes(filter.value)) {\n            return row[filter.id] === filter.value;\n          } else {\n            return true;\n          }\n        },\n        Filter: ({ filter, onChange }) => (\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\", textAlignLast: \"center\" }}\n\n            value={filter ? filter.value : \"all\"}\n          >\n            <FormattedMessage id=\"ALL\">\n              {txt => <option value=\"all\">{txt}</option>}\n            </FormattedMessage>\n            {Tableuniquecompetition.map(k => {\n              return (\n                <option key={k.toString()} value={k}>\n                  {k}\n                </option>\n              );\n            })}\n          </select>\n        )\n      },\n      {\n        Header: \"Prova\",\n        maxWidth:150,\n        accessor: \"competition.competition_id\",\n        show: false,\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => row.value,\n        filterMethod: (filter, row) => {\n          if (filter.value === \"\") {\n            return true;\n          }\n\n          if (Tableuniquecompetition.includes(filter.value)) {\n            return row[filter.id] === filter.value;\n          } else {\n            return true;\n          }\n        },\n        Filter: ({ filter, onChange }) => (\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\", textAlignLast: \"center\" }}\n            value={filter ? filter.value : \"all\"}\n          >\n            <FormattedMessage id=\"ALL\">\n              {txt => <option value=\"all\">{txt}</option>}\n            </FormattedMessage>\n            {Tableuniquecompetition.map(k => {\n              return (\n                <option key={k.toString()} value={k}>\n                  {k}\n                </option>\n              );\n            })}\n          </select>\n        )\n      },\n      {\n        Header: <FormattedMessage id=\"COUNTRY\" />,\n        maxWidth:250,\n        accessor: \"athlete.nacionality\",\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => row.value,\n        filterMethod: (filter, row) => {\n          if (filter.value === \"\") {\n            return true;\n          }\n\n          if (Tableuniquenacionality.includes(filter.value)) {\n            return row[filter.id] === filter.value;\n          } else {\n            return true;\n          }\n        },\n        Filter: ({ filter, onChange }) => (\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\", textAlignLast: \"center\" }}\n            value={filter ? filter.value : \"all\"}\n          >\n            <FormattedMessage id=\"ALL\">\n              {txt => <option value=\"all\">{txt}</option>}\n            </FormattedMessage>\n            {Tableuniquenacionality.map(k => {\n              return (\n                <option key={k.toString()} value={k}>\n                  {k}\n                </option>\n              );\n            })}\n          </select>\n        )\n      },\n      {\n\n        Header: <FormattedMessage id=\"STATUS\" />,\n        maxWidth:150,\n        accessor: \"inscription_status_code\",\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: row => {\n          if (row.value === \"I\") {\n            return <FormattedMessage id=\"I\" />;\n          } else if (row.value === \"CI\") {\n            return <FormattedMessage id=\"CI\" />;\n          } else if (row.value === \"AN\") {\n            return <FormattedMessage id=\"AN\" />;\n          } else if (row.value === \"D\") {\n            return <FormattedMessage id=\"D\" />;\n          } else if (row.value === \"PND\") {\n            return <FormattedMessage id=\"PND\" />;\n          } else if (row.value === \"DNS\") {\n            return <FormattedMessage id=\"DNS\" />;\n          }else if (row.value === \"EP\") {\n            return <FormattedMessage id=\"EP\" />;\n          }else if (row.value === \"DNF\") {\n            return <FormattedMessage id=\"DNF\" />;\n          }else if (row.value === \"DSQ\") {\n            return <FormattedMessage id=\"DSQ\" />;\n          }else if (row.value === \"EV\") {\n            return <FormattedMessage id=\"EV\" />;\n          }else if (row.value === \"FIN\") {\n            return <FormattedMessage id=\"FIN\" />;\n          }else if (row.value === \"GAP\") {\n            return <FormattedMessage id=\"GAP\" />;\n          }else\n          { return \"\"}\n\n        },\n        filterMethod: (filter, row) => {\n          if (filter.value === \"\") {\n            return true;\n          }\n\n          if (Tableuniqueinscription_status_code.includes(filter.value)) {\n            return row[filter.id] === filter.value;\n          } else {\n            return true;\n          }\n        },\n        Filter: ({ filter, onChange }) => (\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\", textAlignLast: \"center\" }}\n            value={filter ? filter.value : \"all\"}\n          >\n            <FormattedMessage id=\"ALL\">\n              {txt => <option value=\"all\">{txt}</option>}\n            </FormattedMessage>\n            {Tableuniqueinscription_status_code.map(k => {\n              return (\n                <FormattedMessage id={k.toString()}>\n                  {txt => <option key={k.toString()} value={k}>{txt}</option>}\n                </FormattedMessage>\n              );\n            })}\n          </select>\n        )\n      },\n      {\n        Header: (size > 800) ? <FormattedMessage id=\"FAVORITE\" /> : \"FAV\",\n        maxWidth: (size > 800) ? 100 : 50,\n        filterable: false,\n        sortable: false,\n\n        style: {\n          textAlign: \"Center\"\n        },\n        Cell: (row) => (\n          <span onClick={() => {\n            let data = this.state.data;\n            data.splice(row.index, 1)\n            this.setState({ data })\n          }}>\n            {this.removeFav(row.original.athlete.athlete_id, row.index)}\n          </span>\n\n        )\n      }\n    ];\n    return (\n      <ReactTable\n        defaultSorted={[\n          {\n            id: \"dorsal_number\",\n            desc: false\n          }\n        ]}\n        previousText={<FormattedMessage id=\"PREVIOUS\" />}\n        nextText={<FormattedMessage id=\"NEXT\" />}\n        columns={columns}\n        data={this.state.data}\n        filterable\n        noDataText={<FormattedMessage id=\"NODATA\" />}\n        defaultPageSize={minimalSize(this.state.data.length, 10)}\n        pageSizeOptions={calculatePagination(this.state.data.length, 10)}\n        showPagination={true}\n        showPaginationTop={false}\n        showPaginationBottom={true}\n        showPageJump={true}\n        collapseOnSortingChange={true}\n        collapseOnPageChange={true}\n        collapseOnDataChange={true}\n        freezeWhenExpanded={false}\n        sortable={true}\n        multiSort={true}\n        resizable={true}\n        defaultSortDesc={false}\n        pageText={<FormattedMessage id=\"PAGE\" />}\n        rowsText={\"\"}\n        className=\"-striped -highlight\"\n\n      />\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { FormattedMessage } from 'react-intl';\n\nexport default class NumberFavorites extends Component {\n    render() {\n        return (\n            <div>\n                {/* Info boxes */}\n                <div className=\"col-md-3 col-sm-6 col-xs-12\">\n                    <div className=\"info-box\">\n                        <span className=\"info-box-icon bg-aqua\"><i className=\"ion ion-ios-contact-outline\" /></span>\n                        <div className=\"info-box-content\">\n                            <span className=\"info-box-text\"><FormattedMessage id=\"FAVORITES\" /></span>\n                            <span className=\"info-box-number\">{this.props.athleteList.length}</span>\n                        </div>\n                        {/* /.info-box-content */}\n                    </div>\n                    {/* /.info-box */}\n                </div>\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from \"react\";\nimport Header from \"../structure/Header\";\nimport Footer from \"../structure/Footer\";\nimport Menu from \"../structure/Menu\";\nimport TableFavorites from \"../Tables/TableFavorites\";\nimport WidgetNumberFavortites from \"../Widgets/NumberFavorites\";\nimport WidgetNumberCategories from \"../Widgets/NumberCategories\";\nimport WidgetNumberteams from \"../Widgets/NumberTeams\";\nimport WidgetNumberNacionalities from \"../Widgets/NumberNationalities\";\nimport Loader from \"../Loader/Loader\";\nimport { FormattedMessage } from 'react-intl';\n\n\nconst API_KEY = `${process.env.REACT_APP_API_TRAIL_KEY}`;\nconst API_URL = `${process.env.REACT_APP_API_TRAIL_URL}`;\nconst TOKEN = API_KEY;\nvar EventID = 0;\nvar arrayFavorites = [];\nexport default class Favorites extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      athleteList: [],\n      loading: false,\n    };\n\n    this.getAthletsList();\n  }\n\n  componentWillMount() {\n    try {\n      if (JSON.parse(localStorage.getItem(`athleteList${this.props.match.params.EventID}`))) {\n        const athList = JSON.parse(localStorage.getItem(`athleteList${this.props.match.params.EventID}`))\n        this.setState({ athleteList: athList }, () => this.checkFavorites());\n\n      }\n\n      else {\n        this.getAthletsList();\n\n      }\n    }\n    catch{\n      localStorage.clear();\n\n    }\n  }\n  /*List of athlets*/\n  getAthletsList = async e => {\n    EventID = this.props.match.params.EventID;\n    const API_CALL = await fetch(`${API_URL}/trail/Athletes/${EventID}/`, {\n      headers: new Headers({\n        Authorization: TOKEN\n      })\n    });\n    const data = await API_CALL.json();\n\n    this.setState({ athleteList: data }, () => this.checkFavorites());\n  };\n\n  /*Check Favorites*/\n  checkFavorites() {\n    arrayFavorites = []\n    this.state.athleteList.map(athlete => {\n      if (parseInt(athlete.athlete.athlete_id) === parseInt(localStorage.getItem(athlete.athlete.athlete_id))) {\n        arrayFavorites.push(athlete)\n      }\n      return null\n    })\n    this.setState({ loading: true })\n  }\n\n\n  renderTable() {\n    if (this.state.loading === true) {\n      if (arrayFavorites.length > 0) {\n        return (\n          <TableFavorites\n            athleteList={arrayFavorites}\n            loading={this.state.loading}\n            eventID={EventID}\n            competitionID={0} />\n        )\n\n\n      }\n      else\n        return (\n          <div class=\"box-body\" style={{ textAlign: \"center\" }}>\n            < FormattedMessage id=\"NOFAVORITES\" />\n          </div>\n        )\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Header eventID={this.props.match.params.EventID} />\n        {/*Send the event id to the MENU, to get the competition list*/}\n        <Menu eventID={EventID} competitionID={0} />\n        {/*CONTENT*/}\n        <div>\n          {/* Content Wrapper. Contains page content */}\n          <div className=\"content-wrapper\">\n\n            {/* Content Header (Page header) */}\n            <section className=\"content-header\">\n              <h1>\n                < FormattedMessage id=\"FAVORITESLIST\" />\n              </h1>\n            </section>\n            {/* Main content */}\n            {/*Check if data is loading*/}\n            {(() => {\n              if (this.state.loading === false) {\n                return (\n                  <section className=\"content\">\n                    <div className=\"row\">\n                      <div className=\"col-xs-12\">\n                        <div className=\"box\">\n                          {/* /.box-body */}\n                          <div className=\"box-body\" style={{ display: 'flex', justifyContent: 'center' }}>\n                            <Loader />\n                          </div>\n\n                        </div>\n                      </div>\n                    </div>\n                  </section>\n                )\n              }\n              else {\n                return (\n\n                  <section className=\"content\">\n                    <div className=\"row\">\n                      {/* widget for the number of participants */}\n                      <WidgetNumberFavortites athleteList={arrayFavorites} />\n                      {/* widget for the number of Teams */}\n                      <WidgetNumberteams athleteList={arrayFavorites} />\n                      {/* widget for the number of Categories */}\n                      <WidgetNumberCategories athleteList={arrayFavorites} />\n                      {/* widget for the number of Nacionalities */}\n                      <WidgetNumberNacionalities athleteList={arrayFavorites} />\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col-xs-12\">\n                        <div className=\"box\">\n                          {/* /.box-body */}\n                          <div className=\"box box-primary\"></div>\n                          <div className=\"post\" style={{ textAlign: \"center\" }}>\n                            {this.renderTable()}\n                          </div>\n\n                        </div>\n                        {/* Table for the list of participants */}\n\n\n                      </div>\n                    </div>\n                    {/* /.col */}\n                    {/* /.row */}\n\n                  </section>\n                )\n              }\n            })()}\n          </div>\n          {/* /.content-wrapper */}\n        </div>\n        <Footer eventID={this.props.match.params.EventID} />\n      </div >\n    );\n  }\n\n}\n","import React, { Component } from 'react'\nimport Header from \"../structure/Header\";\nimport Footer from \"../structure/Footer\";\nimport Menu from \"../structure/Menu\";\nimport Loader from \"../Loader/Loader\";\nimport ChartBar from \"../Chart/bar\"\nimport ChartPie from \"../Chart/pie\"\nimport { FormattedMessage } from 'react-intl';\n\n\nconst API_KEY = `${process.env.REACT_APP_API_TRAIL_KEY}`;\nconst API_URL = `${process.env.REACT_APP_API_TRAIL_URL}`;\nconst TOKEN = API_KEY;\n\nexport default class StatsGlobal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loadingCategory: false,\n            loadingGender: false,\n            loadingCompetitions: false,\n            loadingNacionality: false,\n\n            categoryList: [],\n            genderList: [],\n            competitionList: [],\n            nacionalityList: [],\n        };\n        this.GetCategory();\n        this.GetGender();\n        this.GetCompetitions();\n        this.GetNacionality();\n    }\n\n    /*for the first time when page is loaded */\n    GetCategory = async e => {\n        const API_CALL = await fetch(`${API_URL}/trail/CategoryTotal/${this.props.match.params.EventID}/`, {\n            headers: new Headers({\n                Authorization: TOKEN\n            })\n        });\n        const data = await API_CALL.json();\n        try {\n            localStorage.setItem(`CategoryTotal${this.props.match.params.EventID}`, JSON.stringify(data))\n        }\n        catch{\n            localStorage.clear();\n        }\n        this.setState({ categoryList: data, loadingCategory: true });\n\n    };\n    GetGender = async e => {\n        const API_CALL = await fetch(`${API_URL}/trail/GenderTotal/${this.props.match.params.EventID}/`, {\n            headers: new Headers({\n                Authorization: TOKEN\n            })\n        });\n        const data = await API_CALL.json();\n        try {\n            localStorage.setItem(`GenderTotal${this.props.match.params.EventID}`, JSON.stringify(data))\n        }\n        catch{\n            localStorage.clear();\n        }\n        this.setState({ genderList: data, loadingGender: true });\n    };\n    GetCompetitions = async e => {\n        const API_CALL = await fetch(`${API_URL}/trail/CompetitionTotal/${this.props.match.params.EventID}/`, {\n            headers: new Headers({\n                Authorization: TOKEN\n            })\n        });\n        const data = await API_CALL.json();\n        try {\n            localStorage.setItem(`CompetitionTotal${this.props.match.params.EventID}`, JSON.stringify(data))\n        }\n        catch{\n            localStorage.clear();\n        }\n        this.setState({ competitionList: data, loadingCompetitions: true });\n    };\n    GetNacionality = async e => {\n        const API_CALL = await fetch(`${API_URL}/trail/NacionalityTotal/${this.props.match.params.EventID}/`, {\n            headers: new Headers({\n                Authorization: TOKEN\n            })\n        });\n        const data = await API_CALL.json();\n        try {\n            localStorage.setItem(`NacionalityTotal${this.props.match.params.EventID}`, JSON.stringify(data))\n        }\n        catch{\n            localStorage.clear();\n        }\n        this.setState({ nacionalityList: data, loadingNacionality: true });\n    };\n\n    componentWillMount() {\n        //CACHES\n        try {\n            if (localStorage.getItem(`CategoryTotal${this.props.match.params.EventID}`)) {\n                const ListFaster = JSON.parse(localStorage.getItem(`CategoryTotal${this.props.match.params.EventID}`))\n                this.setState({ categoryList: ListFaster, loadingCategory: true })\n            }\n            if (localStorage.getItem(`GenderTotal${this.props.match.params.EventID}`)) {\n                const ListFaster = JSON.parse(localStorage.getItem(`GenderTotal${this.props.match.params.EventID}`))\n                this.setState({ genderList: ListFaster, loadingGender: true })\n            }\n            if (localStorage.getItem(`CompetitionTotal${this.props.match.params.EventID}`)) {\n                const ListFaster = JSON.parse(localStorage.getItem(`CompetitionTotal${this.props.match.params.EventID}`))\n                this.setState({ competitionList: ListFaster, loadingCompetitions: true })\n            }\n            if (localStorage.getItem(`NacionalityTotal${this.props.match.params.EventID}`)) {\n                const CheckpointInfo = JSON.parse(localStorage.getItem(`NacionalityTotal${this.props.match.params.EventID}`))\n                this.setState({ nacionalityList: CheckpointInfo, loadingNacionality: true })\n            }\n\n        }\n        catch{\n\n        }\n        //END CACHE\n        this.GetCategory();\n        this.GetGender();\n        this.GetCompetitions();\n        this.GetNacionality();\n\n    }\n\n    render() {\n\n        return (\n            <div>\n                <Header eventID={this.props.match.params.EventID} />\n                {/*Send the event id to the MENU, to get the competition list*/}\n                <Menu eventID={this.props.match.params.EventID} competitionID={0} />\n                {/*CONTENT*/}\n                <div>\n                    {/* Content Wrapper. Contains page content */}\n                    <div className=\"content-wrapper\">\n\n                        {/* Content Header (Page header) */}\n                        <section className=\"content-header\">\n\n                        </section>\n                        {/* Main content */}\n                        {/*Check if data is loading*/}\n                        <section className=\"content\">\n                            <div className=\"row\">\n                                <div className=\"col-md-6\">\n                                    {/* general form elements */}\n                                    <div className=\"box box-primary\">\n                                        <div className=\"box-header with-border\">\n                                            <div style={{ textAlign: \"center\" }} >\n                                                <h3><FormattedMessage id=\"CATEGORY\" /></h3>\n                                            </div>\n                                        </div>\n                                        {/* /.box-header */}\n                                        {/* form start */}\n                                        {(() => {\n                                            //Category\n                                            if (this.state.loadingCategory === false) {\n                                                return (\n                                                    <div style={{ textAlign: \"center\" }} className=\"box-body\">\n                                                        <Loader />\n                                                    </div>\n                                                )\n                                            }\n                                            else {\n                                                return (\n                                                    <div className=\"box-body\">\n                                                        <ChartBar data={this.state.categoryList} />\n                                                    </div>\n                                                )\n                                            }\n                                        })()}\n                                    </div>\n                                    {/* /.box */}\n\n                                </div>\n\n                                <div className=\"col-md-6\">\n                                    {/* general form elements */}\n                                    <div className=\"box box-primary\">\n                                        <div className=\"box-header with-border\">\n                                            <div style={{ textAlign: \"center\" }} >\n                                                <h3><FormattedMessage id=\"GENDER\" /></h3>\n                                            </div>\n                                        </div>\n                                        {/* /.box-header */}\n                                        {/* form start */}\n                                        {(() => {\n                                            //Gender\n\n                                            if (this.state.loadingGender === false) {\n                                                return (\n                                                    <div style={{ textAlign: \"center\" }} className=\"box-body\">\n                                                        <Loader />\n                                                    </div>\n                                                )\n                                            }\n                                            else {\n\n                                                return (\n                                                    <div className=\"box-body\">\n                                                        <ChartPie data={this.state.genderList} />\n                                                    </div>\n                                                )\n                                            }\n                                        })()}\n\n                                    </div>\n                                    {/* /.box */}\n\n                                </div>\n                                <div className=\"col-md-6\">\n                                    {/* general form elements */}\n                                    <div className=\"box box-primary\">\n                                        <div className=\"box-header with-border\">\n                                            <div style={{ textAlign: \"center\" }} >\n                                                <h3><FormattedMessage id=\"NATIONALITY\" /></h3>\n                                            </div>\n                                        </div>\n                                        {/* /.box-header */}\n                                        {/* form start */}\n                                        {(() => {\n                                            //Gender\n                                            if (this.state.loadingNacionality === false) {\n                                                return (\n                                                    <div style={{ textAlign: \"center\" }} className=\"box-body\">\n                                                        <Loader />\n                                                    </div>\n                                                )\n                                            }\n                                            else {\n                                                return (\n                                                    <div className=\"box-body\">\n                                                        <ChartPie data={this.state.nacionalityList} />\n                                                    </div>\n                                                )\n                                            }\n                                        })()}\n\n                                    </div>\n                                    {/* /.box */}\n\n                                </div>\n                                <div className=\"col-md-6\">\n                                    {/* general form elements */}\n                                    <div className=\"box box-primary\">\n                                        <div className=\"box-header with-border\">\n                                            <div style={{ textAlign: \"center\" }} >\n                                                <h3><FormattedMessage id=\"COMPETITION\" /></h3>\n                                            </div>\n                                        </div>\n                                        {/* /.box-header */}\n                                        {/* form start */}\n                                        {(() => {\n                                            //Gender\n                                            if (this.state.loadingCompetitions === false) {\n                                                return (\n                                                    <div style={{ textAlign: \"center\" }} className=\"box-body\">\n                                                        <Loader />\n                                                    </div>\n                                                )\n                                            }\n                                            else {\n                                                return (\n                                                    <div className=\"box-body\">\n                                                        <ChartBar data={this.state.competitionList} />\n                                                    </div>\n                                                )\n                                            }\n                                        })()}\n\n                                    </div>\n                                    {/* /.box */}\n\n                                </div>\n                            </div>\n\n                        </section>\n                    </div>\n                    {/* /.content-wrapper */}\n                </div>\n                <Footer eventID={this.props.match.params.EventID} />\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport Header from \"../structure/Header\";\nimport Footer from \"../structure/Footer\";\nimport Menu from \"../structure/Menu\";\nimport Loader from \"../Loader/Loader\";\nimport Chartbar from \"../Chart/bar\"\nimport ChartGender from \"../Chart/GenderComp\"\nimport ChartGround from \"../Chart/Ground\"\nimport ChartCheckpoint from \"../Chart/Checkpoint\"\nimport { FormattedMessage } from 'react-intl';\nimport Map from \"../map/map\"\nconst API_KEY = `${process.env.REACT_APP_API_TRAIL_KEY}`;\nconst API_URL = `${process.env.REACT_APP_API_TRAIL_URL}`;\nconst TOKEN = API_KEY;\n\nexport default class StatsCompetition extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loadingCategory: false,\n            loadingCategoryStart: false,\n            loadingGender: false,\n            loadingGenderStart: false,\n            loadingGenderLast: false,\n            loadingCategoryLast: false,\n            loadingGround: false,\n            loadingCheckpoint: false,\n            loadingNacionality: false,\n            loadingNacionalityLast: false,\n            loadingNacionalityStart: false,\n            categoryList: [],\n            categoryListStart: [],\n            categoryListLast: [],\n            genderList: [],\n            genderListLast: [],\n            GroundList: [],\n            CheckpointTotalList: [],\n            NacionalityListLast: [],\n            NacionalityList: [],\n            genderListStart: [],\n            NacionalityListStart: [],\n\n        };\n        this.GetData();\n    }\n    GetData() {\n        this.GetCategory();\n        this.GetGender();\n        this.GetCategoryLast();\n        this.GetGenderLast();\n        this.GetGround();\n        this.GetCheckpointTotal();\n        this.GetNacionality();\n        this.GetNacionalityLast();\n        this.GetCategoryStart();\n        this.GetGenderStart();\n        this.GetNacionalityStart();\n\n    }\n    /*for the first time when page is loaded */\n    GetCategory = async e => {\n        const API_CALL = await fetch(`${API_URL}/competition/CategoryTotal/${this.props.match.params.CompID}/`, {\n            headers: new Headers({\n                Authorization: TOKEN\n            })\n        });\n        const data = await API_CALL.json();\n        try {\n            localStorage.setItem(`GetCategory${this.props.match.params.CompID}`, JSON.stringify(data))\n        }\n        catch{\n            localStorage.clear();\n        }\n        this.setState({ categoryList: data, loadingCategory: true });\n\n    };\n    GetCategoryStart = async e => {\n        const API_CALL = await fetch(`${API_URL}/competition/CategoryTotalStart/${this.props.match.params.CompID}/`, {\n            headers: new Headers({\n                Authorization: TOKEN\n            })\n        });\n        const data = await API_CALL.json();\n        try {\n            localStorage.setItem(`GetCategoryStart${this.props.match.params.CompID}`, JSON.stringify(data))\n        }\n        catch{\n            localStorage.clear();\n        }\n        this.setState({ categoryListStart: data, loadingCategoryStart: true });\n\n    };\n    GetCategoryLast = async e => {\n        const API_CALL = await fetch(`${API_URL}/competition/CategoryTotalLast/${this.props.match.params.CompID}/`, {\n            headers: new Headers({\n                Authorization: TOKEN\n            })\n        });\n        const data = await API_CALL.json();\n        try {\n            localStorage.setItem(`GetCategoryLast${this.props.match.params.CompID}`, JSON.stringify(data))\n        }\n        catch{\n            localStorage.clear();\n        }\n        this.setState({ categoryListLast: data, loadingCategoryLast: true });\n\n    };\n    GetGender = async e => {\n        const API_CALL = await fetch(`${API_URL}/competition/GenderTotal/${this.props.match.params.CompID}/`, {\n            headers: new Headers({\n                Authorization: TOKEN\n            })\n        });\n        const data = await API_CALL.json();\n        try {\n            localStorage.setItem(`GetGender${this.props.match.params.CompID}`, JSON.stringify(data))\n        }\n        catch{\n            localStorage.clear();\n        }\n        this.setState({ genderList: data, loadingGender: true });\n\n    };\n    GetGenderStart = async e => {\n        const API_CALL = await fetch(`${API_URL}/competition/GenderTotalStart/${this.props.match.params.CompID}/`, {\n            headers: new Headers({\n                Authorization: TOKEN\n            })\n        });\n        const data = await API_CALL.json();\n        try {\n            localStorage.setItem(`GetGenderStart${this.props.match.params.CompID}`, JSON.stringify(data))\n        }\n        catch{\n            localStorage.clear();\n        }\n        this.setState({ genderListStart: data, loadingGenderStart: true });\n\n    };\n    GetGenderLast = async e => {\n        const API_CALL = await fetch(`${API_URL}/competition/GenderTotalLast/${this.props.match.params.CompID}/`, {\n            headers: new Headers({\n                Authorization: TOKEN\n            })\n        });\n        const data = await API_CALL.json();\n        try {\n            localStorage.setItem(`GetGenderLast${this.props.match.params.CompID}`, JSON.stringify(data))\n        }\n        catch{\n            localStorage.clear();\n        }\n        this.setState({ genderListLast: data, loadingGenderLast: true });\n\n    };\n    GetGround = async e => {\n        const API_CALL = await fetch(`${API_URL}/competition/Checkpoints/${this.props.match.params.CompID}/`, {\n            headers: new Headers({\n                Authorization: TOKEN\n            })\n        });\n\n        const data = await API_CALL.json();\n        try {\n            localStorage.setItem(`GetGround${this.props.match.params.CompID}`, JSON.stringify(data))\n        }\n        catch{\n            localStorage.clear();\n        }\n        this.setState({ GroundList: data, loadingGround: true });\n    };\n    GetCheckpointTotal = async e => {\n        const API_CALL = await fetch(`${API_URL}/results/AthTotalByCheckpoint/${this.props.match.params.CompID}/`, {\n            headers: new Headers({\n                Authorization: TOKEN\n            })\n        });\n\n        const data = await API_CALL.json();\n        try {\n            localStorage.setItem(`GetCheckpointTotal${this.props.match.params.CompID}`, JSON.stringify(data))\n        }\n        catch{\n            localStorage.clear();\n        }\n        this.setState({ CheckpointTotalList: data, loadingCheckpoint: true });\n    };\n    GetNacionality = async e => {\n        const API_CALL = await fetch(`${API_URL}/competition/NacionalityTotal/${this.props.match.params.CompID}/`, {\n            headers: new Headers({\n                Authorization: TOKEN\n            })\n        });\n        const data = await API_CALL.json();\n        try {\n            localStorage.setItem(`GetNacionality${this.props.match.params.CompID}`, JSON.stringify(data))\n        }\n        catch{\n            localStorage.clear();\n        }\n        this.setState({ NacionalityList: data, loadingNacionality: true });\n\n    };\n    GetNacionalityStart = async e => {\n        const API_CALL = await fetch(`${API_URL}/competition/NacionalityTotalStart/${this.props.match.params.CompID}/`, {\n            headers: new Headers({\n                Authorization: TOKEN\n            })\n        });\n        const data = await API_CALL.json();\n        try {\n            localStorage.setItem(`GetNacionalityStart${this.props.match.params.CompID}`, JSON.stringify(data))\n        }\n        catch{\n            localStorage.clear();\n        }\n        this.setState({ NacionalityListStart: data, loadingNacionalityStart: true });\n\n    };\n    GetNacionalityLast = async e => {\n        const API_CALL = await fetch(`${API_URL}/competition/NacionalityTotalLast/${this.props.match.params.CompID}/`, {\n            headers: new Headers({\n                Authorization: TOKEN\n            })\n        });\n        const data = await API_CALL.json();\n        try {\n            localStorage.setItem(`GetNacionalityLast${this.props.match.params.CompID}`, JSON.stringify(data))\n        }\n        catch{\n            localStorage.clear();\n        }\n        this.setState({ NacionalityListLast: data, loadingNacionalityLast: true });\n\n    };\n\n    componentWillMount() {\n        //CACHES\n        try {\n            if (localStorage.getItem(`GetCategory${this.props.match.params.CompID}`)) {\n                const ListFaster = JSON.parse(localStorage.getItem(`GetCategory${this.props.match.params.CompID}`))\n                this.setState({ categoryList: ListFaster, loadingCategory: true })\n            }\n            if (localStorage.getItem(`GetCategoryStart${this.props.match.params.CompID}`)) {\n                const ListFaster = JSON.parse(localStorage.getItem(`GetCategoryStart${this.props.match.params.CompID}`))\n                this.setState({ categoryListStart: ListFaster, loadingCategoryStart: true })\n            }\n            if (localStorage.getItem(`CompetitionTotal${this.props.match.params.CompID}`)) {\n                const ListFaster = JSON.parse(localStorage.getItem(`CompetitionTotal${this.props.match.params.CompID}`))\n                this.setState({ competitionList: ListFaster, loadingCompetitions: true })\n            }\n            if (localStorage.getItem(`GetCategoryLast${this.props.match.params.CompID}`)) {\n                const CheckpointInfo = JSON.parse(localStorage.getItem(`GetCategoryLast${this.props.match.params.CompID}`))\n                this.setState({ categoryListLast: CheckpointInfo, loadingCategoryLast: true })\n            }\n            if (localStorage.getItem(`GetGender${this.props.match.params.CompID}`)) {\n                const ListFaster = JSON.parse(localStorage.getItem(`GetGender${this.props.match.params.CompID}`))\n                this.setState({ genderList: ListFaster, loadingGender: true })\n            }\n            if (localStorage.getItem(`GetGenderStart${this.props.match.params.CompID}`)) {\n                const ListFaster = JSON.parse(localStorage.getItem(`GetGenderStart${this.props.match.params.CompID}`))\n                this.setState({ genderListStart: ListFaster, loadingGenderStart: true })\n            }\n            if (localStorage.getItem(`GetGenderLast${this.props.match.params.CompID}`)) {\n                const ListFaster = JSON.parse(localStorage.getItem(`GetGenderLast${this.props.match.params.CompID}`))\n                this.setState({ genderListLast: ListFaster, loadingGenderLast: true })\n            }\n            if (localStorage.getItem(`GetGround${this.props.match.params.CompID}`)) {\n                const CheckpointInfo = JSON.parse(localStorage.getItem(`GetGround${this.props.match.params.CompID}`))\n                this.setState({ GroundList: CheckpointInfo, loadingGround: true })\n            }\n            if (localStorage.getItem(`GetCheckpointTotal${this.props.match.params.CompID}`)) {\n                const ListFaster = JSON.parse(localStorage.getItem(`GetCheckpointTotal${this.props.match.params.CompID}`))\n                this.setState({ CheckpointTotalList: ListFaster, loadingCheckpoint: true })\n            }\n            if (localStorage.getItem(`GetNacionality${this.props.match.params.CompID}`)) {\n                const ListFaster = JSON.parse(localStorage.getItem(`GetNacionality${this.props.match.params.CompID}`))\n                this.setState({ NacionalityList: ListFaster, loadingNacionality: true })\n            }\n            if (localStorage.getItem(`GetNacionalityStart${this.props.match.params.CompID}`)) {\n                const ListFaster = JSON.parse(localStorage.getItem(`GetNacionalityStart${this.props.match.params.CompID}`))\n                this.setState({ NacionalityListStart: ListFaster, loadingNacionalityStart: true })\n            }\n            if (localStorage.getItem(`GetNacionalityLast${this.props.match.params.CompID}`)) {\n                const ListFaster = JSON.parse(localStorage.getItem(`GetNacionalityLast${this.props.match.params.CompID}`))\n                this.setState({ NacionalityListLast: ListFaster, loadingNacionalityLast: true })\n            }\n\n        }\n        catch{\n\n        }\n        this.GetData();\n    }\n\n    /*when props change*/\n    componentDidUpdate(prevProps) {\n        if (prevProps.match.params.CompID !== this.props.match.params.CompID) {\n            this.setState({\n                loadingCategory: false,\n                loadingCategoryStart: false,\n                loadingGender: false,\n                loadingGenderStart: false,\n                loadingGenderLast: false,\n                loadingCategoryLast: false,\n                loadingGround: false,\n                loadingGroundStart: false,\n\n            });\n            this.GetData();\n\n        }\n    }\n    render() {\n        return (\n            <div>\n                <div>\n                    <Header eventID={this.props.match.params.EventID} />\n                    {/*Send the event id to the MENU, to get the competition list*/}\n                    <Menu eventID={this.props.match.params.EventID} competitionID={this.props.match.params.CompID} />\n                    {/*CONTENT*/}\n                    <div>\n                        {/* Content Wrapper. Contains page content */}\n                        <div className=\"content-wrapper\">\n\n                            {/* Content Header (Page header) */}\n                            <section className=\"content-header\">\n                                <h1>\n                                    <span >{this.props.match.params.CompName}</span>\n                                </h1>\n                            </section>\n                            {/* Main content */}\n                            {/*Check if data is loading*/}\n                            <section className=\"content\">\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        {/* general form elements */}\n                                        <div className=\"box box-primary\">\n                                            <div className=\"box-header with-border\">\n                                                <div style={{ textAlign: \"center\" }} >\n                                                    <h3><FormattedMessage id=\"CATEGORY\" /> </h3>\n                                                </div>\n                                            </div>\n                                            {/* /.box-header */}\n                                            {/* form start */}\n                                            {(() => {\n                                                //Category\n                                                if (this.state.loadingCategory === false && this.state.loadingCategoryLast === false && this.state.loadingCategoryStart === false) {\n                                                    return (\n                                                        <div style={{ textAlign: \"center\" }} className=\"box-body\">\n                                                            <Loader />\n                                                        </div>\n                                                    )\n                                                }\n                                                else {\n                                                    return (\n\n                                                        <div className=\"box-body\">\n                                                            <FormattedMessage id=\"STARTS\" >\n                                                                {Starts =>\n                                                                    <FormattedMessage id=\"INSCRIPTIONS\" >\n                                                                        {Inscriptions =>\n                                                                            <FormattedMessage id=\"ARRIVALS\" >\n                                                                                {Arrivals =>\n                                                                                    <Chartbar ISThree={true} Arrivals={Arrivals} Start={Starts} Inscription={Inscriptions} data={this.state.categoryList} dataStart={this.state.categoryListStart} dataLast={this.state.categoryListLast} />\n                                                                                }\n                                                                            </FormattedMessage>\n                                                                        }\n                                                                    </FormattedMessage>\n                                                                }\n                                                            </FormattedMessage>\n\n                                                        </div>\n                                                    )\n                                                }\n                                            })()}\n                                        </div>\n                                        {/* /.box */}\n\n                                    </div>\n\n                                    <div className=\"col-md-6\">\n                                        {/* general form elements */}\n                                        <div className=\"box box-primary\">\n                                            <div className=\"box-header with-border\">\n                                                <div style={{ textAlign: \"center\" }} >\n                                                    <h3><FormattedMessage id=\"GENDER\" /></h3>\n                                                </div>\n                                            </div>\n                                            {/* /.box-header */}\n                                            {/* form start */}\n                                            {(() => {\n                                                //Gender\n                                                if (this.state.loadingGenderStart ===false && this.state.loadingGender === false && this.state.loadingGenderLast === false) {\n                                                    return (\n                                                        <div style={{ textAlign: \"center\" }} className=\"box-body\">\n                                                            <Loader />\n                                                        </div>\n                                                    )\n                                                }\n                                                else {\n                                                    return (\n                                                        <div className=\"box-body\">\n                                                            <FormattedMessage id=\"STARTS\" >\n                                                                {Starts =>\n                                                                    <FormattedMessage id=\"INSCRIPTIONS\" >\n                                                                        {Inscriptions =>\n                                                                            <FormattedMessage id=\"ARRIVALS\" >\n                                                                                {Arrivals =>\n                                                                                    <ChartGender Arrivals={Arrivals} Start={Starts} Inscription={Inscriptions} data={this.state.genderList} dataStart={this.state.genderListStart} dataLast={this.state.genderListLast} />\n                                                                                }\n                                                                            </FormattedMessage>\n                                                                        }\n                                                                    </FormattedMessage>\n                                                                }\n                                                            </FormattedMessage>\n\n                                                        </div>\n                                                    )\n\n                                                }\n                                            })()}\n\n                                        </div>\n                                        {/* /.box */}\n\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        {/* general form elements */}\n                                        <div className=\"box box-primary\">\n                                            <div className=\"box-header with-border\">\n                                                <div style={{ textAlign: \"center\" }} >\n                                                    <h3><FormattedMessage id=\"NATIONALITY\" /></h3>\n                                                </div>\n                                            </div>\n                                            {/* /.box-header */}\n                                            {/* form start */}\n                                            {(() => {\n                                                //Gender\n\n                                                if (this.state.loadingNacionality === false && this.state.loadingNacionalityLast === false && this.state.loadingNacionalityStart === false) {\n                                                    return (\n                                                        <div style={{ textAlign: \"center\" }} className=\"box-body\">\n                                                            <Loader />\n                                                        </div>\n                                                    )\n                                                }\n                                                else {\n                                                    return (\n                                                        <div className=\"box-body\">\n                                                            <FormattedMessage id=\"STARTS\" >\n                                                                {Starts =>\n                                                                    <FormattedMessage id=\"INSCRIPTIONS\" >\n                                                                        {Inscriptions =>\n                                                                            <FormattedMessage id=\"ARRIVALS\" >\n                                                                                {Arrivals =>\n                                                                                    <Chartbar ISThree={true} Arrivals={Arrivals} Start={Starts} Inscription={Inscriptions} data={this.state.NacionalityList} dataStart={this.state.NacionalityListStart} dataLast={this.state.NacionalityListLast} />\n                                                                                }\n                                                                            </FormattedMessage>\n                                                                        }\n                                                                    </FormattedMessage>\n                                                                }\n                                                            </FormattedMessage>\n                                                        </div>\n                                                    )\n\n                                                }\n                                            })()}\n\n                                        </div>\n                                        {/* /.box */}\n\n                                    </div>\n                                   \n                                    <div className=\"col-md-6\">\n                                        {/* general form elements */}\n                                        <div className=\"box box-primary\">\n                                            <div className=\"box-header with-border\">\n                                                <div style={{ textAlign: \"center\" }} >\n                                                    <h3><FormattedMessage id=\"CHECKPOINT\" /></h3>\n                                                </div>\n                                            </div>\n                                            {/* /.box-header */}\n                                            {/* form start */}\n                                            {(() => {\n                                                //Gender\n\n                                                if (this.state.loadingCheckpoint === false) {\n                                                    return (\n                                                        <div style={{ textAlign: \"center\" }} className=\"box-body\">\n                                                            <Loader />\n                                                        </div>\n                                                    )\n                                                }\n                                                else {\n                                                    return (\n                                                        <div className=\"box-body\">\n                                                            <ChartCheckpoint data={this.state.CheckpointTotalList} />\n                                                        </div>\n                                                    )\n\n                                                }\n                                            })()}\n\n                                        </div>\n                                        {/* /.box */}\n\n                                    </div>{/* \n                                    <div className=\"col-md-6\">\n                                        <div className=\"box box-primary\">\n                                            <div className=\"box-header with-border\">\n                                                <div style={{ textAlign: \"center\" }} >\n                                                    <h3><FormattedMessage id=\"HEIGHT\" /></h3>\n                                                </div>\n                                            </div>\n          \n                                            {(() => {\n                                                if (this.state.loadingGround === false) {\n                                                    return (\n                                                        <div style={{ textAlign: \"center\" }} className=\"box-body\">\n                                                            <Loader />\n                                                        </div>\n                                                    )\n                                                }\n                                                else {\n\n                                                    return (\n                                                        <div className=\"box-body\">\n                                                            <ChartGround data={this.state.GroundList} />\n                                                        </div>\n                                                    )\n\n                                                }\n                                            })()}\n\n                                        </div>\n\n                                    </div>\n                                    */}\n                                </div>\n                            </section>\n                        </div>\n                        {/* /.content-wrapper */}\n                    </div>\n                    <Footer eventID={this.props.match.params.EventID} />\n                </div >\n\n            </div >\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport Header from \"../structure/Header\";\nimport Footer from \"../structure/Footer\";\nimport Menu from \"../structure/Menu\";\nimport { FormattedMessage } from 'react-intl';\n\n\nexport default class feedback extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          name: '',\n          email: '',\n          message: '',\n          subject: '',\n          isClicked: false,\n\n        };\n\n      }\n    onNameChange(event) {\n        this.setState({name: event.target.value})\n      }\n    \n      onEmailChange(event) {\n        this.setState({email: event.target.value})\n      }\n    \n      onMessageChange(event) {\n        this.setState({message: event.target.value})\n      }\n      onSubjecthange(event) {\n        this.setState({subject: event.target.value})\n      }\n      handleSubmit(event) {\n        this.setState({isClicked:true})\n        event.preventDefault();\n    }\n    \n    render() {\n\n        return (\n            <div>\n                <Header eventID={this.props.match.params.EventID} />\n                {/*Send the event id to the MENU, to get the competition list*/}\n                <Menu eventID={this.props.match.params.EventID} competitionID={0} />\n                {/*CONTENT*/}\n                <div>\n                    {/* Content Wrapper. Contains page content */}\n                    <div className=\"content-wrapper\">\n\n                        {/* Content Header (Page header) */}\n                        <section className=\"content-header\">\n                            <h1>\n                                < FormattedMessage id=\"FEEDBACK\" />\n                            </h1>\n                        </section>\n                        {/* Main content */}\n                        <section class=\"content\">\n                            <div class=\"box box-primary\">\n                                <div class=\"box-header with-border\">\n                                    <h3 class=\"box-title\"></h3>\n                                </div>\n                                {/* /.box-header */}\n                                {/* form start */}\n                                <form role=\"form\" onSubmit={this.handleSubmit.bind(this)} method=\"POST\" >\n                                    <div className=\"box-body\">\n                                        <div className=\"form-group\">\n                                            <label>< FormattedMessage id=\"NAME\" />:</label>\n                                            <input id=\"name\"  value={this.state.name} onChange={this.onNameChange.bind(this)} type=\"text\" required className=\"form-control\" placeholder=\"O seu nome\" autoComplete=\"off\" style={{ backgroundImage: 'url(\"data:image/png', backgroundRepeat: 'no-repeat', backgroundAttachment: 'scroll', backgroundSize: '16px 18px', backgroundPosition: '98% 50%', cursor: 'auto' }} />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"exampleInputEmail1\">< FormattedMessage id=\"EMAIL\" />:</label>\n                                            <input type=\"email\"  value={this.state.email} onChange={this.onEmailChange.bind(this)} required  value={this.state.email} className=\"form-control\" placeholder=\"O seu email\" autoComplete=\"off\" style={{ backgroundImage: 'url(\"data:image/png', backgroundRepeat: 'no-repeat', backgroundAttachment: 'scroll', backgroundSize: '16px 18px', backgroundPosition: '98% 50%', cursor: 'auto' }} />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label>< FormattedMessage id=\"SUBJECT\" />:</label>\n                                            <input type=\"text\" required value={this.state.subject} onChange={this.onSubjecthange.bind(this)}   className=\"form-control\" placeholder=\"Assunto desejado\" autoComplete=\"off\" style={{ backgroundImage: 'url(\"data:image/png', backgroundRepeat: 'no-repeat', backgroundAttachment: 'scroll', backgroundSize: '16px 18px', backgroundPosition: '98% 50%', cursor: 'auto' }} />\n                                        </div>\n                                         <div class=\"form-group\">\n                                            <label>< FormattedMessage id=\"MENSAGE\" />:</label>\n                                            <textarea class=\"form-control\" value={this.state.message} onChange={this.onMessageChange.bind(this)} required rows=\"5\" placeholder=\"Insira a sua mensagem\"></textarea>\n                                         </div>\n                                    </div>\n                                    {/* /.box-body */}\n                                    <div className=\"box-footer\">\n                                        <button type=\"submit\" disabled={this.state.isClicked===false?\"\":\"disabled\"} className=\"btn btn-primary\">{this.state.isClicked===false? < FormattedMessage id=\"SEND\" /> : <div> < FormattedMessage id=\"SEND\" /> <i class=\"fa fa-refresh fa-spin\"></i></div>}</button>\n                                    </div>\n                                </form>\n                            </div>\n                        </section>\n                    </div>\n                    {/* /.content-wrapper */}\n                </div>\n                <Footer eventID={this.props.match.params.EventID} />\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport NavBar from \"../structure/HeaderHome\";\nimport FooterPage from \"../structure/footerHome\";\nexport default class Erro404 extends Component {\n    render() {\n        return (\n            <div>\n                <NavBar />\n                    {/* Content Header (Page header) */}\n\n                    {/* Main content */}\n                    <section className=\"content\" style={{height:\"80vh\"}}>\n                        <div className=\"error-page\">\n                            <h2 className=\"headline text-yellow\"> 404</h2>\n                            <div className=\"error-content\">\n                                <h3><i className=\"fa fa-warning text-yellow\" /> Oops! Page not found.</h3>\n                                <p>\n                                    We could not find the page you were looking for.</p>\n\n                            </div>\n                            {/* /.error-content */}\n                        </div>\n                        {/* /.error-page */}\n                    </section>\n\n                <FooterPage />\n            </div>\n        )\n    }\n}\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route, } from \"react-router-dom\";\nimport App from \"../App\";\nimport PageSubscribers from \"./Pages/Participants\"\nimport PageGiveUp from \"./Pages/DontFinished\"\nimport PageSubscriversCompetiton from \"./Pages/ParicipantsCompetiton\"\nimport PageCheckpoints from \"./Pages/Checkpoints\"\nimport PageWinners from \"./Pages/Winners\"\nimport PageAthleteDetail from \"./Pages/AthleteDetail\"\nimport PageTeams from \"./Pages/Teams\"\nimport PageFavorites from \"./Pages/Favorites\"\nimport PageStatsGlobal from \"./Pages/StatsGlobal\"\nimport PageStatsComp from \"./Pages/StatsCompetition\"\nimport PageFeedback from \"./Pages/feedback\"\nimport Erro404 from \"./Errors/404\"\n\n\nconst Router = () => (\n\n  <BrowserRouter >\n    <Switch>\n      <Route path=\"/\" component={App} exact />\n      <Route path=\"/EventParticipants/:EventID\"   component={PageSubscribers} />   \n      <Route path=\"/AthleteDetail/:EventID/:CompID/:AthleteID\"  component={PageAthleteDetail} /> \n      <Route path=\"/EventGiveUp/:EventID/:CompID/:CompName\"  component={PageGiveUp} /> \n      <Route path=\"/ParticipantsCompetiton/:EventID/:CompID/:CompName\"  component={PageSubscriversCompetiton} /> \n      <Route path=\"/Checkpoints/:EventID/:CompID/:CompName\"  component={PageCheckpoints} /> \n      <Route path=\"/Teams/:EventID/:CompID/:CompName\"  component={PageTeams} /> \n      <Route path=\"/Winners/:EventID/:CompID/:CompName\"  component={PageWinners} /> \n      <Route path=\"/Favorites/:EventID\"  component={PageFavorites} /> \n      <Route path=\"/Stats/:EventID\"  component={PageStatsGlobal} /> \n      <Route path=\"/Feedback/:EventID\"  component={PageFeedback} /> \n      <Route path=\"/StatsComp/:EventID/:CompID/:CompName\"  component={PageStatsComp} /> \n      <Route component={Erro404}/>\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Router","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\nwindow.self.addEventListener(\"push\", event => {\n  const data = event.data.json()\n  const { title } = data\n\n  const body = {\n    body: data.body,\n    icon: data.icon\n  }\n\n  event.waitUntil(window.self.registration.showNotification(title, body))\n})\nexport function register(config) {\n  window.self.addEventListener(\"push\", event => {\n    const data = event.data.json()\n    const { title } = data\n\n    const body = {\n      body: data.body,\n      icon: data.icon\n    }\n\n    event.waitUntil(window.self.registration.showNotification(title, body))\n  })\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Router from './components/router';\nimport registerServiceWorker from './registerServiceWorker';\nimport * as serviceWorker from './serviceWorker';\nimport {IntlProvider} from \"react-intl\"\nimport Wrapper from \"./languages/Wrapper\"\nimport ReactGA from 'react-ga';\n\n\nReactDOM.render(<Wrapper><Router /></Wrapper> , document.getElementById('root'));\nReactGA.initialize('UA-175463588-1', {\n    debug: true,\n    titleCase: false,\n});\nReactGA.set({ page: window.location.pathname });\nReactGA.pageview(window.location.pathname);\n\n\n//registerServiceWorker();\n//serviceWorker.register();\n//SEND the id of the new user\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nregisterServiceWorker();\nserviceWorker.register();\n\n","var map = {\n\t\"./ad.svg\": 144,\n\t\"./ae.svg\": 145,\n\t\"./af.svg\": 146,\n\t\"./ag.svg\": 147,\n\t\"./ai.svg\": 148,\n\t\"./al.svg\": 149,\n\t\"./am.svg\": 150,\n\t\"./ao.svg\": 151,\n\t\"./ar.svg\": 152,\n\t\"./as.svg\": 153,\n\t\"./at.svg\": 154,\n\t\"./au.svg\": 155,\n\t\"./aw.svg\": 156,\n\t\"./az.svg\": 157,\n\t\"./ba.svg\": 158,\n\t\"./bb.svg\": 159,\n\t\"./bd.svg\": 160,\n\t\"./be.svg\": 161,\n\t\"./bf.svg\": 162,\n\t\"./bg.svg\": 163,\n\t\"./bh.svg\": 164,\n\t\"./bi.svg\": 165,\n\t\"./bj.svg\": 166,\n\t\"./bm.svg\": 167,\n\t\"./bo.svg\": 168,\n\t\"./br.svg\": 169,\n\t\"./bs.svg\": 170,\n\t\"./bt.svg\": 171,\n\t\"./bw.svg\": 172,\n\t\"./by.svg\": 173,\n\t\"./bz.svg\": 174,\n\t\"./ca.svg\": 175,\n\t\"./cd.svg\": 176,\n\t\"./cf.svg\": 177,\n\t\"./cg.svg\": 178,\n\t\"./ch.svg\": 179,\n\t\"./ci.svg\": 180,\n\t\"./ck.svg\": 181,\n\t\"./cl.svg\": 182,\n\t\"./cm.svg\": 183,\n\t\"./cn.svg\": 184,\n\t\"./co.svg\": 185,\n\t\"./cr.svg\": 186,\n\t\"./cu.svg\": 187,\n\t\"./cv.svg\": 188,\n\t\"./cw.svg\": 189,\n\t\"./cy.svg\": 190,\n\t\"./cz.svg\": 191,\n\t\"./de.svg\": 192,\n\t\"./dj.svg\": 193,\n\t\"./dk.svg\": 194,\n\t\"./dm.svg\": 195,\n\t\"./do.svg\": 196,\n\t\"./dz.svg\": 197,\n\t\"./ec.svg\": 198,\n\t\"./ee.svg\": 199,\n\t\"./eg.svg\": 200,\n\t\"./er.svg\": 201,\n\t\"./es.svg\": 202,\n\t\"./et.svg\": 203,\n\t\"./fi.svg\": 204,\n\t\"./fj.svg\": 205,\n\t\"./fk.svg\": 206,\n\t\"./fm.svg\": 207,\n\t\"./fo.svg\": 208,\n\t\"./fr.svg\": 209,\n\t\"./ga.svg\": 210,\n\t\"./gb.svg\": 211,\n\t\"./gd.svg\": 212,\n\t\"./ge.svg\": 213,\n\t\"./gg.svg\": 214,\n\t\"./gh.svg\": 215,\n\t\"./gi.svg\": 216,\n\t\"./gl.svg\": 217,\n\t\"./gm.svg\": 218,\n\t\"./gn.svg\": 219,\n\t\"./gq.svg\": 220,\n\t\"./gr.svg\": 221,\n\t\"./gt.svg\": 222,\n\t\"./gu.svg\": 223,\n\t\"./gw.svg\": 224,\n\t\"./hk.svg\": 225,\n\t\"./hn.svg\": 226,\n\t\"./hr.svg\": 227,\n\t\"./ht.svg\": 228,\n\t\"./hu.svg\": 229,\n\t\"./id.svg\": 230,\n\t\"./ie.svg\": 231,\n\t\"./il.svg\": 232,\n\t\"./im.svg\": 233,\n\t\"./in.svg\": 234,\n\t\"./io.svg\": 235,\n\t\"./iq.svg\": 236,\n\t\"./ir.svg\": 237,\n\t\"./is.svg\": 238,\n\t\"./it.svg\": 239,\n\t\"./je.svg\": 240,\n\t\"./jm.svg\": 241,\n\t\"./jo.svg\": 242,\n\t\"./jp.svg\": 243,\n\t\"./ke.svg\": 244,\n\t\"./kg.svg\": 245,\n\t\"./kh.svg\": 246,\n\t\"./ki.svg\": 247,\n\t\"./km.svg\": 248,\n\t\"./kn.svg\": 249,\n\t\"./kp.svg\": 250,\n\t\"./kr.svg\": 251,\n\t\"./kw.svg\": 252,\n\t\"./ky.svg\": 253,\n\t\"./kz.svg\": 254,\n\t\"./la.svg\": 255,\n\t\"./lb.svg\": 256,\n\t\"./li.svg\": 257,\n\t\"./lk.svg\": 258,\n\t\"./lr.svg\": 259,\n\t\"./ls.svg\": 260,\n\t\"./lt.svg\": 261,\n\t\"./lu.svg\": 262,\n\t\"./lv.svg\": 263,\n\t\"./ly.svg\": 264,\n\t\"./ma.svg\": 265,\n\t\"./mc.svg\": 266,\n\t\"./md.svg\": 267,\n\t\"./me.svg\": 268,\n\t\"./mg.svg\": 269,\n\t\"./mh.svg\": 270,\n\t\"./mk.svg\": 271,\n\t\"./ml.svg\": 272,\n\t\"./mm.svg\": 273,\n\t\"./mn.svg\": 274,\n\t\"./mo.svg\": 275,\n\t\"./mp.svg\": 276,\n\t\"./mq.svg\": 277,\n\t\"./mr.svg\": 278,\n\t\"./ms.svg\": 279,\n\t\"./mt.svg\": 280,\n\t\"./mu.svg\": 281,\n\t\"./mv.svg\": 282,\n\t\"./mw.svg\": 283,\n\t\"./mx.svg\": 284,\n\t\"./my.svg\": 285,\n\t\"./mz.svg\": 286,\n\t\"./na.svg\": 287,\n\t\"./nato.svg\": 288,\n\t\"./ne.svg\": 289,\n\t\"./nf.svg\": 290,\n\t\"./ng.svg\": 291,\n\t\"./ni.svg\": 292,\n\t\"./nl.svg\": 293,\n\t\"./no.svg\": 294,\n\t\"./np.svg\": 295,\n\t\"./nr.svg\": 296,\n\t\"./nu.svg\": 297,\n\t\"./nz.svg\": 298,\n\t\"./om.svg\": 299,\n\t\"./pa.svg\": 300,\n\t\"./pe.svg\": 301,\n\t\"./pf.svg\": 302,\n\t\"./pg.svg\": 303,\n\t\"./ph.svg\": 304,\n\t\"./pk.svg\": 305,\n\t\"./pl.svg\": 306,\n\t\"./pn.svg\": 307,\n\t\"./pr.svg\": 308,\n\t\"./ps.svg\": 309,\n\t\"./pt.svg\": 310,\n\t\"./pw.svg\": 311,\n\t\"./py.svg\": 312,\n\t\"./qa.svg\": 313,\n\t\"./ro.svg\": 314,\n\t\"./rs.svg\": 315,\n\t\"./ru.svg\": 316,\n\t\"./rw.svg\": 317,\n\t\"./sa.svg\": 318,\n\t\"./sb.svg\": 319,\n\t\"./sc.svg\": 320,\n\t\"./sd.svg\": 321,\n\t\"./se.svg\": 322,\n\t\"./sg.svg\": 323,\n\t\"./si.svg\": 324,\n\t\"./sk.svg\": 325,\n\t\"./sl.svg\": 326,\n\t\"./sm.svg\": 327,\n\t\"./sn.svg\": 328,\n\t\"./so.svg\": 329,\n\t\"./sr.svg\": 330,\n\t\"./ss.svg\": 331,\n\t\"./st.svg\": 332,\n\t\"./sv.svg\": 333,\n\t\"./sx.svg\": 334,\n\t\"./sy.svg\": 335,\n\t\"./sz.svg\": 336,\n\t\"./tc.svg\": 337,\n\t\"./td.svg\": 338,\n\t\"./tg.svg\": 339,\n\t\"./th.svg\": 340,\n\t\"./tibet.svg\": 341,\n\t\"./tj.svg\": 342,\n\t\"./tk.svg\": 343,\n\t\"./tm.svg\": 344,\n\t\"./tn.svg\": 345,\n\t\"./to.svg\": 346,\n\t\"./tr.svg\": 347,\n\t\"./tt.svg\": 348,\n\t\"./tv.svg\": 349,\n\t\"./tw.svg\": 350,\n\t\"./tz.svg\": 351,\n\t\"./ua.svg\": 352,\n\t\"./ug.svg\": 353,\n\t\"./us.svg\": 354,\n\t\"./uy.svg\": 355,\n\t\"./uz.svg\": 356,\n\t\"./ve.svg\": 357,\n\t\"./vi.svg\": 358,\n\t\"./vn.svg\": 359,\n\t\"./vu.svg\": 360,\n\t\"./ws.svg\": 361,\n\t\"./ye.svg\": 362,\n\t\"./za.svg\": 363,\n\t\"./zm.svg\": 364,\n\t\"./zw.svg\": 365\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 78;"],"sourceRoot":""}