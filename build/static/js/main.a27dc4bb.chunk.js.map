{"version":3,"sources":["languages/Wrapper.js","components/Pages/trails.jsx","components/structure/carousel.jsx","components/structure/HeaderHome.jsx","components/structure/LanguageSelector.jsx","components/structure/footerHome.jsx","components/Loader/Loader.jsx","components/Pages/Home.jsx","App.js","components/structure/Header.jsx","components/structure/Footer.jsx","components/structure/Menu.jsx","components/Notifications/subscription.jsx","components/favorites/favoritesChecker.jsx","components/Scripts/PaginationHelper.js","components/Tables/TableParticipants.jsx","components/Widgets/NumberParticipants.jsx","components/Widgets/NumberCategories.jsx","components/Widgets/NumberTeams.jsx","components/Widgets/NumberNationalities.jsx","components/Pages/Participants.jsx","components/Tables/TableGiveUp.jsx","components/Tables/TableDisqualified.jsx","components/Pages/DontFinished.jsx","components/Tables/TableParticipantsCompetition.jsx","components/Pages/ParicipantsCompetiton.jsx","components/Scripts/time.js","components/Tables/TableCheckpoints.jsx","components/Chart/Velocity.jsx","components/Chart/Position.jsx","components/Chart/bar.jsx","components/Chart/pie.jsx","components/Chart/GenderComp.jsx","components/Chart/Ground.jsx","components/Chart/Checkpoint.jsx","components/Widgets/FasterMale.jsx","components/Widgets/FasterFemale.jsx","components/Pages/Checkpoints.jsx","components/Tables/TableWinners.jsx","components/Widgets/Faster.jsx","components/Pages/Winners.jsx","components/Tables/TableTier.jsx","components/Tables/TableGlobal.jsx","components/Tables/TableGender.jsx","components/Widgets/Position.jsx","components/Widgets/Loading.jsx","components/Widgets/Time.jsx","components/Widgets/velocity.jsx","components/Widgets/LastPlace.jsx","components/Pages/AthleteDetail.jsx","components/Tables/TableTeams.jsx","components/Pages/Teams.jsx","components/Tables/TableFavorites.jsx","components/Widgets/NumberFavorites.jsx","components/Pages/Favorites.jsx","components/Pages/StatsGlobal.jsx","components/Pages/StatsCompetition.jsx","components/Pages/feedback.jsx","components/router.jsx","registerServiceWorker.js","serviceWorker.js","index.js","../node_modules/react-flags-select/flags sync /^/.*/.svg$"],"names":["local","lang","Trails","props","className","trails","map","trail","today","Date","dd","String","getDate","padStart","mm","getMonth","date","getFullYear","hours","getHours","minutes","getMinutes","seconds","getSeconds","dateTime","key","trail_event_id","style","marginBottom","to","pathname","width","height","src","imageHome_url","alt","name","init_date","end_date","color","id","substring","size","window","innerWidth","Carousel","0","items","1","handleOnDragStart","e","preventDefault","autoPlay","responsive","this","getSize","fadeOutAnimation","mouseDragEnabled","buttonsDisabled","dotsDisabled","autoPlayInterval","onDragStart","React","Component","Header","location","fontSize","href","onClick","GoToHomePage","Context","createContext","localStorage","getItem","navigator","language","toUpperCase","Portuguese","Spanish","French","English","Wrapper","useState","locale","setLocale","messages","setMessages","Provider","value","selectLang","newLocale","removeItem","setItem","children","LanguageSelector","context","useContext","defaultCountry","onSelect","countryCode","countries","showSelectedLabel","showOptionLabel","FooterPage","position","Math","floor","random","length","App","prevProps","type","API_KEY","process","API_URL","TOKEN","getTrailEvents","a","fetch","headers","Headers","Authorization","API_CALL","json","data","setState","showMore","loading","getALLTrailEvents","scrollTo","checkShow","state","backgroundColor","LoadingAthletes","Button","background","Home","getEventInfo","eventID","EventInfo","data-toggle","role","JSON","parse","rehydrate","CheckSize","stringify","float","eventLogo_url","class","Footer","maxWidth","SponserLogo_url","menuSizeTop","menuSizeItem","fontWeight","Menu","getCompetitionList","CompetitionList","OnInit","compList","reload","feedback","activeStyle","menuStatic","competitionID","short_name","data-widget","Competition","parseInt","competition_id","long_name","convertedVapidKey","base64String","padding","repeat","base64","replace","rawData","atob","outputArray","Uint8Array","i","charCodeAt","urlBase64ToUint8Array","sendSubscription","subscription","userID","status","body","method","subscribeUser","serviceWorker","ready","then","registration","pushManager","getSubscription","existedSubscription","console","log","subscribe","applicationServerKey","userVisibleOnly","newSubscription","catch","Notification","permission","error","favoritesChecker","ListaFavoritos","userAgent","toLowerCase","indexOf","tableFav","removeFavoritesTable","removeFavorites","addFavorites","AthleteDetail","checkFavoritesResume","checkFavorites","checkIfTableorResume","calculatePagination","minimalSize","sizeArray","push","TableSubscribers","category","athleteList","athelete","Tableuniquecategory","Set","sort","nacionality","athlete","Tableuniquenacionality","competition","Tableuniquecompetition","club","Tableuniqueclub","inscription_status_code","Tableuniqueinscription_status_code","columns","accessor","sortable","textAlign","show","d","Number","dorsal_number","Filter","filter","onChange","txt","event","target","placeholder","Cell","row","original","athlete_id","filterMethod","includes","textAlignLast","k","toString","filterable","defaultSorted","desc","previousText","nextText","noDataText","defaultPageSize","pageSizeOptions","showPagination","showPaginationTop","showPaginationBottom","showPageSizeOptions","showPageJump","collapseOnSortingChange","collapseOnPageChange","collapseOnDataChange","freezeWhenExpanded","multiSort","resizable","defaultSortDesc","pageText","rowsText","NumberParticipants","NumberCategories","NumberTeams","NumberNationalities","giveup","country","EventSubscribers","getAthletsList","match","params","EventID","clear","athList","display","justifyContent","TableGiveUP","escalao","Tableuniquelocal","mimWidth","peitoral","TableDisqualified","getAthletesGiveUPList","CompID","atheleGiveUPList","loadingGiveUP","getAthletesDisqualifiedList","atheleDisqualifiedList","loadingDisqualified","bind","CompName","FormatTime","time","TimeSplit","split","H","M","S","options","TableCheckpoints","checkPosition","FasterMale","Array","el","sexo","fasterTime","acumulated_time","fasterName","FasterFemale","AthleteListSize","sizeCheckpointList","GetFirstRunCheckpointList","CheckpointList","loadingCheckpoints","Getlastcheckpoint","GetCheckpointList","GetAthleteList","Checkpointid","AthleteList","loadingAthlets","checkpointname","checkpointnameShow","AtheletsTotal","AtheletsTotalLoaded","CheckpointTotalLoaded","CheckpointTotal","PopulateBadgesvalues","checkpointID","checkpointName","checkpoint","checkpoint_id","GetTotalAthlets","total","checkpointValue","CheckpointID","Value","checkpoint_order","ceil","Tooltip","placement","title","arrow","UpdateStateCheckpoint","GetBadgesvalues","zIndex","border","LoadingCheckpoints","alignItems","ListAthletes","Winners","GetCategoryList","dataSlice","slice","CategoryList","loadingAthlete","loadingCategory","GetAthleteListGender","Gender","GetAthleteListCategory","CategoryName","Positon","Category","LoadingCategory","StaticElementGlobal","StaticElementGlobalM","StaticElementGlobalF","LoadingAthlete","TableTier","distance","distancia_acumulada","km","finaltime","parseFloat","KMperH","isNaN","toFixed","MInperKM","CalculateKMperH","isFinite","Altitude","altitude","getaltitude","getDistance","CalculateMINperKM","TableGlobal","TableGender","Velocity","Faster","Normal","labels","datasets","label","Name","fill","lineTension","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","chartDataVerification","Position","Global","Tier","legend","scales","yAxes","ticks","max","maxY","min","stepSize","PositionGlobal","positionGlobal","positionTier","positionGender","text","velocity","speedKM","speedMIN","LastPlace","place","MICROSERVICE_PDFS","arrayGlobal","arrayGender","arrayTier","arrayFaster","LastCheckpointID","FasterID","GetListGlobal","AthleteID","ListGlobal","loadingGlobal","PersonalInfo","GetListGlobalFaster","ListFaster","loadingFaster","GetListTier","ListTier","loadingTier","GetListGender","ListGender","loadingGender","GetCheckpointInfo","CheckpointInfo","loadingCheckpoint","Athlete","athleteListStatus","loadingList","GetFaster","getFasterTimes","list","Listinside","getLastCheckpoint","global","gender","PositionTier","PositionGender","KM","MIN","AvarageKM","AvarageMIN","ChartVelocityKMRender","ChartVelocityMINRender","ChartPositionRender","LastPositon","pop","certification","getCertificate","disabled","ID_Template","cert_tpl","Codigo_Validacao","cert_code","Nome_Atleta","encodeURIComponent","Sexo","Prova","Posicao_Escalao","Escalao","Posicao_Geral","Tempo","Peitoral","Clube","Total_Info_Recebida","Hash_Calculada","require","md5","url","PopulateArrays","PositionWidgetRender","TimeVelocityWidgetRender","photo_url","getStatus","showCertificateButton","tableGlobal","tableTier","tableGender","chartsRender","compID","athleteid","firstrun","Teams","GetLastCheckpoint","checkpointid","GetTeamsMale","teamlist","GetTeamsFemale","genderState","GetTeamsMaleorCache","GetTeamsFemaleorCache","UpdateStateGender","team","APItime","Time","timeLimited","pointerEvents","Team","LogoURL","Athlets","paddingTop","borderSpacing","borderCollapse","StaticElementTeamM","StaticElementTeamF","checkIFthereISDataTOShow","TableFavorites","index","splice","removeFav","NumberFavorites","arrayFavorites","Favorites","renderTable","bar","ISThree","Label","Inscription","Start","dataStart","Arrivals","dataLast","beginAtZero","pie","StatsGlobal","GetCategory","categoryList","GetGender","genderList","GetCompetitions","competitionList","loadingCompetitions","GetNacionality","nacionalityList","loadingNacionality","GenderComp","Ground","scaleLabel","labelString","Checkpoint","StatsCompetition","GetCategoryStart","categoryListStart","loadingCategoryStart","GetCategoryLast","categoryListLast","loadingCategoryLast","GetGenderStart","genderListStart","loadingGenderStart","GetGenderLast","genderListLast","loadingGenderLast","GetGround","GroundList","loadingGround","GetCheckpointTotal","CheckpointTotalList","NacionalityList","GetNacionalityStart","NacionalityListStart","loadingNacionalityStart","GetNacionalityLast","NacionalityListLast","loadingNacionalityLast","GetData","loadingGroundStart","Starts","Inscriptions","email","message","subject","isClicked","onSubmit","handleSubmit","onNameChange","required","autoComplete","backgroundImage","backgroundRepeat","backgroundAttachment","backgroundSize","backgroundPosition","cursor","htmlFor","onEmailChange","onSubjecthange","onMessageChange","rows","Router","path","component","exact","PageSubscribers","PageAthleteDetail","PageGiveUp","PageSubscriversCompetiton","PageCheckpoints","PageTeams","PageWinners","PageFavorites","PageStatsGlobal","PageFeedback","PageStatsComp","isLocalhost","Boolean","hostname","registerValidSW","swUrl","register","onupdatefound","installingWorker","installing","onstatechange","controller","config","onUpdate","onSuccess","self","addEventListener","icon","waitUntil","showNotification","ReactDOM","render","document","getElementById","URL","origin","response","get","unregister","checkValidServiceWorker","registerServiceWorker","contentType","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","keys","Object","resolve","module","exports"],"mappings":"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","file":"static/js/main.a27dc4bb.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport {IntlProvider} from \"react-intl\"\r\nimport Portuguese from \"./../languages/pt.json\"\r\nimport Spanish from \"./../languages/es.json\"\r\nimport French from \"./../languages/fr.json\"\r\nimport English from \"./../languages/en.json\"\r\n\r\n\r\nexport const Context = React.createContext();\r\nvar local\r\nlet lang;\r\n//check if is save any languague\r\nif(!!localStorage.getItem(\"Languague\")){\r\n  local=localStorage.getItem(\"Languague\");\r\n}\r\nelse{\r\n  local = navigator.language.substring(3,5).toUpperCase()\r\n}\r\nif (local === \"PT\") {\r\n  lang = Portuguese;\r\n}\r\nelse if (local === \"ES\") {\r\n  lang = Spanish;\r\n}\r\nelse if (local === \"FR\") {\r\n  lang = French;\r\n}\r\nelse if (local === \"GB\") {\r\n    lang = English;\r\n  }\r\nelse {\r\n  local = \"GB\"\r\n  lang = English;\r\n}\r\n\r\n const Wrapper=(props) => {\r\n\r\n  const[locale,setLocale]= useState(local);\r\n  const [messages,setMessages]= useState(lang);\r\n\r\n  function selectLang(language){\r\n    const newLocale =language ;\r\n    //remote from local storage the old one\r\n    localStorage.removeItem(\"Languague\")\r\n    //add new languague to storage\r\n    localStorage.setItem(\"Languague\", language)\r\n    setLocale(newLocale)\r\n    if (newLocale === \"PT\") {\r\n      setMessages(Portuguese)\r\n    }\r\n    else if (newLocale === \"ES\") {\r\n      setMessages(Spanish)\r\n    }\r\n    else if (newLocale === \"FR\") {\r\n      setMessages(French)\r\n    }\r\n    else if (newLocale === \"GB\") {\r\n      setMessages(English)\r\n      }\r\n    else {\r\n      setMessages(English)\r\n    }\r\n  }\r\n\r\n    return(\r\n      <Context.Provider value={{locale, selectLang}}>\r\n        <IntlProvider messages={messages} locale={locale}>\r\n            {props.children}\r\n        </IntlProvider>\r\n        </Context.Provider>\r\n    )\r\n\r\n}\r\n\r\nexport default Wrapper","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FormattedMessage} from 'react-intl';\n\nconst Trails = props => (\n  \n  <div className=\"container-fluid\" >\n    <div className=\"row\">\n      {props.trails.map(trail => {\n\n        var today = new Date();\n        var dd = String(today.getDate()).padStart(2, '0');\n        var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n        var yyyy = today.getFullYear();\n        \n        var date = yyyy + '-' + mm + '-' + dd;\n\n        var hours   =  today.getHours();\n        var minutes = today.getMinutes();\n        var seconds = today.getSeconds();\n        if (hours   < 10) {hours   = \"0\"+hours;}\n        if (minutes < 10) {minutes = \"0\"+minutes;}\n        if (seconds < 10) {seconds = \"0\"+seconds;}\n        \n        var time = hours+':'+minutes+':'+seconds;\n        var dateTime = date + \"T\" + time;\n        return (\n          <div\n            key={trail.trail_event_id}\n            className=\"col-md-4\"\n            style={{ marginBottom: \"2rem\" }}\n          >\n            {/* link is to redirect usando acento `*/}\n            <Link to={{pathname: `/EventParticipants/${trail.trail_event_id}`}}>\n              <div className=\"trails__box\">\n                <img style={{  width: \"100%\", height: \"100%\"}}\n                  className=\"trails__box-img\"\n                  src={trail.imageHome_url}\n                  alt={trail.name}\n                ></img>\n                <div className=\"trail__text\">\n                  <h5 className=\"trail__title\">{trail.name}</h5>\n                  <p className=\"trail__subtitle\">\n                    {/* if */}\n                    {trail.init_date < dateTime && trail.end_date > dateTime  ? (\n                      /* then */ <span style={{ color: \"#F44336\" }} >\n                        a decorrer\n                      </span>\n                    ) : (\n                      /* else */ <span style={{color:\"#3c8dbc\"}}>\n                        <FormattedMessage id=\"DATE\" />:{trail.init_date.substring(0, 10)} <FormattedMessage id=\"HOUR\" />:\n                        {trail.init_date.substring(11, 16)}\n                      </span>\n                    )}\n                  </p>\n                </div>\n              </div>\n            </Link>\n          </div>\n        );\n      })}\n    </div>\n  </div>\n);\nexport default Trails;\n","import React from \"react\";\nimport AliceCarousel from \"react-alice-carousel\";\nimport \"react-alice-carousel/lib/alice-carousel.css\";\nvar size = window.innerWidth;\nclass Carousel extends React.Component {\n \n  getSize(){\n    var responsive={};\n\n    if(size >1000){\n      return(responsive = {\n        0: { items: 1 },\n        1: { items: 2 }\n      })\n    }\n    else{\n     return( responsive = {\n        0: { items: 1 }\n      })\n\n    }\n  }\n\n  render() {\n\n    \n    const handleOnDragStart = e => e.preventDefault();\n    return (\n      \n      <AliceCarousel\n        autoPlay={true}\n        responsive={this.getSize()}\n        fadeOutAnimation={true}\n        mouseDragEnabled={true}\n        buttonsDisabled={true}\n        dotsDisabled={true}\n        autoPlayInterval={2000}\n      >\n        <img\n          alt=\"\"\n          className=\"Carousel\"\n          src=\"https://i.imgur.com/sBM8dyK.jpg\"\n          onDragStart={handleOnDragStart}\n        />\n        <img\n          alt=\"\"\n          className=\"Carousel\"\n          src=\"https://i.imgur.com/9xdqNjl.jpg\"\n          onDragStart={handleOnDragStart}\n        />\n        <img\n          alt=\"\"\n          className=\"Carousel\"\n          src=\"https://i.imgur.com/WbGrJzo.jpg\"\n          onDragStart={handleOnDragStart}\n        />\n                <img\n          alt=\"\"\n          className=\"Carousel\"\n          src=\"https://i.imgur.com/sBM8dyK.jpg\"\n          onDragStart={handleOnDragStart}\n        />\n                <img\n          alt=\"\"\n          className=\"Carousel\"\n          src=\"https://i.imgur.com/WbGrJzo.jpg\"\n          onDragStart={handleOnDragStart}\n        />\n      </AliceCarousel>\n    );\n  }\n}\nexport default Carousel;\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class Header extends Component {\r\n  GoToHomePage() {\r\n    window.location = '/';\r\n  }\r\n  render()\r\n   {\r\n    return (\r\n      <div>\r\n        <header className=\"main-header\">\r\n          {/* Logo */}\r\n          <Link to={{ pathname: `/` }} className=\"logo\">\r\n            {/* mini logo for sidebar mini 50x50 pixels */}\r\n            <span className=\"logo-mini\">\r\n              <b>T</b>S\r\n            </span>\r\n            {/* logo for regular state and mobile devices */}\r\n            <span style={{fontSize:\"22px\"}} className=\"logo-lg\">\r\n              <a href=\"#\" onClick={() => this.GoToHomePage()}> <img src=\"/logo_ts_w_32.png\"></img> <strong>Timing</strong> System</a>\r\n            </span>\r\n          </Link>\r\n          {/* Header Navbar: style can be found in header.less */}\r\n          <nav className=\"navbar navbar-static-top\">\r\n            {/* Sidebar toggle button*/}\r\n\r\n            {/* Navbar Right Menu */}\r\n            <div className=\"navbar-custom-menu\">\r\n              <ul className=\"nav navbar-nav\">\r\n                <li className=\"dropdown user user-menu\">\r\n                    <span className=\"hidden-xs\"></span>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </nav>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","\r\nimport React, { Component, useContext } from \"react\";\r\nimport { Context } from \"../../languages/Wrapper\"\r\nimport ReactFlagsSelect from 'react-flags-select';\r\nimport \"../../languages/flags/react-flags-select.css\";\r\n\r\n\r\nconst LanguageSelector = (props) => {\r\n\r\n\r\n  const context = useContext(Context)\r\n  return (\r\n    <div>\r\n      <ReactFlagsSelect  defaultCountry={context.locale}  onSelect={(countryCode) => context.selectLang(countryCode)}\r\n        countries={[\"PT\", \"GB\", \"FR\", \"ES\"]}\r\n        showSelectedLabel={false}\r\n        showOptionLabel={false}\r\n      />\r\n\r\n    </div>\r\n\r\n\r\n  );\r\n}\r\nexport default LanguageSelector\r\n","import React from \"react\";\nimport LanguagueSelector from \"./LanguageSelector\"\n\nconst FooterPage = () => {\n  return (\n<footer className=\"App-footer \">\n<span className=\"pull-right\"><LanguagueSelector /></span>\n\n\n</footer>\n);\n  }\n\nexport default FooterPage;","import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\nimport Loader from 'react-loader-spinner'\nimport React from \"react\";\n\nvar style = [\"BallTriangle\", \"ThreeDots\", \"Bars\", \"Circles\", \"Grid\", \"Puff\", \"TailSpin\", \"Triangle\", \"RevolvingDot\", \"Watch\", \"MutatingDots\"];\nvar position = Math.floor(Math.random() * style.length)\n\n\n\nexport default class App extends React.Component {\n   \n   componentDidUpdate(prevProps) {\n      position = Math.floor(Math.random() * style.length)\n   }\n\n   render() {\n      return (\n         <Loader\n            type={style[position]}\n            color=\"#3c8dbc\"\n            height={100}\n            width={100}\n         />\n      );\n   }\n}","import React, { Component } from \"react\";\r\nimport \"../../AppHome.css\";\r\nimport \"../../App.css\";\r\nimport \"../../AdminLTE.css\";\r\nimport ListTrails from \"./trails\";\r\nimport Carousel from \"../structure/carousel\";\r\nimport NavBar from \"../structure/HeaderHome\";\r\nimport FooterPage from \"../structure/footerHome\";\r\nimport { Button } from \"reactstrap\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport { FormattedMessage} from 'react-intl';\r\n\r\nconst API_KEY =`${process.env.REACT_APP_API_TRAIL_KEY}`\r\nconst API_URL =`${process.env.REACT_APP_API_TRAIL_URL}`\r\nconst TOKEN = API_KEY;\r\n\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      trails: [],\r\n      showMore: false,\r\n      loading: false,\r\n    };\r\n    this.getTrailEvents();\r\n  }\r\n\r\n\r\n /*show recent trails events */\r\n  getTrailEvents = async () => {\r\n    const API_CALL = await fetch(\r\n      `${API_URL}/trail/EventRecents/`,\r\n      {\r\n        headers: new Headers({\r\n          Authorization: TOKEN\r\n        })\r\n      }\r\n    );\r\n    const data = await API_CALL.json();\r\n    this.setState({ trails: data, showMore: false , loading:true});\r\n  };\r\n\r\n  /*show all trails events */\r\n  getALLTrailEvents = async () => {\r\n    this.setState({ loading:false});\r\n    const API_CALL = await fetch(\r\n      `${API_URL}/trail/Event/`,\r\n      {\r\n        headers: new Headers({\r\n          Authorization: TOKEN\r\n        })\r\n      }\r\n    );\r\n    const data = await API_CALL.json();\r\n    this.setState({ trails: data, showMore: true, loading:true });\r\n    window.scrollTo(0, 0)\r\n\r\n  };\r\n\r\n\r\n  /*used to check if user click button, hide and show more trails */\r\n  checkShow= () => {\r\n    if (this.state.showMore) {\r\n      this.getTrailEvents();\r\n    } else {\r\n      this.getALLTrailEvents();\r\n    }\r\n  }\r\n\r\n    /*Loading message for the checkpoints*/\r\n    LoadingAthletes() {\r\n      if (this.state.loading === true) {\r\n        return (\r\n         \r\n          <ListTrails trails={this.state.trails} />\r\n\r\n        )\r\n      }\r\n      else {\r\n        return (\r\n          <Loader/>\r\n        )\r\n      }\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{backgroundColor:\"White\"}} className=\"App\">\r\n        <NavBar />\r\n        <Carousel />\r\n        \r\n        {/* Listar os trails e imagens*/}\r\n        {this.LoadingAthletes()}\r\n        {/* Listar todos os trails */}\r\n        <Button\r\n          onClick={this.checkShow}\r\n          style={{ background: \"#3c8dbc\", color:\"white\" }}\r\n        >\r\n          \r\n          {this.state.showMore === false ? <FormattedMessage id=\"BUTTONHOMEMORE\" /> : <FormattedMessage id=\"BUTTONHOMELESS\" /> }\r\n        </Button>{\" \"}\r\n        \r\n        <FooterPage/>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React, { Component } from \"react\";\r\nimport HomePage from \"./components/Pages/Home\";\r\nimport { IntlProvider} from 'react-intl';\r\nimport \"./AdminLTE.css\";\r\n\r\n\r\nexport default class App extends Component {\r\n  render() {\r\n\r\n    return (\r\n        <div>\r\n          <HomePage />\r\n        </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport LanguagueSelector from \"./LanguageSelector\"\r\n\r\nconst API_KEY = `${process.env.REACT_APP_API_TRAIL_KEY}`;\r\nconst API_URL = `${process.env.REACT_APP_API_TRAIL_URL}`;\r\nconst TOKEN = API_KEY;\r\nvar size = window.innerWidth;\r\n\r\nexport default class Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      EventInfo: [],\r\n      loading: false,\r\n    };\r\n    this.getEventInfo();\r\n  }\r\n  CheckSize() {\r\n    if (size < 800) {\r\n      return (\r\n        <a style={{fontSize:\"22px\"}}\r\n          href=\"##\"\r\n          className=\"sidebar-toggle\"\r\n          data-toggle=\"push-menu\"\r\n          role=\"button\"\r\n        >\r\n          <span  className=\"sr-only\">Toggle navigation</span>\r\n        </a>\r\n\r\n      )\r\n    }\r\n  }\r\n  getEventInfo = async e => {\r\n\r\n    const API_CALL = await fetch(\r\n      `${API_URL}/trail/Event/${this.props.eventID}/`,\r\n      {\r\n        headers: new Headers({\r\n          Authorization: TOKEN\r\n        })\r\n      }\r\n    );\r\n    const data = await API_CALL.json();\r\n    this.setState({ EventInfo: data, loading: true });\r\n\r\n  };\r\n\r\n  componentWillMount() {\r\n    if(localStorage.getItem(`State${this.props.eventID}`)){\r\n      if(JSON.parse(localStorage.getItem(`EventID${this.props.eventID}`))===this.props.eventID){\r\n        const rehydrate = JSON.parse(localStorage.getItem(`State${this.props.eventID}`))\r\n        this.setState(rehydrate)\r\n      }\r\n      else{\r\n        this.getEventInfo();\r\n        this.CheckSize();\r\n\r\n      }\r\n    }\r\n    else{\r\n      this.getEventInfo();\r\n      this.CheckSize();\r\n    }\r\n\r\n  }\r\n  componentWillUnmount() {\r\n    localStorage.setItem(`State${this.props.eventID}`, JSON.stringify(this.state))\r\n    localStorage.setItem(`EventID${this.props.eventID}`,JSON.stringify(this.props.eventID))\r\n  }\r\n\r\n  GoToHomePage() {\r\n    window.location = '/';\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <header className=\"main-header\">\r\n          {/* Logo */}\r\n          <div className=\"logo\">\r\n\r\n            {/* mini logo for sidebar mini 50x50 pixels */}\r\n            <span className=\"logo-mini\">\r\n              <a href=\"#\" onClick={() => this.GoToHomePage()}><img src=\"/logo_ts_w_32.png\"/></a>\r\n            </span>\r\n            {/* logo for regular state and mobile devices */}\r\n            <span style={{fontSize:\"22px\"}} className=\"logo-lg\">\r\n              <a href=\"#\" onClick={() => this.GoToHomePage()}> <img src=\"/logo_ts_w_32.png\"></img> <strong>Timing</strong> System</a>\r\n            </span>\r\n          </div>\r\n          {/* Header Navbar: style can be found in header.less */}\r\n          <nav className=\"navbar navbar-static-top\">\r\n            {/* Sidebar toggle button*/}\r\n            {this.CheckSize()}\r\n            {/* Navbar Right Menu */}\r\n            <div className=\"navbar-custom-menu\">\r\n              <ul className=\"nav navbar-nav\">\r\n\r\n              {/* imagem aqui maximo 100 width */}\r\n                <li className=\"dropdown user user-menu\">\r\n                \r\n\r\n                  <div style={{ float: \"left\" }} className=\"logoText\" >\r\n                    \r\n                  <img src={this.state.EventInfo.eventLogo_url} class=\"margin\" style={{height: size >800 ? \"60px\" : \"40px\", width: \"auto\" }}></img> \r\n\r\n                    <strong>{this.state.EventInfo.name}</strong> \r\n                  </div>\r\n                  \r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </nav>\r\n        </header>\r\n      </div >\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport LanguagueSelector from \"./LanguageSelector\"\nconst API_KEY = `${process.env.REACT_APP_API_TRAIL_KEY}`;\nconst API_URL = `${process.env.REACT_APP_API_TRAIL_URL}`;\nconst TOKEN = API_KEY;\nexport default class Footer extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      EventInfo: [],\n      loading: false,\n    };\n    this.getEventInfo();\n  }\n\n  getEventInfo = async e => {\n\n    const API_CALL = await fetch(\n      `${API_URL}/trail/Event/${this.props.eventID}/`,\n      {\n        headers: new Headers({\n          Authorization: TOKEN\n        })\n      }\n    );\n    const data = await API_CALL.json();\n    this.setState({ EventInfo: data, loading: true });\n\n  };\n  componentWillMount() {\n    if(localStorage.getItem(`State${this.props.eventID}`)){\n      if(JSON.parse(localStorage.getItem(`EventID${this.props.eventID}`))===this.props.eventID){\n        const rehydrate = JSON.parse(localStorage.getItem(`State${this.props.eventID}`))\n        this.setState(rehydrate)\n      }\n      else{\n        this.getEventInfo();\n\n      }\n    }\n    else{\n      this.getEventInfo();\n    }\n\n  }\n  componentWillUnmount() {\n    localStorage.setItem(`State${this.props.eventID}`, JSON.stringify(this.state))\n    localStorage.setItem(`EventID${this.props.eventID}`,JSON.stringify(this.props.eventID))\n  }\n\n  \n\n  render() {\n\n    return (\n      <div >\n\n        <footer className=\"main-footer \">\n          <span className=\"pull-right\"><LanguagueSelector /></span>\n          <div style={{ maxWidth: \"800px\" }}>\n            <img src={this.state.EventInfo.SponserLogo_url} style={{ maxWidth: \"100%\", height: \"auto\", width: \"auto\" }} class=\"imgFooter\" />\n          </div>\n        </footer>\n\n      </div>\n    );\n  }\n}\n\n","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\n\r\nconst API_KEY = `${process.env.REACT_APP_API_TRAIL_KEY}`;\r\nconst API_URL = `${process.env.REACT_APP_API_TRAIL_URL}`;\r\nconst TOKEN = API_KEY;\r\nvar size = window.innerWidth;\r\nvar menuSizeTop = 16;\r\nvar menuSizeItem = 14;\r\n\r\nconst style = { fontWeight: \"bold\", color: \"#3c8dbc\" };\r\nexport default class Menu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      CompetitionList: [],\r\n      EventInfo: [],\r\n      loading: false,\r\n    };\r\n    this.OnInit();\r\n    this.CheckSize();\r\n\r\n\r\n  }\r\n\r\n  componentWillMount() {\r\n    if (JSON.parse(localStorage.getItem(`EventID${this.props.eventID}`)) === this.props.eventID) {\r\n      if (localStorage.getItem(`State${this.props.eventID}`)) {\r\n        const rehydrate = JSON.parse(localStorage.getItem(`State${this.props.eventID}`))\r\n        this.setState(rehydrate)\r\n        const compList=JSON.parse(localStorage.getItem(`competitionList${this.props.eventID}`))\r\n        this.setState({CompetitionList : compList})\r\n      }\r\n      else {\r\n        this.getEventInfo();\r\n        this.getCompetitionList();\r\n      }\r\n    }\r\n    else {\r\n      this.getEventInfo();\r\n      this.getCompetitionList();\r\n    }\r\n\r\n  }\r\n\r\n  //for menu open and close\r\n  OnInit() {\r\n    if (window.localStorage) {\r\n      if (!localStorage.getItem('firstLoad')) {\r\n        localStorage['firstLoad'] = true;\r\n        window.location.reload();\r\n      }\r\n      else\r\n        localStorage.removeItem('firstLoad');\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    localStorage.setItem(`State${this.props.eventID}`, JSON.stringify(this.state))\r\n    localStorage.setItem(`competitionList${this.props.eventID}`, JSON.stringify(this.state.CompetitionList))\r\n    localStorage.setItem(`EventID${this.props.eventID}`, JSON.stringify(this.props.eventID))\r\n  }\r\n\r\n  CheckSize() {\r\n    if (size < 800) {\r\n      menuSizeItem = 21;\r\n      menuSizeTop = 23;\r\n    }\r\n  }\r\n\r\n  getCompetitionList = async () => {\r\n\r\n    const API_CALL = await fetch(\r\n      `${API_URL}/trail/Competitions/${this.props.eventID}/`,\r\n      {\r\n        headers: new Headers({\r\n          Authorization: TOKEN\r\n        })\r\n      }\r\n    );\r\n    const data = await API_CALL.json();\r\n    this.setState({ CompetitionList: data });\r\n\r\n  };\r\n\r\n  getEventInfo = async () => {\r\n\r\n    const API_CALL = await fetch(\r\n      `${API_URL}/trail/Event/${this.props.eventID}/`,\r\n      {\r\n        headers: new Headers({\r\n          Authorization: TOKEN\r\n        })\r\n      }\r\n    );\r\n    const data = await API_CALL.json();\r\n    this.setState({ EventInfo: data, loading: true });\r\n  };\r\n\r\n  getFeedBackPage() {\r\n    if (this.state.EventInfo.feedback === 1) {\r\n      return (<li>\r\n        <NavLink activeStyle={style} style={{ fontSize: `${menuSizeItem}px` }} to={{ pathname: `/feedback/${this.props.eventID}` }}>\r\n          <i style={{ fontSize: `${menuSizeItem}px` }} className=\"fa fa-circle-o\" /> <FormattedMessage id=\"FEEDBACK\" />\r\n        </NavLink>\r\n\r\n      </li>)\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    let menuStatic;\r\n    if (this.state.loading === true) {\r\n      if (this.props.competitionID === 0) {\r\n        menuStatic = (\r\n          <li className=\"treeview active\">\r\n            <a href=\"##\">\r\n              <i style={{ fontSize: `${menuSizeTop}px` }} className=\"fa  fa-road\" />\r\n              <span style={{ fontSize: `${menuSizeTop}px` }}>{(this.state.loading === true) ? \" \" + this.state.EventInfo.short_name : <FormattedMessage id=\"LOADING\" />}</span>\r\n              <span className=\"pull-right-container\">\r\n                <i className=\"fa fa-angle-left pull-right\" />\r\n              </span>\r\n            </a>\r\n            <ul className=\"treeview-menu active\">\r\n              <li>\r\n                <NavLink activeStyle={style} style={{ fontSize: `${menuSizeItem}px` }} to={{ pathname: `/EventParticipants/${this.props.eventID}` }}>\r\n                  <i style={{ fontSize: `${menuSizeItem}px` }} className=\"fa fa-circle-o\" /> <FormattedMessage id=\"INSCRIPTIONS\" />\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink activeStyle={style} style={{ fontSize: `${menuSizeItem}px` }} to={{ pathname: `/Favorites/${this.props.eventID}` }}>\r\n                  <i style={{ fontSize: `${menuSizeItem}px` }} className=\"fa fa-circle-o\" /> <FormattedMessage id=\"FAVORITES\" />\r\n                </NavLink>\r\n              </li>\r\n               {/*\r\n              <li>\r\n               <NavLink activeStyle={style} style={{ fontSize: `${menuSizeItem}px` }} to={{ pathname: `/Stats/${this.props.eventID}` }}>\r\n                  <i style={{ fontSize: `${menuSizeItem}px` }} className=\"fa fa-circle-o\" /> <FormattedMessage id=\"STATS\" />\r\n                </NavLink>\r\n\r\n              </li>\r\n        {this.getFeedBackPage()}*/}\r\n            </ul>\r\n          </li>\r\n        );\r\n      }\r\n      else {\r\n        menuStatic = (\r\n          <li className=\"treeview\">\r\n            <a href=\"##\">\r\n              <i style={{ fontSize: `${menuSizeTop}px` }} className=\"fa  fa-road\" />\r\n              <span style={{ fontSize: `${menuSizeTop}px` }}>{(this.state.loading === true) ? \" \" + this.state.EventInfo.short_name : <FormattedMessage id=\"LOADING\" />}</span>\r\n              <span className=\"pull-right-container\">\r\n                <i className=\"fa fa-angle-left pull-right\" />\r\n              </span>\r\n            </a>\r\n            <ul className=\"treeview-menu active\">\r\n              <li>\r\n                <NavLink activeStyle={style} activeStyle={{\r\n                  fontWeight: \"bold\",\r\n                  color: \"red\"\r\n                }} style={{ fontSize: `${menuSizeItem}px` }} to={{ pathname: `/EventParticipants/${this.props.eventID}` }}>\r\n                  <i style={{ fontSize: `${menuSizeItem}px` }} className=\"fa fa-circle-o\" /> <FormattedMessage id=\"INSCRIPTIONS\" />\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink activeStyle={style} style={{ fontSize: `${menuSizeItem}px` }} to={{ pathname: `/Favorites/${this.props.eventID}` }}>\r\n                  <i style={{ fontSize: `${menuSizeItem}px` }} className=\"fa fa-circle-o\" /> <FormattedMessage id=\"FAVORITES\" />\r\n                </NavLink>\r\n              </li>\r\n              {/*\r\n              <li>\r\n                <NavLink activeStyle={style} style={{ fontSize: `${menuSizeItem}px` }} to={{ pathname: `/Stats/${this.props.eventID}` }}>\r\n                  <i style={{ fontSize: `${menuSizeItem}px` }} className=\"fa fa-circle-o\" /> <FormattedMessage id=\"STATS\" />\r\n                </NavLink>\r\n              </li>\r\n              {this.getFeedBackPage()}*/}\r\n\r\n            </ul>\r\n          </li>\r\n        );\r\n      }\r\n\r\n\r\n\r\n    } else {\r\n      menuStatic = (\r\n        <li className=\"active treeview menu-open\">\r\n          <a href=\"##\">\r\n            <i className=\"fa fa-dashboard\" />\r\n            <span><FormattedMessage id=\"LOADING\" /> <i class=\"fa fa-refresh fa-spin\"></i></span>\r\n            <span className=\"pull-right-container\">\r\n              <i className=\"fa fa-angle-left pull-right\" />\r\n            </span>\r\n          </a>\r\n        </li>\r\n      );\r\n    }\r\n\r\n    return (\r\n\r\n      <div>\r\n        <aside className=\"main-sidebar\">\r\n          {/* sidebar: style can be found in sidebar.less */}\r\n          <section className=\"sidebar\">\r\n            {/* sidebar menu: : style can be found in sidebar.less */}\r\n            <ul class=\"sidebar-menu tree\" data-widget=\"tree\">\r\n              {/*MENU Event*/}\r\n              {menuStatic}\r\n              {/*MENU Dynamic*/}\r\n              {this.state.CompetitionList.map(Competition => {\r\n                if (parseInt(this.props.competitionID) === parseInt(Competition.competition_id)) {\r\n                  return (\r\n                    <li key={Competition.competition_id} className=\"treeview active\">\r\n                      <a href=\"##\">\r\n                        <i style={{ fontSize: `${menuSizeTop}px` }} className=\"fa fa-dashboard\" />\r\n                        <span style={{ fontSize: `${menuSizeTop}px` }}>{\" \" + Competition.name}</span>\r\n                        <span style={{ fontSize: `${menuSizeTop}px` }} className=\"pull-right-container\">\r\n                          <i className=\"fa fa-angle-left pull-right\" />\r\n                        </span>\r\n                      </a>\r\n                      <ul className=\"treeview-menu\">\r\n                        <li>\r\n                          <NavLink activeStyle={style} style={{ fontSize: `${menuSizeItem}px` }} to={{ pathname: `/ParticipantsCompetiton/${this.props.eventID}/${Competition.competition_id}/${Competition.long_name}` }}>\r\n                            <i style={{ fontSize: `${menuSizeItem}px` }} className=\"fa fa-circle-o\" /> <FormattedMessage id=\"INSCRIPTIONS\" />\r\n                          </NavLink>\r\n                        </li>\r\n                        <li>\r\n                          <NavLink activeStyle={style} style={{ fontSize: `${menuSizeItem}px` }} to={{ pathname: `/Checkpoints/${this.props.eventID}/${Competition.competition_id}/${Competition.long_name}` }}>\r\n                            <i style={{ fontSize: `${menuSizeItem}px` }} className=\"fa fa-circle-o\" /> <FormattedMessage id=\"CROSSING\" />\r\n                          </NavLink>\r\n                        </li>\r\n                        <li>\r\n                          <NavLink activeStyle={style} style={{ fontSize: `${menuSizeItem}px` }} to={{ pathname: `/Winners/${this.props.eventID}/${Competition.competition_id}/${Competition.long_name}` }}>\r\n                            <i style={{ fontSize: `${menuSizeItem}px` }} className=\"fa fa-circle-o\" /> <FormattedMessage id=\"WINNERS\" />\r\n                          </NavLink>\r\n                        </li>\r\n                        <li>\r\n                          <NavLink activeStyle={style} style={{ fontSize: `${menuSizeItem}px` }} to={{ pathname: `/EventGiveUp/${this.props.eventID}/${Competition.competition_id}/${Competition.long_name}` }}>\r\n                            <i style={{ fontSize: `${menuSizeItem}px` }} className=\"fa fa-circle-o\" /> <FormattedMessage id=\"DIDNOTFINISH\" />\r\n                          </NavLink>\r\n\r\n                        </li>\r\n                        <li>\r\n                          <NavLink activeStyle={style} style={{ fontSize: `${menuSizeItem}px` }} to={{ pathname: `/Teams/${this.props.eventID}/${Competition.competition_id}/${Competition.long_name}` }}>\r\n                            <i style={{ fontSize: `${menuSizeItem}px` }} className=\"fa fa-circle-o\" /> <FormattedMessage id=\"TEAMS\" />\r\n                          </NavLink>\r\n                        </li>\r\n                        {/*\r\n                        <li>\r\n                          <NavLink activeStyle={style} style={{ fontSize: `${menuSizeItem}px` }} to={{ pathname: `/StatsComp/${this.props.eventID}/${Competition.competition_id}/${Competition.long_name}` }}>\r\n                            <i style={{ fontSize: `${menuSizeItem}px` }} className=\"fa fa-circle-o\" /> <FormattedMessage id=\"STATS\" />\r\n                          </NavLink>\r\n                        </li>*/}\r\n\r\n                      </ul>\r\n                    </li>\r\n                  );\r\n                }\r\n                else {\r\n                  return (\r\n                    <li key={Competition.competition_id} className=\"treeview\">\r\n                      <a href=\"##\">\r\n                        <i style={{ fontSize: `${menuSizeTop}px` }} className=\"fa fa-dashboard\" />\r\n                        <span style={{ fontSize: `${menuSizeTop}px` }}>{\"  \" + Competition.name}</span>\r\n                        <span className=\"pull-right-container\">\r\n                          <i style={{ fontSize: `${menuSizeTop}px` }} className=\"fa fa-angle-left pull-right\" />\r\n                        </span>\r\n                      </a>\r\n                      <ul className=\"treeview-menu\">\r\n                        <li>\r\n                          <NavLink activeStyle={style} style={{ fontSize: `${menuSizeItem}px` }} to={{ pathname: `/ParticipantsCompetiton/${this.props.eventID}/${Competition.competition_id}/${Competition.long_name}` }}>\r\n                            <i style={{ fontSize: `${menuSizeItem}px` }} className=\"fa fa-circle-o\" /> <FormattedMessage id=\"INSCRIPTIONS\" />\r\n                          </NavLink>\r\n                        </li>\r\n                        <li>\r\n                          <NavLink activeStyle={style} style={{ fontSize: `${menuSizeItem}px` }} style={{ fontSize: `${menuSizeItem}px` }} to={{ pathname: `/Checkpoints/${this.props.eventID}/${Competition.competition_id}/${Competition.long_name}` }}>\r\n                            <i style={{ fontSize: `${menuSizeItem}px` }} className=\"fa fa-circle-o\" /> <FormattedMessage id=\"CROSSING\" />\r\n                          </NavLink>\r\n                        </li>\r\n                        <li>\r\n                          <NavLink activeStyle={style} style={{ fontSize: `${menuSizeItem}px` }} to={{ pathname: `/Winners/${this.props.eventID}/${Competition.competition_id}/${Competition.long_name}` }}>\r\n                            <i style={{ fontSize: `${menuSizeItem}px` }} className=\"fa fa-circle-o\" /> <FormattedMessage id=\"WINNERS\" />\r\n                          </NavLink>\r\n                        </li>\r\n                        <li>\r\n                          <NavLink activeStyle={style} style={{ fontSize: `${menuSizeItem}px` }} to={{ pathname: `/EventGiveUp/${this.props.eventID}/${Competition.competition_id}/${Competition.long_name}` }}>\r\n                            <i className=\"fa fa-circle-o\" /> <FormattedMessage id=\"DIDNOTFINISH\" />\r\n                          </NavLink>\r\n\r\n                        </li>\r\n                        <li>\r\n                          <NavLink activeStyle={style} style={{ fontSize: `${menuSizeItem}px` }} to={{ pathname: `/Teams/${this.props.eventID}/${Competition.competition_id}/${Competition.long_name}` }}>\r\n                            <i style={{ fontSize: `${menuSizeItem}px` }} className=\"fa fa-circle-o\" /> <FormattedMessage id=\"TEAMS\" />\r\n                          </NavLink>\r\n                        </li>\r\n                        {/*\r\n                        <li>\r\n                          <NavLink activeStyle={style} style={{ fontSize: `${menuSizeItem}px` }} to={{ pathname: `/StatsComp/${this.props.eventID}/${Competition.competition_id}/${Competition.long_name}` }}>\r\n                            <i style={{ fontSize: `${menuSizeItem}px` }} className=\"fa fa-circle-o\" /> <FormattedMessage id=\"STATS\" />\r\n                          </NavLink>\r\n                        </li>*/}\r\n                      </ul>\r\n                    </li>\r\n                  );\r\n                }\r\n\r\n              })}\r\n            </ul>\r\n          </section>\r\n\r\n          {/* /.sidebar */}\r\n        </aside>\r\n      </div>\r\n    );\r\n  }\r\n}","const convertedVapidKey = urlBase64ToUint8Array(process.env.REACT_APP_PUBLIC_VAPID_KEY)\r\n\r\nfunction urlBase64ToUint8Array(base64String) {\r\n  const padding = \"=\".repeat((4 - base64String.length % 4) % 4)\r\n  // eslint-disable-next-line\r\n  const base64 = (base64String + padding).replace(/\\-/g, \"+\").replace(/_/g, \"/\")\r\n\r\n  const rawData = window.atob(base64)\r\n  const outputArray = new Uint8Array(rawData.length)\r\n\r\n  for (let i = 0; i < rawData.length; ++i) {\r\n    outputArray[i] = rawData.charCodeAt(i)\r\n  }\r\n  return outputArray\r\n}\r\n\r\n\r\n\r\nfunction sendSubscription(subscription, userID, status) {\r\n  const body = {\r\n    'sub': subscription,\r\n    'userID': userID\r\n  }\r\n  if (status === \"Send\") {\r\n    return fetch(`${process.env.REACT_APP_API_URL}/notifications/subscribe/`, {\r\n      method: 'POST',\r\n      body: JSON.stringify(body),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n  }\r\n  else {\r\n    return fetch(`${process.env.REACT_APP_API_URL}/notifications/remove/`, {\r\n      method: 'POST',\r\n      body: JSON.stringify(body),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport function subscribeUser(userID, status) {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(function (registration) {\r\n      if (!registration.pushManager) {\r\n        console.log('Push manager unavailable.')\r\n        return\r\n      }\r\n\r\n      registration.pushManager.getSubscription().then(function (existedSubscription) {\r\n        if (existedSubscription === null) {\r\n          console.log('No subscription detected, make a request.')\r\n          registration.pushManager.subscribe({\r\n            applicationServerKey: convertedVapidKey,\r\n            userVisibleOnly: true,\r\n          }).then(function (newSubscription) {\r\n            console.log('New subscription added.')\r\n            sendSubscription(newSubscription, userID, status)\r\n\r\n          }).catch(function (e) {\r\n            if (Notification.permission !== 'granted') {\r\n              console.log('Permission was not granted.')\r\n            } else {\r\n              console.error('An error ocurred during the subscription process.', e)\r\n            }\r\n          })\r\n        } else {\r\n          console.log('Existed subscription detected.')\r\n          sendSubscription(existedSubscription, userID, status)\r\n        }\r\n      })\r\n    })\r\n      .catch(function (e) {\r\n        console.error('An error ocurred during Service Worker registration.', e)\r\n      })\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport { subscribeUser } from '../../components/Notifications/subscription';\r\nimport { FormattedMessage} from 'react-intl';\r\n\r\nexport default class favoritesChecker extends Component {\r\n\r\n    //to save the favorites to local storage\r\n    addFavorites() {\r\n        localStorage.setItem(parseInt(this.props.ListaFavoritos), JSON.stringify(parseInt(this.props.ListaFavoritos)))\r\n        subscribeUser(this.props.ListaFavoritos, \"Send\");\r\n        if(navigator.userAgent.toLowerCase().indexOf('firefox') > -1){\r\n            window.location.reload();\r\n        }\r\n    }\r\n\r\n    //to remove the favorites to local storage\r\n    removeFavorites() {\r\n\r\n        localStorage.removeItem(this.props.ListaFavoritos)\r\n        subscribeUser(this.props.ListaFavoritos, \"Remove\");\r\n        if(navigator.userAgent.toLowerCase().indexOf('firefox') > -1){\r\n            window.location.reload();\r\n\r\n        }\r\n    }\r\n\r\n    //Just for the favorites tables because of reload the window\r\n    removeFavoritesTable() {\r\n        localStorage.removeItem(this.props.ListaFavoritos)\r\n        subscribeUser(this.props.ListaFavoritos, \"Remove\");\r\n\r\n    }\r\n\r\n    //to check if is favorite (this is for the tables)\r\n    checkFavorites() {\r\n        if (parseInt(this.props.ListaFavoritos) === parseInt(localStorage.getItem(this.props.ListaFavoritos))) {\r\n            if (this.props.tableFav === true) {\r\n\r\n                return (\r\n                    <a href=\"##\" style={{ color: \"#3c8dbc\" }} onClick={() => this.removeFavoritesTable()}>\r\n                        <i className=\"fa fa-fw fa-heart\"></i>\r\n                    </a>\r\n                )\r\n            }\r\n            else {\r\n                return (\r\n                    <a href=\"##\" style={{ color: \"#3c8dbc\" }} onClick={() => this.removeFavorites()}>\r\n                        <i className=\"fa fa-fw fa-heart\"></i>\r\n                    </a>\r\n                )\r\n            }\r\n\r\n        }\r\n        else {\r\n            return (\r\n                <a href=\"##\" style={{ color: \"#3c8dbc\" }} onClick={() => this.addFavorites()}>\r\n                    <i className=\"fa fa-fw fa-heart-o\"></i>\r\n                </a>\r\n            )\r\n        }\r\n    }\r\n\r\n    //to check if is favorite (this is for the athletedetail)\r\n    checkFavoritesResume() {\r\n        if (parseInt(this.props.ListaFavoritos) === parseInt(localStorage.getItem(this.props.ListaFavoritos))) {\r\n            return (\r\n                <a href=\"##\" className=\"btn btn-danger btn-block\" onClick={() => this.removeFavoritesTable()}><b><FormattedMessage id=\"REMOVEFAV\" /></b></a>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <a href=\"##\" className=\"btn btn-info btn-block\" onClick={() => this.addFavorites()}><b><FormattedMessage id=\"ADDFAV\"/></b></a>\r\n            )\r\n        }\r\n    }\r\n    //check is the call comes from the detail or from a table\r\n    checkIfTableorResume() {\r\n        if (this.props.AthleteDetail === true) {\r\n            return (\r\n                this.checkFavoritesResume()\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                this.checkFavorites()\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.checkIfTableorResume()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","export function calculatePagination(size, minimalSize) {\r\n    var sizeArray = []\r\n    if(minimalSize<size){\r\n        sizeArray.push(minimalSize)\r\n    }\r\n    if (size > 50) {\r\n        sizeArray.push(50)\r\n    }\r\n    if (size > 100) {\r\n        sizeArray.push(100)\r\n    }\r\n    if (size > 200) {\r\n        sizeArray.push(200)\r\n    }\r\n    if (size > 500) {\r\n        sizeArray.push(500)\r\n    }\r\n    if (minimalSize != size) {\r\n        sizeArray.push(size)\r\n    }\r\n    return (sizeArray)\r\n}\r\n\r\nexport function minimalSize(size, minimalSize) {\r\n    var sizeArray\r\n    if(size<minimalSize){\r\n        sizeArray=size\r\n    }\r\n    else{\r\n        sizeArray=minimalSize\r\n    }\r\n    \r\n\r\n    return (sizeArray)\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport ReactTable from \"react-table\";\r\nimport \"react-table/react-table.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Favorites from \"../favorites/favoritesChecker\"\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { calculatePagination } from \"../Scripts/PaginationHelper\"\r\nimport { minimalSize } from \"../Scripts/PaginationHelper\"\r\n\r\nvar size = window.innerWidth;\r\n\r\nexport default class TableSubscribers extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: this.props.loading\r\n    };\r\n    //for the columns sizes (desktop and mobile)\r\n  }\r\n\r\n  //to hide columns\r\n  CheckSize() {\r\n\r\n    if (size > 800) {\r\n      return true;\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    //Info for the filters\r\n    //get the category\r\n    let category = this.props.athleteList.map(athelete => {\r\n      return athelete.category;\r\n    });\r\n    //remove duplicates\r\n    const Tableuniquecategory = [...new Set(category.sort())];\r\n    //get the nacionality\r\n    let nacionality = this.props.athleteList.map(athelete => {\r\n      return athelete.athlete.nacionality;\r\n    });\r\n    //remove duplicates\r\n    const Tableuniquenacionality = [...new Set(nacionality.sort())];\r\n    //get the competitons\r\n    let competition = this.props.athleteList.map(athelete => {\r\n      return athelete.competition.name;\r\n    });\r\n    //remove duplicates\r\n    const Tableuniquecompetition = [...new Set(competition.sort())];\r\n    //get the Club\r\n    let club = this.props.athleteList.map(athelete => {\r\n      return athelete.club;\r\n    });\r\n    //remove duplicates\r\n    const Tableuniqueclub = [...new Set(club.sort())];\r\n    //get the inscription_status_code\r\n    let inscription_status_code = this.props.athleteList.map(athelete => {\r\n      return athelete.inscription_status_code;\r\n    });\r\n    //remove duplicates\r\n    const Tableuniqueinscription_status_code = [\r\n      ...new Set(inscription_status_code.sort())\r\n    ];\r\n\r\n\r\n    //Table\r\n    const columns = [\r\n      {\r\n        Header: \"Id\",\r\n        accessor: \"athlete.athlete_id\",\r\n        sortable: false,\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        width: 0,\r\n        maxWidth: 100,\r\n        show: false\r\n      },\r\n      {\r\n\r\n        Header: (size > 800) ? <FormattedMessage id=\"DORSAL\" /> : \"PTL\",\r\n        id: \"dorsal_number\",\r\n        accessor: d => Number(d.dorsal_number),\r\n        width: (size > 800) ? 100 : 60,\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Filter: ({ filter, onChange }) => (\r\n          <FormattedMessage id=\"SEARCH\" >\r\n          {txt => <input\r\n            onChange={event => onChange(event.target.value)}\r\n            value={filter ? filter.value : \"\"}\r\n            placeholder={txt}\r\n            style={{\r\n              width: \"100%\",\r\n              textAlign: \"Center\"\r\n            }}\r\n          />}\r\n        </FormattedMessage>\r\n        ),\r\n        Cell: row => (\r\n\r\n          <Link\r\n          to={{ pathname: `/AthleteDetail/${this.props.eventID}/${row.original.competition.competition_id}/${row.original.athlete.athlete_id}` }}\r\n          >\r\n            <span style={{ color: \"#3c8dbc\" }}>{row.value} </span>\r\n          </Link>\r\n        )\r\n      },\r\n      {\r\n        Header: <FormattedMessage id=\"NAME\" />,\r\n        accessor: \"athlete.name\",\r\n        width: (size > 800) ? 300 : 140,\r\n        style: {\r\n          textAlign: \"center\"\r\n        },\r\n\r\n        Filter: ({ filter, onChange }) => (\r\n          <FormattedMessage id=\"SEARCH\" >\r\n          {txt => <input\r\n            onChange={event => onChange(event.target.value)}\r\n            value={filter ? filter.value : \"\"}\r\n            placeholder={txt}\r\n            style={{\r\n              width: \"100%\",\r\n              textAlign: \"Center\"\r\n            }}\r\n          />}\r\n        </FormattedMessage>\r\n\r\n        ),\r\n        Cell: row => (\r\n\r\n          <Link\r\n            to={{ pathname: `/AthleteDetail/${this.props.eventID}/${row.original.competition.competition_id}/${row.original.athlete.athlete_id}` }}\r\n          >\r\n            <span style={{ color: \"#3c8dbc\" }}>{row.value} </span>\r\n          </Link>\r\n        )\r\n      },\r\n      {\r\n        Header: <FormattedMessage id=\"TEAM\" />,\r\n        accessor: \"club\",\r\n        show: this.CheckSize(),\r\n        style: {\r\n          textAlign: \"center\"\r\n        },\r\n        Cell: row => row.value,\r\n        filterMethod: (filter, row) => {\r\n          if (filter.value === \"\") {\r\n            return true;\r\n          }\r\n\r\n          if (Tableuniqueclub.includes(filter.value)) {\r\n            return row[filter.id] === filter.value;\r\n          } else {\r\n            return true;\r\n          }\r\n        },\r\n        Filter: ({ filter, onChange }) => (\r\n          <select\r\n            onChange={event => onChange(event.target.value)}\r\n            style={{ width: \"100%\", textAlignLast: \"center\" }}\r\n            value={filter ? filter.value : \"all\"}\r\n          >\r\n            <FormattedMessage id=\"ALL\">\r\n              {txt => <option value=\"all\">{txt}</option>}\r\n            </FormattedMessage>\r\n            {Tableuniqueclub.map(k => {\r\n              return (\r\n                <option key={k.toString()} value={k}>\r\n                  {k}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        )\r\n      },\r\n      {\r\n        Header: <FormattedMessage id=\"CATEGORY\" />,\r\n        accessor: \"category\",\r\n        width: (size > 800) ? 150 : 80,\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Cell: row => row.value,\r\n        filterMethod: (filter, row) => {\r\n          if (filter.value === \"\") {\r\n            return true;\r\n          }\r\n\r\n          if (Tableuniquecategory.includes(filter.value)) {\r\n            return row[filter.id] === filter.value;\r\n          } else {\r\n            return true;\r\n          }\r\n        },\r\n        Filter: ({ filter, onChange }) => (\r\n          <select\r\n            onChange={event => onChange(event.target.value)}\r\n            style={{ width: \"100%\", textAlignLast: \"center\" }}\r\n            value={filter ? filter.value : \"all\"}\r\n          >\r\n            <FormattedMessage id=\"ALL\">\r\n              {txt => <option value=\"all\">{txt}</option>}\r\n            </FormattedMessage>\r\n            {Tableuniquecategory.map(k => {\r\n              return (\r\n                <option key={k.toString()} value={k}>\r\n                  {k}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        )\r\n      },\r\n      {\r\n        Header: <FormattedMessage id=\"COMPETITION\" />,\r\n        accessor: \"competition.name\",\r\n        width: (size > 800) ? 145 : 80,\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Cell: row => row.value,\r\n        filterMethod: (filter, row) => {\r\n          if (filter.value === \"\") {\r\n            return true;\r\n          }\r\n\r\n          if (Tableuniquecompetition.includes(filter.value)) {\r\n            return row[filter.id] === filter.value;\r\n          } else {\r\n            return true;\r\n          }\r\n        },\r\n        Filter: ({ filter, onChange }) => (\r\n          <select\r\n            onChange={event => onChange(event.target.value)}\r\n            style={{ width: \"100%\", textAlignLast: \"center\" }}\r\n            value={filter ? filter.value : \"all\"}\r\n          >\r\n            <FormattedMessage id=\"ALL\">\r\n              {txt => <option value=\"all\">{txt}</option>}\r\n            </FormattedMessage>\r\n            {Tableuniquecompetition.map(k => {\r\n              return (\r\n                <option key={k.toString()} value={k}>\r\n                  {k}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        )\r\n      },\r\n      {\r\n        Header: \"Prova\",\r\n        accessor: \"competition.competition_id\",\r\n        show: false,\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Cell: row => row.value,\r\n        filterMethod: (filter, row) => {\r\n          if (filter.value === \"\") {\r\n            return true;\r\n          }\r\n\r\n          if (Tableuniquecompetition.includes(filter.value)) {\r\n            return row[filter.id] === filter.value;\r\n          } else {\r\n            return true;\r\n          }\r\n        },\r\n        Filter: ({ filter, onChange }) => (\r\n          <select\r\n            onChange={event => onChange(event.target.value)}\r\n            style={{ width: \"100%\", textAlignLast: \"center\" }}\r\n            value={filter ? filter.value : \"all\"}\r\n          >\r\n            <option value=\"all\">Todos</option>\r\n            {Tableuniquecompetition.map(k => {\r\n              return (\r\n                <option key={k.toString()} value={k}>\r\n                  {k}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        )\r\n      },\r\n      {\r\n        Header: <FormattedMessage id=\"COUNTRY\" />,\r\n        accessor: \"athlete.nacionality\",\r\n        width: 150,\r\n        show: this.CheckSize(),\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Cell: row => row.value,\r\n        filterMethod: (filter, row) => {\r\n          if (filter.value === \"\") {\r\n            return true;\r\n          }\r\n\r\n          if (Tableuniquenacionality.includes(filter.value)) {\r\n            return row[filter.id] === filter.value;\r\n          } else {\r\n            return true;\r\n          }\r\n        },\r\n        Filter: ({ filter, onChange }) => (\r\n          <select\r\n            onChange={event => onChange(event.target.value)}\r\n            style={{ width: \"100%\", textAlignLast: \"center\" }}\r\n            value={filter ? filter.value : \"all\"}\r\n          >\r\n            <FormattedMessage id=\"ALL\">\r\n              {txt => <option value=\"all\">{txt}</option>}\r\n            </FormattedMessage>      \r\n                  {Tableuniquenacionality.map(k => {\r\n              return (\r\n                <option key={k.toString()} value={k}>\r\n                  {k}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        )\r\n      },\r\n      {\r\n\r\n        Header: <FormattedMessage id=\"STATUS\" />,\r\n        accessor: \"inscription_status_code\",\r\n        width: (size > 800) ? 150 : 110,\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Cell: row => {\r\n          if (row.value === \"FIN\") {\r\n            return <FormattedMessage id=\"FIN\" />;\r\n          } else if (row.value === \"EP\") {\r\n            return <FormattedMessage id=\"EP\" />;\r\n          } else if (row.value === \"DNS\") {\r\n            return <FormattedMessage id=\"DNS\" />;\r\n          } else if (row.value === \"D\") {\r\n            return <FormattedMessage id=\"D\" />;\r\n          } else if (row.value === \"DNF\") {\r\n            return <FormattedMessage id=\"DNF\" />;\r\n          } else if (row.value === \"DSQ\") {\r\n            return <FormattedMessage id=\"DSQ\" />;\r\n          }\r\n\r\n        },\r\n        filterMethod: (filter, row) => {\r\n          if (filter.value === \"\") {\r\n            return true;\r\n          }\r\n\r\n          if (Tableuniqueinscription_status_code.includes(filter.value)) {\r\n            return row[filter.id] === filter.value;\r\n          } else {\r\n            return true;\r\n          }\r\n        },\r\n        Filter: ({ filter, onChange }) => (\r\n          <select\r\n            onChange={event => onChange(event.target.value)}\r\n            style={{ width: \"100%\", textAlignLast: \"center\" }}\r\n            value={filter ? filter.value : \"all\"}\r\n          >\r\n            <FormattedMessage id=\"ALL\">\r\n              {txt => <option value=\"all\">{txt}</option>}\r\n            </FormattedMessage>\r\n            {Tableuniqueinscription_status_code.map(k => {\r\n              return (\r\n                <FormattedMessage id={k.toString()}>\r\n                  {txt => <option key={k.toString()} value={k}>{txt}</option>}\r\n                </FormattedMessage>\r\n              );\r\n            })}\r\n          </select>\r\n        )\r\n      },\r\n      {\r\n        Header: (size > 800) ? <FormattedMessage id=\"FAVORITE\" /> : \"FAV\",\r\n        filterable: false,\r\n        sortable: false,\r\n        width: (size > 800) ? 100 : 50,\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Cell: row => (\r\n          <Favorites ListaFavoritos={row.original.athlete.athlete_id} />\r\n\r\n        )\r\n      }\r\n    ];\r\n    return (\r\n      <ReactTable\r\n        defaultSorted={[\r\n          {\r\n            id: \"dorsal_number\",\r\n            desc: false\r\n          }\r\n        ]}\r\n        previousText={<FormattedMessage id=\"PREVIOUS\" />}\r\n        nextText={<FormattedMessage id=\"NEXT\" />}\r\n        columns={columns}\r\n        data={this.props.athleteList}\r\n        filterable\r\n        noDataText={<FormattedMessage id=\"NODATA\" />}\r\n        defaultPageSize={minimalSize(this.props.athleteList.length,20)}\r\n        pageSizeOptions={calculatePagination(this.props.athleteList.length, 20)}\r\n        showPagination={true}\r\n        showPaginationTop={false}\r\n        showPaginationBottom={true}\r\n        showPageSizeOptions={true}\r\n        showPageJump={true}\r\n        collapseOnSortingChange={true}\r\n        collapseOnPageChange={true}\r\n        collapseOnDataChange={true}\r\n        freezeWhenExpanded={false}\r\n        sortable={true}\r\n        multiSort={true}\r\n        resizable={true}\r\n        defaultSortDesc={false}\r\n        pageText={<FormattedMessage id=\"PAGE\" />}\r\n        rowsText={\"\"}\r\n        className=\"-striped -highlight\"\r\n\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport { FormattedMessage } from 'react-intl';\n\nexport default class NumberParticipants extends Component {\n    render() {\n        return (\n            <div>\n                {/* Info boxes */}\n                <div className=\"col-md-3 col-sm-6 col-xs-12\">\n                    <div className=\"info-box\">\n                        <span className=\"info-box-icon bg-aqua\"><i className=\"ion ion-ios-contact-outline\" /></span>\n                        <div className=\"info-box-content\">\n                            <span className=\"info-box-text\"><FormattedMessage id=\"ATHLETES\" /></span>\n                            <span className=\"info-box-number\">{this.props.athleteList.length}</span>\n                        </div>\n                        {/* /.info-box-content */}\n                    </div>\n                    {/* /.info-box */}\n                </div>\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { FormattedMessage } from 'react-intl';\n\nexport default class NumberCategories extends Component {\n    render() {\n        //get the category\n        let category = this.props.athleteList.map(athelete => {\n            return athelete.category;\n        });\n        //remove duplicates\n        const Tableuniquecategory = [...new Set(category)];\n        return (\n            <div>\n                {/* Info boxes */}\n                <div className=\"col-md-3 col-sm-6 col-xs-12\">\n                    <div className=\"info-box\">\n                        <span className=\"info-box-icon bg-blue\"><i className=\"ion ion-ios-analytics-outline\" /></span>\n                        <div className=\"info-box-content\">\n                            <span className=\"info-box-text\"><FormattedMessage id=\"CATEGORY\" /></span>\n                            <span className=\"info-box-number\">{Tableuniquecategory.length}</span>\n                        </div>\n                        {/* /.info-box-content */}\n                    </div>\n                    {/* /.info-box */}\n                </div>\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from \"react\";\nimport { FormattedMessage } from 'react-intl';\nexport default class NumberTeams extends Component {\n    render() {\n        //get the Club\n        let club = this.props.athleteList.map(athelete => {\n            return athelete.club;\n        });\n        //remove duplicates\n        const Tableuniqueclub = [...new Set(club)];\n        return (\n            <div>\n                {/* Info boxes */}\n                <div className=\"col-md-3 col-sm-6 col-xs-12\">\n                    <div className=\"info-box\">\n                        <span className=\"info-box-icon bg-yellow\"><i className=\"ion ion-ios-people-outline\" /></span>\n                        <div className=\"info-box-content\">\n                            <span className=\"info-box-text\"><FormattedMessage id=\"TEAMS\" /></span>\n                            <span className=\"info-box-number\">{Tableuniqueclub.length}</span>\n                        </div>\n                        {/* /.info-box-content */}\n                    </div>\n                    {/* /.info-box */}\n                </div>\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { FormattedMessage } from 'react-intl';\n\nexport default class NumberNationalities extends Component {\n    render() {\n        var nacionality\n        //get the nacionality\n        if( this.props.giveup===true){\n            nacionality = this.props.athleteList.map(athelete => {\n                return athelete.country;});\n        }\n        else{\n             nacionality = this.props.athleteList.map(athelete => {\n                return athelete.athlete.nacionality;});\n        }\n\n        //remove duplicates\n        const Tableuniquenacionality = [...new Set(nacionality)];\n        return (\n            <div>\n                {/* Info boxes */}\n                <div className=\"col-md-3 col-sm-6 col-xs-12\">\n                    <div className=\"info-box\">\n                        <span className=\"info-box-icon bg-red\"><i className=\"fa fa-fw fa-map-o\" /></span>\n                        <div className=\"info-box-content\">\n                            <span className=\"info-box-text\"><FormattedMessage id=\"NATIONALITY\" /></span>\n                            <span className=\"info-box-number\">{Tableuniquenacionality.length}</span>\n                        </div>\n                        {/* /.info-box-content */}\n                    </div>\n                    {/* /.info-box */}\n                </div>\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from \"react\";\r\nimport Header from \"../structure/Header\";\r\nimport Footer from \"../structure/Footer\";\r\nimport Menu from \"../structure/Menu\";\r\nimport TableSubscribers from \"../Tables/TableParticipants\";\r\nimport WidgetNumberParticipants from \"../Widgets/NumberParticipants\";\r\nimport WidgetNumberCategories from \"../Widgets/NumberCategories\";\r\nimport WidgetNumberteams from \"../Widgets/NumberTeams\";\r\nimport WidgetNumberNacionalities from \"../Widgets/NumberNationalities\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\n\r\nconst API_KEY = `${process.env.REACT_APP_API_TRAIL_KEY}`;\r\nconst API_URL = `${process.env.REACT_APP_API_TRAIL_URL}`;\r\nconst TOKEN = API_KEY;\r\nvar EventID = 0;\r\n\r\nexport default class EventSubscribers extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      athleteList: [],\r\n      loading: false,\r\n    };\r\n\r\n  }\r\n  componentWillMount() {\r\n    try {\r\n      if (localStorage.getItem(`athleteList${this.props.match.params.EventID}`)) {\r\n\r\n        const athList = JSON.parse(localStorage.getItem(`athleteList${this.props.match.params.EventID}`))\r\n        this.setState({ athleteList: athList, loading: true })\r\n      }\r\n\r\n      \r\n    }\r\n    catch{\r\n      localStorage.clear();\r\n\r\n    }\r\n    this.getAthletsList();\r\n\r\n  }\r\n\r\n\r\n  /*List of athlets*/\r\n  getAthletsList = async e => {\r\n    const API_CALL = await fetch(`${API_URL}/trail/Athletes/${this.props.match.params.EventID}/`, {\r\n      headers: new Headers({\r\n        Authorization: TOKEN\r\n      })\r\n    });\r\n    const data = await API_CALL.json();\r\n    try {\r\n      localStorage.setItem(`athleteList${this.props.match.params.EventID}`, JSON.stringify(data))\r\n    }\r\n    catch{\r\n      localStorage.clear();\r\n\r\n    }\r\n    this.setState({ athleteList: data, loading: true });\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header eventID={this.props.match.params.EventID} />\r\n        {/*Send the event id to the MENU, to get the competition list*/}\r\n        <Menu eventID={this.props.match.params.EventID} competitionID={0} />\r\n        {/*CONTENT*/}\r\n        <div>\r\n          {/* Content Wrapper. Contains page content */}\r\n          <div className=\"content-wrapper\">\r\n\r\n            {/* Content Header (Page header) */}\r\n            <section className=\"content-header\">\r\n\r\n            </section>\r\n            {/* Main content */}\r\n            {/*Check if data is loading*/}\r\n            {(() => {\r\n              if (this.state.loading === false) {\r\n                return (\r\n                  <section className=\"content\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-xs-12\">\r\n                        <div className=\"box\">\r\n                          {/* /.box-body */}\r\n                          <div className=\"box-body\" style={{ display: 'flex', justifyContent: 'center' }}>\r\n                            <Loader />\r\n                          </div>\r\n\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </section>\r\n                )\r\n              }\r\n              else {\r\n                return (\r\n                  <section className=\"content\">\r\n                    <div className=\"row\">\r\n                      {/* widget for the number of participants */}\r\n                      <WidgetNumberParticipants athleteList={this.state.athleteList} />\r\n                      {/* widget for the number of Teams */}\r\n                      <WidgetNumberteams athleteList={this.state.athleteList} />\r\n                      {/* widget for the number of Categories */}\r\n                      <WidgetNumberCategories athleteList={this.state.athleteList} />\r\n                      {/* widget for the number of Nacionalities */}\r\n                      <WidgetNumberNacionalities athleteList={this.state.athleteList} />\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-xs-12\">\r\n                        <div className=\"box\">\r\n                          {/* /.box-body */}\r\n                          <div className=\"box box-primary\"></div>\r\n                          <div style={{ width: 100 + '%!important' }}>\r\n                            <TableSubscribers\r\n                              athleteList={this.state.athleteList}\r\n                              loading={this.state.loading}\r\n                              eventID={this.props.match.params.EventID}\r\n                              competitionID={0}\r\n                            />\r\n                          </div>\r\n                          {/* Table for the list of participants */}\r\n\r\n\r\n                        </div>\r\n                      </div>\r\n                      {/* /.col */}\r\n                    </div>\r\n                    {/* /.row */}\r\n\r\n                  </section>\r\n\r\n\r\n                )\r\n              }\r\n            })()}\r\n          </div>\r\n          {/* /.content-wrapper */}\r\n        </div>\r\n        <Footer eventID={this.props.match.params.EventID} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n","import React, { Component } from \"react\";\r\nimport ReactTable from \"react-table\";\r\nimport \"react-table/react-table.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Favorites from \"../favorites/favoritesChecker\"\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { calculatePagination } from \"../Scripts/PaginationHelper\"\r\nimport { minimalSize } from \"../Scripts/PaginationHelper\"\r\n\r\nvar size = window.innerWidth;\r\n\r\n\r\nexport default class TableGiveUP extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: this.props.loading\r\n    };\r\n  }\r\n  CheckSize() {\r\n    if (size > 800) {\r\n      return true;\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n  }\r\n  render() {\r\n    //Info for the filters\r\n    //get the category\r\n    let category = this.props.athleteList.map(athelete => {\r\n      return athelete.escalao;\r\n    });\r\n    //remove duplicates\r\n    const Tableuniquecategory = [...new Set(category.sort())];\r\n    //get the nacionality\r\n    let nacionality = this.props.athleteList.map(athelete => {\r\n      return athelete.country;\r\n    });\r\n    //remove duplicates\r\n    const Tableuniquenacionality = [...new Set(nacionality.sort())];\r\n    //get the Local\r\n    let local = this.props.athleteList.map(athelete => {\r\n      return athelete.local;\r\n    });\r\n    //remove duplicates\r\n    const Tableuniquelocal = [...new Set(local.sort())];\r\n    //get the Club\r\n    let club = this.props.athleteList.map(athelete => {\r\n      return athelete.club;\r\n    });\r\n    //remove duplicates\r\n    const Tableuniqueclub = [...new Set(club.sort())];\r\n    //Table\r\n    const columns = [\r\n      {\r\n        Header: \"Id\",\r\n        accessor: \"athlete_id\",\r\n        sortable: false,\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        width: 100,\r\n        maxWidth: 100,\r\n        mimWidth: 100,\r\n        show: false\r\n      },\r\n      {\r\n        Header: (size>800)? <FormattedMessage id=\"DORSAL\" />:\"PTL\",\r\n        id: \"peitoral\",\r\n        accessor: d => Number(d.peitoral),\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        width:(size>800)?100:90,\r\n        Filter: ({ filter, onChange }) => (\r\n          <FormattedMessage id=\"SEARCH\" >\r\n          {txt => <input\r\n             onChange={event => onChange(event.target.value)}\r\n             value={filter ? filter.value : \"\"}\r\n             placeholder={txt}\r\n             style={{\r\n               width: \"100%\",\r\n               textAlign: \"Center\"\r\n             }}\r\n           />}\r\n           </FormattedMessage>\r\n        ),\r\n        Cell: row => (\r\n\r\n          <Link\r\n            to={{ pathname: `/AthleteDetail/${this.props.eventID}/${this.props.competitionID}/${row.original.athlete_id}` }}\r\n          >\r\n            <span style={{ color: \"#3c8dbc\" }}>{row.value} </span>\r\n          </Link>\r\n        )\r\n      },\r\n      {\r\n        Header: <FormattedMessage id=\"NAME\" />,\r\n        accessor: \"name\",\r\n        width:(size>800)?300:175,\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Filter: ({ filter, onChange }) => (\r\n          <FormattedMessage id=\"SEARCH\" >\r\n          {txt => <input\r\n             onChange={event => onChange(event.target.value)}\r\n             value={filter ? filter.value : \"\"}\r\n             placeholder={txt}\r\n             style={{\r\n               width: \"100%\",\r\n               textAlign: \"Center\"\r\n             }}\r\n           />}\r\n           </FormattedMessage>\r\n        ),\r\n        Cell: row => (\r\n\r\n          <Link\r\n            to={{ pathname: `/AthleteDetail/${this.props.eventID}/${this.props.competitionID}/${row.original.athlete_id}` }}\r\n          >\r\n            <span style={{ color: \"#3c8dbc\" }}>{row.value} </span>\r\n          </Link>\r\n        )\r\n      },\r\n      {\r\n        Header: <FormattedMessage id=\"TEAM\" />,\r\n        accessor: \"club\",\r\n        show : this.CheckSize(),\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Cell: row => row.value,\r\n        filterMethod: (filter, row) => {\r\n          if (filter.value === \"\") {\r\n            return true;\r\n          }\r\n\r\n          if (Tableuniqueclub.includes(filter.value)) {\r\n            return row[filter.id] === filter.value;\r\n          } else {\r\n            return true;\r\n          }\r\n        },\r\n        Filter: ({ filter, onChange }) => (\r\n          <select\r\n            onChange={event => onChange(event.target.value)}\r\n            style={{ width: \"100%\",textAlignLast:\"center\" }}\r\n            value={filter ? filter.value : \"all\"}\r\n          >\r\n             <FormattedMessage id=\"ALL\">\r\n              {txt => <option value=\"all\">{txt}</option>}\r\n            </FormattedMessage>\r\n            {Tableuniqueclub.map(k => {\r\n              return (\r\n                <option key={k.toString()} value={k}>\r\n                  {k}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        )\r\n      },\r\n      {\r\n        Header: <FormattedMessage id=\"CATEGORY\" />,\r\n        accessor: \"escalao\",\r\n        width:(size>800)?150:100,\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Cell: row => row.value,\r\n        filterMethod: (filter, row) => {\r\n          if (filter.value === \"\") {\r\n            return true;\r\n          }\r\n\r\n          if (Tableuniquecategory.includes(filter.value)) {\r\n            return row[filter.id] === filter.value;\r\n          } else {\r\n            return true;\r\n          }\r\n        },\r\n        Filter: ({ filter, onChange }) => (\r\n          <select\r\n            onChange={event => onChange(event.target.value)}\r\n            style={{ width: \"100%\",textAlignLast:\"center\" }}\r\n            value={filter ? filter.value : \"all\"}\r\n          >\r\n            <FormattedMessage id=\"ALL\">\r\n              {txt => <option value=\"all\">{txt}</option>}\r\n            </FormattedMessage>\r\n            {Tableuniquecategory.map(k => {\r\n              return (\r\n                <option key={k.toString()} value={k}>\r\n                  {k}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        )\r\n      },\r\n\r\n      {\r\n        Header: <FormattedMessage id=\"COUNTRY\" />,\r\n        accessor: \"country\",\r\n        width:150,\r\n        show : this.CheckSize(),\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Cell: row => row.value,\r\n        filterMethod: (filter, row) => {\r\n          if (filter.value === \"\") {\r\n            return true;\r\n          }\r\n\r\n          if (Tableuniquenacionality.includes(filter.value)) {\r\n            return row[filter.id] === filter.value;\r\n          } else {\r\n            return true;\r\n          }\r\n        },\r\n        Filter: ({ filter, onChange }) => (\r\n          <select\r\n            onChange={event => onChange(event.target.value)}\r\n            style={{ width: \"100%\",textAlignLast:\"center\" }}\r\n            value={filter ? filter.value : \"all\"}\r\n          >\r\n           <FormattedMessage id=\"ALL\">\r\n              {txt => <option value=\"all\">{txt}</option>}\r\n            </FormattedMessage>\r\n            {Tableuniquenacionality.map(k => {\r\n              return (\r\n                <option key={k.toString()} value={k}>\r\n                  {k}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        )\r\n      },\r\n      {\r\n        Header: <FormattedMessage id=\"PLACE\" />,\r\n        accessor: \"local\",\r\n        width:(size>800)?150:100,\r\n\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Cell: row => row.value,\r\n        filterMethod: (filter, row) => {\r\n          if (filter.value === \"\") {\r\n            return true;\r\n          }\r\n\r\n          if (Tableuniquelocal.includes(filter.value)) {\r\n            return row[filter.id] === filter.value;\r\n          } else {\r\n            return true;\r\n          }\r\n        },\r\n        Filter: ({ filter, onChange }) => (\r\n          <select\r\n            onChange={event => onChange(event.target.value)}\r\n            style={{ width: \"100%\",textAlignLast:\"center\" }}\r\n            value={filter ? filter.value : \"all\"}\r\n          >\r\n            <option value=\"all\">Todos</option>\r\n            {Tableuniquelocal.map(k => {\r\n              return (\r\n                <option key={k.toString()} value={k}>\r\n                  {k}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        )\r\n      },\r\n\r\n      {\r\n        Header: (size>800)? <FormattedMessage id=\"FAVORITE\" />:\"FAV\",\r\n        width:(size>800)?100:50,\r\n\r\n        filterable: false,\r\n        sortable: false,\r\n\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Cell: row => (\r\n          <Favorites ListaFavoritos={row.original.athlete_id} />\r\n\r\n        )\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <ReactTable\r\n        defaultSorted={[\r\n          {\r\n            id: \"peitoral\",\r\n            desc: false\r\n          }\r\n        ]}\r\n        previousText={<FormattedMessage id=\"PREVIOUS\" />}\r\n        nextText={<FormattedMessage id=\"NEXT\" />}\r\n        columns={columns}\r\n        data={this.props.athleteList}\r\n        filterable\r\n        noDataText={<FormattedMessage id=\"NODATA\" />}\r\n        defaultPageSize={minimalSize(this.props.athleteList.length,4)}\r\n        pageSizeOptions={calculatePagination(this.props.athleteList.length, 4)}\r\n        showPaginationTop={false}\r\n        showPaginationBottom={true}\r\n        showPageSizeOptions={true}\r\n        showPageJump={true}\r\n        collapseOnSortingChange={true}\r\n        collapseOnPageChange={true}\r\n        collapseOnDataChange={true}\r\n        freezeWhenExpanded={false}\r\n        sortable={true}\r\n        multiSort={true}\r\n        resizable={true}\r\n        defaultSortDesc={false}\r\n        pageText={<FormattedMessage id=\"PAGE\" />}\r\n        rowsText={\"\"}\r\n        className=\"-striped -highlight\"\r\n\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport ReactTable from \"react-table\";\r\nimport \"react-table/react-table.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Favorites from \"../favorites/favoritesChecker\"\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { calculatePagination } from \"../Scripts/PaginationHelper\"\r\nimport { minimalSize } from \"../Scripts/PaginationHelper\"\r\n\r\nvar size = window.innerWidth;\r\n\r\n\r\nexport default class TableDisqualified extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: this.props.loading\r\n    };\r\n  }\r\n  CheckSize() {\r\n    if (size > 800) {\r\n      return true;\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n  }\r\n  render() {\r\n    //Info for the filters\r\n    //get the category\r\n    let category = this.props.athleteList.map(athelete => {\r\n      return athelete.escalao;\r\n    });\r\n    //remove duplicates\r\n    const Tableuniquecategory = [...new Set(category.sort())];\r\n    //get the nacionality\r\n    let nacionality = this.props.athleteList.map(athelete => {\r\n      return athelete.country;\r\n    });\r\n    //remove duplicates\r\n    const Tableuniquenacionality = [...new Set(nacionality.sort())];\r\n    //get the Local\r\n    let local = this.props.athleteList.map(athelete => {\r\n      return athelete.local;\r\n    });\r\n    //remove duplicates\r\n    const Tableuniquelocal = [...new Set(local.sort())];\r\n    //get the Club\r\n    let club = this.props.athleteList.map(athelete => {\r\n      return athelete.club;\r\n    });\r\n    //remove duplicates\r\n    const Tableuniqueclub = [...new Set(club.sort())];\r\n    //Table\r\n    const columns = [\r\n      {\r\n        Header: \"Id\",\r\n        accessor: \"athlete_id\",\r\n        sortable: false,\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        width: 100,\r\n        maxWidth: 100,\r\n        mimWidth: 100,\r\n        show: false\r\n      },\r\n      {\r\n        Header: (size>800)? <FormattedMessage id=\"DORSAL\" />:\"PTL\",\r\n        id: \"peitoral\",\r\n        accessor: d => Number(d.peitoral),\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        width:(size>800)?100:90,\r\n        Filter: ({ filter, onChange }) => (\r\n          <FormattedMessage id=\"SEARCH\" >\r\n          {txt => <input\r\n             onChange={event => onChange(event.target.value)}\r\n             value={filter ? filter.value : \"\"}\r\n             placeholder={txt}\r\n             style={{\r\n               width: \"100%\",\r\n               textAlign: \"Center\"\r\n             }}\r\n           />}\r\n           </FormattedMessage>\r\n        ),\r\n        Cell: row => (\r\n\r\n          <Link\r\n            to={{ pathname: `/AthleteDetail/${this.props.eventID}/${this.props.competitionID}/${row.original.athlete_id}` }}\r\n          >\r\n            <span style={{ color: \"#3c8dbc\" }}>{row.value} </span>\r\n          </Link>\r\n        )\r\n      },\r\n      {\r\n        Header: <FormattedMessage id=\"NAME\" />,\r\n        accessor: \"name\",\r\n        width:(size>800)?300:175,\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Filter: ({ filter, onChange }) => (\r\n          <FormattedMessage id=\"SEARCH\" >\r\n          {txt => <input\r\n             onChange={event => onChange(event.target.value)}\r\n             value={filter ? filter.value : \"\"}\r\n             placeholder={txt}\r\n             style={{\r\n               width: \"100%\",\r\n               textAlign: \"Center\"\r\n             }}\r\n           />}\r\n           </FormattedMessage>\r\n        ),\r\n        Cell: row => (\r\n\r\n          <Link\r\n            to={{ pathname: `/AthleteDetail/${this.props.eventID}/${this.props.competitionID}/${row.original.athlete_id}` }}\r\n          >\r\n            <span style={{ color: \"#3c8dbc\" }}>{row.value} </span>\r\n          </Link>\r\n        )\r\n      },\r\n      {\r\n        Header: <FormattedMessage id=\"TEAM\" />,\r\n        accessor: \"club\",\r\n        show : this.CheckSize(),\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Cell: row => row.value,\r\n        filterMethod: (filter, row) => {\r\n          if (filter.value === \"\") {\r\n            return true;\r\n          }\r\n\r\n          if (Tableuniqueclub.includes(filter.value)) {\r\n            return row[filter.id] === filter.value;\r\n          } else {\r\n            return true;\r\n          }\r\n        },\r\n        Filter: ({ filter, onChange }) => (\r\n          <select\r\n            onChange={event => onChange(event.target.value)}\r\n            style={{ width: \"100%\",textAlignLast:\"center\" }}\r\n            value={filter ? filter.value : \"all\"}\r\n          >\r\n             <FormattedMessage id=\"ALL\">\r\n              {txt => <option value=\"all\">{txt}</option>}\r\n            </FormattedMessage>\r\n            {Tableuniqueclub.map(k => {\r\n              return (\r\n                <option key={k.toString()} value={k}>\r\n                  {k}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        )\r\n      },\r\n      {\r\n        Header: <FormattedMessage id=\"CATEGORY\" />,\r\n        accessor: \"escalao\",\r\n        width:(size>800)?150:100,\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Cell: row => row.value,\r\n        filterMethod: (filter, row) => {\r\n          if (filter.value === \"\") {\r\n            return true;\r\n          }\r\n\r\n          if (Tableuniquecategory.includes(filter.value)) {\r\n            return row[filter.id] === filter.value;\r\n          } else {\r\n            return true;\r\n          }\r\n        },\r\n        Filter: ({ filter, onChange }) => (\r\n          <select\r\n            onChange={event => onChange(event.target.value)}\r\n            style={{ width: \"100%\",textAlignLast:\"center\" }}\r\n            value={filter ? filter.value : \"all\"}\r\n          >\r\n            <FormattedMessage id=\"ALL\">\r\n              {txt => <option value=\"all\">{txt}</option>}\r\n            </FormattedMessage>\r\n            {Tableuniquecategory.map(k => {\r\n              return (\r\n                <option key={k.toString()} value={k}>\r\n                  {k}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        )\r\n      },\r\n\r\n      {\r\n        Header: <FormattedMessage id=\"COUNTRY\" />,\r\n        accessor: \"country\",\r\n        width:150,\r\n        show : this.CheckSize(),\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Cell: row => row.value,\r\n        filterMethod: (filter, row) => {\r\n          if (filter.value === \"\") {\r\n            return true;\r\n          }\r\n\r\n          if (Tableuniquenacionality.includes(filter.value)) {\r\n            return row[filter.id] === filter.value;\r\n          } else {\r\n            return true;\r\n          }\r\n        },\r\n        Filter: ({ filter, onChange }) => (\r\n          <select\r\n            onChange={event => onChange(event.target.value)}\r\n            style={{ width: \"100%\",textAlignLast:\"center\" }}\r\n            value={filter ? filter.value : \"all\"}\r\n          >\r\n           <FormattedMessage id=\"ALL\">\r\n              {txt => <option value=\"all\">{txt}</option>}\r\n            </FormattedMessage>\r\n            {Tableuniquenacionality.map(k => {\r\n              return (\r\n                <option key={k.toString()} value={k}>\r\n                  {k}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        )\r\n      },\r\n      {\r\n        Header: <FormattedMessage id=\"PLACE\" />,\r\n        accessor: \"local\",\r\n        width:(size>800)?150:100,\r\n\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Cell: row => row.value,\r\n        filterMethod: (filter, row) => {\r\n          if (filter.value === \"\") {\r\n            return true;\r\n          }\r\n\r\n          if (Tableuniquelocal.includes(filter.value)) {\r\n            return row[filter.id] === filter.value;\r\n          } else {\r\n            return true;\r\n          }\r\n        },\r\n        Filter: ({ filter, onChange }) => (\r\n          <select\r\n            onChange={event => onChange(event.target.value)}\r\n            style={{ width: \"100%\",textAlignLast:\"center\" }}\r\n            value={filter ? filter.value : \"all\"}\r\n          >\r\n            <option value=\"all\">Todos</option>\r\n            {Tableuniquelocal.map(k => {\r\n              return (\r\n                <option key={k.toString()} value={k}>\r\n                  {k}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        )\r\n      },\r\n\r\n      {\r\n        Header: (size>800)? <FormattedMessage id=\"FAVORITE\" />:\"FAV\",\r\n        width:(size>800)?100:50,\r\n\r\n        filterable: false,\r\n        sortable: false,\r\n\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Cell: row => (\r\n          <Favorites ListaFavoritos={row.original.athlete_id} />\r\n\r\n        )\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <ReactTable\r\n        defaultSorted={[\r\n          {\r\n            id: \"peitoral\",\r\n            desc: false\r\n          }\r\n        ]}\r\n        previousText={<FormattedMessage id=\"PREVIOUS\" />}\r\n        nextText={<FormattedMessage id=\"NEXT\" />}\r\n        columns={columns}\r\n        data={this.props.athleteList}\r\n        filterable\r\n        noDataText={<FormattedMessage id=\"NODATA\" />}\r\n        defaultPageSize={minimalSize(this.props.athleteList.length,4)}\r\n        pageSizeOptions={calculatePagination(this.props.athleteList.length, 4)}\r\n        showPaginationTop={false}\r\n        showPaginationBottom={true}\r\n        showPageSizeOptions={true}\r\n        showPageJump={true}\r\n        collapseOnSortingChange={true}\r\n        collapseOnPageChange={true}\r\n        collapseOnDataChange={true}\r\n        freezeWhenExpanded={false}\r\n        sortable={true}\r\n        multiSort={true}\r\n        resizable={true}\r\n        defaultSortDesc={false}\r\n        pageText={<FormattedMessage id=\"PAGE\" />}\r\n        rowsText={\"\"}\r\n        className=\"-striped -highlight\"\r\n\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Header from \"../structure/Header\";\r\nimport Footer from \"../structure/Footer\";\r\nimport Menu from \"../structure/Menu\";\r\nimport TableGiveUp from \"../Tables/TableGiveUp\";\r\nimport TableDisqualified from \"../Tables/TableDisqualified\";\r\nimport WidgetNumberParticipants from \"../Widgets/NumberParticipants\"\r\nimport Loader from \"../Loader/Loader\";\r\nimport WidgetNumberNacionalities from \"../Widgets/NumberNationalities\";\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\n\r\nconst API_KEY = `${process.env.REACT_APP_API_TRAIL_KEY}`;\r\nconst API_URL = `${process.env.REACT_APP_API_TRAIL_URL}`;\r\nconst TOKEN = API_KEY;\r\nexport default class EventSubscribers extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      atheleGiveUPList: [],\r\n      atheleDisqualifiedList: [],\r\n      loadingGiveUP: false,\r\n      loadingDisqualified: false,\r\n    };\r\n\r\n\r\n  }\r\n\r\n  componentWillMount() {\r\n    if (JSON.parse(localStorage.getItem(`atheleGiveUPList${this.props.match.params.EventID}${this.props.match.params.CompID}`)) && JSON.parse(localStorage.getItem(`atheleDisqualifiedList${this.props.match.params.EventID}${this.props.match.params.CompID}`))) {\r\n      const atheleGiveUPList = JSON.parse(localStorage.getItem(`atheleGiveUPList${this.props.match.params.EventID}${this.props.match.params.CompID}`))\r\n      const atheleDisqualifiedList = JSON.parse(localStorage.getItem(`atheleDisqualifiedList${this.props.match.params.EventID}${this.props.match.params.CompID}`))\r\n      this.setState({ atheleGiveUPList: atheleGiveUPList, atheleDisqualifiedList: atheleDisqualifiedList, loadingGiveUP: true, loadingDisqualified: true })\r\n    }\r\n    this.getAthletesGiveUPList = this.getAthletesGiveUPList.bind(this);\r\n    this.getAthletesDisqualifiedList = this.getAthletesDisqualifiedList.bind(this);\r\n    this.getAthletesGiveUPList();\r\n    this.getAthletesDisqualifiedList();\r\n  }\r\n\r\n  /*when props change*/\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.match.params.CompID !== this.props.match.params.CompID) {\r\n      this.setState({ loadingGiveUP: false, loadingDisqualified: false })\r\n      try {\r\n        if (JSON.parse(localStorage.getItem(`atheleGiveUPList${this.props.match.params.EventID}${this.props.match.params.CompID}`)) && JSON.parse(localStorage.getItem(`atheleDisqualifiedList${this.props.match.params.EventID}${this.props.match.params.CompID}`))) {\r\n          const atheleGiveUPList = JSON.parse(localStorage.getItem(`atheleGiveUPList${this.props.match.params.EventID}${this.props.match.params.CompID}`))\r\n          const atheleDisqualifiedList = JSON.parse(localStorage.getItem(`atheleDisqualifiedList${this.props.match.params.EventID}${this.props.match.params.CompID}`))\r\n          this.setState({ atheleGiveUPList: atheleGiveUPList, atheleDisqualifiedList: atheleDisqualifiedList, loadingGiveUP: true, loadingDisqualified: true })\r\n        }\r\n      }\r\n      catch{\r\n        localStorage.clear();\r\n\r\n      }\r\n      this.getAthletesGiveUPList();\r\n      this.getAthletesDisqualifiedList();\r\n    }\r\n  }\r\n\r\n  /*Get giveup athletes*/\r\n  getAthletesGiveUPList = async e => {\r\n    const API_CALL = await fetch(`${API_URL}/competition/AthsGiveup/${this.props.match.params.CompID}/`, {\r\n      headers: new Headers({\r\n        Authorization: TOKEN\r\n      })\r\n    });\r\n    const data = await API_CALL.json();\r\n    try {\r\n      localStorage.setItem(`atheleGiveUPList${this.props.match.params.EventID}${this.props.match.params.CompID}`, JSON.stringify(data))\r\n    }\r\n    catch{\r\n      localStorage.clear();\r\n\r\n    }\r\n    this.setState({ atheleGiveUPList: data, loadingGiveUP: true });\r\n  };\r\n\r\n  /*Get disqualified list athletes*/\r\n  getAthletesDisqualifiedList = async e => {\r\n\r\n    const API_CALL = await fetch(`${API_URL}/competition/AthDisqualified/${this.props.match.params.CompID}/`, {\r\n      headers: new Headers({\r\n        Authorization: TOKEN\r\n      })\r\n    });\r\n    const data = await API_CALL.json();\r\n    try {\r\n      localStorage.setItem(`atheleDisqualifiedList${this.props.match.params.EventID}${this.props.match.params.CompID}`, JSON.stringify(data))\r\n    }\r\n    catch{\r\n      localStorage.clear();\r\n\r\n    }\r\n    this.setState({ atheleDisqualifiedList: data, loadingDisqualified: true });\r\n\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header eventID={this.props.match.params.EventID} />\r\n        {/*Send the event id to the MENU, to get the competition list*/}\r\n        <Menu eventID={this.props.match.params.EventID} competitionID={this.props.match.params.CompID} />\r\n        {/*CONTENT*/}\r\n        <div>\r\n          {/* Content Wrapper. Contains page content */}\r\n          <div className=\"content-wrapper\">\r\n            {/* Content Header (Page header) */}\r\n            <section className=\"content-header\">\r\n              <h1>\r\n                <span >{this.props.match.params.CompName}</span>\r\n                <span style={{ float: \"right\" }}>< FormattedMessage id=\"QUIT\" /></span>\r\n              </h1>\r\n            </section>\r\n            {/* Main content */}\r\n            {/*Check if data is loading*/}\r\n            {(() => {\r\n              if (this.state.loadingGiveUP === false) {\r\n                return (\r\n                  <section className=\"content\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-xs-12\">\r\n                        <div className=\"box\">\r\n                          {/* /.box-body */}\r\n                          <div className=\"box-body\" style={{ display: 'flex', justifyContent: 'center' }}>\r\n                            <Loader />\r\n                          </div>\r\n\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </section>\r\n                )\r\n              }\r\n              else {\r\n                return (\r\n                  <section className=\"content\">\r\n                    <div className=\"row\">\r\n                      {/* widget for the number of participants */}\r\n                      <WidgetNumberParticipants athleteList={this.state.atheleGiveUPList} />\r\n                      <WidgetNumberNacionalities giveup={true} athleteList={this.state.atheleGiveUPList} />\r\n\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-xs-12\">\r\n                        <div className=\"box\">\r\n                          {/* /.box-body */}\r\n                          <div className=\"box box-primary\"></div>\r\n                          <TableGiveUp\r\n                            eventID={this.props.match.params.EventID}\r\n                            competitionID={this.props.match.params.CompID}\r\n                            athleteList={this.state.atheleGiveUPList}\r\n                            loading={this.state.loading}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      {/* /.col */}\r\n                    </div>\r\n                    {/* /.row */}\r\n                  </section>\r\n                )\r\n              }\r\n            })()}\r\n            <section className=\"content-header\">\r\n              <h1>\r\n                {/*<span >{this.props.match.params.CompName}</span> */}\r\n                <span style={{ float: \"right\" }}>< FormattedMessage id=\"DISUALIFIED\" /></span>\r\n              </h1>\r\n            </section>\r\n            {/*Check if data is loading*/}\r\n            {(() => {\r\n              if (this.state.loadingDisqualified === false) {\r\n                return (\r\n                  <section className=\"content\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-xs-12\">\r\n                        <div className=\"box\">\r\n                          {/* /.box-body */}\r\n                          <div className=\"box-body\" style={{ display: 'flex', justifyContent: 'center' }}>\r\n                            <Loader />\r\n                          </div>\r\n\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </section>\r\n                )\r\n              }\r\n              else {\r\n                return (\r\n                  <section className=\"content\">\r\n                    <div className=\"row\">\r\n                      {/* widget for the number of participants */}\r\n                      <WidgetNumberParticipants athleteList={this.state.atheleDisqualifiedList} />\r\n                      <WidgetNumberNacionalities giveup={true} athleteList={this.state.atheleDisqualifiedList} />\r\n\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-xs-12\">\r\n                        <div className=\"box\">\r\n                          {/* /.box-body */}\r\n                          <div className=\"box box-primary\"></div>\r\n                          <TableDisqualified\r\n                            eventID={this.props.match.params.EventID}\r\n                            competitionID={this.props.match.params.CompID}\r\n                            athleteList={this.state.atheleDisqualifiedList}\r\n                            loading={this.state.loading}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      {/* /.col */}\r\n                    </div>\r\n                    {/* /.row */}\r\n                  </section>\r\n                )\r\n              }\r\n            })()}\r\n\r\n          </div>\r\n          {/* /.content-wrapper */}\r\n        </div>\r\n        <Footer eventID={this.props.match.params.EventID} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport ReactTable from \"react-table\";\r\nimport \"react-table/react-table.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Favorites from \"../favorites/favoritesChecker\"\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { calculatePagination } from \"../Scripts/PaginationHelper\"\r\nimport { minimalSize } from \"../Scripts/PaginationHelper\"\r\n\r\n\r\nvar size = window.innerWidth;\r\n\r\n\r\nexport default class TableSubscribers extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: this.props.loading\r\n    };\r\n  }\r\n\r\n  CheckSize() {\r\n    if (size > 800) {\r\n      return true;\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  addFavorites() {\r\n    localStorage.setItem(\"ListaFavoritos\", this.props.ListaFavoritos)\r\n  }\r\n  render() {\r\n    //Info for the filters\r\n    //get the category\r\n    let category = this.props.athleteList.map(athelete => {\r\n      return athelete.category;\r\n    });\r\n    //remove duplicates\r\n    const Tableuniquecategory = [...new Set(category.sort())];\r\n    //get the nacionality\r\n    let nacionality = this.props.athleteList.map(athelete => {\r\n      return athelete.athlete.nacionality;\r\n    });\r\n    //remove duplicates\r\n    const Tableuniquenacionality = [...new Set(nacionality.sort())];\r\n    //get the Club\r\n    let club = this.props.athleteList.map(athelete => {\r\n      return athelete.club;\r\n    });\r\n    //remove duplicates\r\n    const Tableuniqueclub = [...new Set(club.sort())];\r\n    //get the inscription_status_code\r\n    let inscription_status_code = this.props.athleteList.map(athelete => {\r\n      return athelete.inscription_status_code;\r\n    });\r\n    //remove duplicates\r\n    const Tableuniqueinscription_status_code = [\r\n      ...new Set(inscription_status_code.sort())\r\n    ];\r\n\r\n    //Table\r\n    const columns = [\r\n      {\r\n        Header: \"Id\",\r\n        accessor: \"athlete.athlete_id\",\r\n        sortable: false,\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        width: 100,\r\n        maxWidth: 100,\r\n        mimWidth: 100,\r\n        show: false\r\n      },\r\n      {\r\n        Header: (size > 800) ? <FormattedMessage id=\"DORSAL\" /> : \"PTL\",\r\n        id: \"dorsal_number\",\r\n        accessor: d => Number(d.dorsal_number),\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        width: (size > 800) ? 100 : 60,\r\n        Filter: ({ filter, onChange }) => (\r\n          <FormattedMessage id=\"SEARCH\" >\r\n            {txt => <input\r\n              onChange={event => onChange(event.target.value)}\r\n              value={filter ? filter.value : \"\"}\r\n              placeholder={txt}\r\n              style={{\r\n                width: \"100%\",\r\n                textAlign: \"Center\"\r\n              }}\r\n            />}\r\n          </FormattedMessage>\r\n        ),\r\n        Cell: row => (\r\n\r\n          <Link\r\n            to={{ pathname: `/AthleteDetail/${this.props.eventID}/${this.props.competitionID}/${row.original.athlete.athlete_id}` }}\r\n          >\r\n            <span style={{ color: \"#3c8dbc\" }}>{row.value} </span>\r\n          </Link>\r\n        )\r\n      },\r\n      {\r\n        Header: <FormattedMessage id=\"NAME\" />,\r\n        accessor: \"athlete.name\",\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Filter: ({ filter, onChange }) => (\r\n          <FormattedMessage id=\"SEARCH\" >\r\n            {txt => <input\r\n              onChange={event => onChange(event.target.value)}\r\n              value={filter ? filter.value : \"\"}\r\n              placeholder={txt}\r\n              style={{\r\n                width: \"100%\",\r\n                textAlign: \"Center\"\r\n              }}\r\n            />}\r\n          </FormattedMessage>\r\n        ),\r\n        Cell: row => (\r\n\r\n          <Link\r\n            to={{ pathname: `/AthleteDetail/${this.props.eventID}/${this.props.competitionID}/${row.original.athlete.athlete_id}` }}\r\n          >\r\n            <span style={{ color: \"#3c8dbc\" }}>{row.value} </span>\r\n          </Link>\r\n        )\r\n      },\r\n      {\r\n        Header: <FormattedMessage id=\"TEAM\" />,\r\n        show: this.CheckSize(),\r\n\r\n        accessor: \"club\",\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Cell: row => row.value,\r\n        filterMethod: (filter, row) => {\r\n          if (filter.value === \"\") {\r\n            return true;\r\n          }\r\n\r\n          if (Tableuniqueclub.includes(filter.value)) {\r\n            return row[filter.id] === filter.value;\r\n          } else {\r\n            return true;\r\n          }\r\n        },\r\n        Filter: ({ filter, onChange }) => (\r\n          <select\r\n            onChange={event => onChange(event.target.value)}\r\n            style={{ width: \"100%\", textAlignLast: \"center\" }}\r\n            value={filter ? filter.value : \"all\"}\r\n          >\r\n            <FormattedMessage id=\"ALL\">\r\n              {txt => <option value=\"all\">{txt}</option>}\r\n            </FormattedMessage>\r\n            {Tableuniqueclub.map(k => {\r\n              return (\r\n                <option key={k.toString()} value={k}>\r\n                  {k}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        )\r\n      },\r\n      {\r\n        Header: <FormattedMessage id=\"CATEGORY\" />,\r\n        accessor: \"category\",\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Cell: row => row.value,\r\n        filterMethod: (filter, row) => {\r\n          if (filter.value === \"\") {\r\n            return true;\r\n          }\r\n\r\n          if (Tableuniquecategory.includes(filter.value)) {\r\n            return row[filter.id] === filter.value;\r\n          } else {\r\n            return true;\r\n          }\r\n        },\r\n        Filter: ({ filter, onChange }) => (\r\n          <select\r\n            onChange={event => onChange(event.target.value)}\r\n            style={{ width: \"100%\", textAlignLast: \"center\" }}\r\n            value={filter ? filter.value : \"all\"}\r\n          >\r\n            <FormattedMessage id=\"ALL\">\r\n              {txt => <option value=\"all\">{txt}</option>}\r\n            </FormattedMessage>\r\n            {Tableuniquecategory.map(k => {\r\n              return (\r\n                <option key={k.toString()} value={k}>\r\n                  {k}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        )\r\n      },\r\n      {\r\n        Header: <FormattedMessage id=\"COUNTRY\" />,\r\n        show: this.CheckSize(),\r\n\r\n        accessor: \"athlete.nacionality\",\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Cell: row => row.value,\r\n        filterMethod: (filter, row) => {\r\n          if (filter.value === \"\") {\r\n            return true;\r\n          }\r\n\r\n          if (Tableuniquenacionality.includes(filter.value)) {\r\n            return row[filter.id] === filter.value;\r\n          } else {\r\n            return true;\r\n          }\r\n        },\r\n        Filter: ({ filter, onChange }) => (\r\n          <select\r\n            onChange={event => onChange(event.target.value)}\r\n            style={{ width: \"100%\", textAlignLast: \"center\" }}\r\n            value={filter ? filter.value : \"all\"}\r\n          >\r\n             <FormattedMessage id=\"ALL\">\r\n              {txt => <option value=\"all\">{txt}</option>}\r\n            </FormattedMessage>\r\n            {Tableuniquenacionality.map(k => {\r\n              return (\r\n                <option key={k.toString()} value={k}>\r\n                  {k}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        )\r\n      },\r\n      {\r\n        Header: <FormattedMessage id=\"STATUS\" />,\r\n        accessor: \"inscription_status_code\",\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Cell: row => {\r\n          if (row.value === \"FIN\") {\r\n            return <FormattedMessage id=\"FIN\" />;\r\n          } else if (row.value === \"EP\") {\r\n            return <FormattedMessage id=\"EP\" />;\r\n          } else if (row.value === \"DNS\") {\r\n            return <FormattedMessage id=\"DNS\" />;\r\n          } else if (row.value === \"D\") {\r\n            return <FormattedMessage id=\"D\" />;\r\n          } else if (row.value === \"DNF\") {\r\n            return <FormattedMessage id=\"DNF\" />;\r\n          } else if (row.value === \"DSQ\") {\r\n            return <FormattedMessage id=\"DSQ\" />;\r\n          }\r\n\r\n        },\r\n        filterMethod: (filter, row) => {\r\n          if (filter.value === \"\") {\r\n            return true;\r\n          }\r\n\r\n          if (Tableuniqueinscription_status_code.includes(filter.value)) {\r\n            return row[filter.id] === filter.value;\r\n          } else {\r\n            return true;\r\n          }\r\n        },\r\n        Filter: ({ filter, onChange }) => (\r\n          <select\r\n            onChange={event => onChange(event.target.value)}\r\n            style={{ width: \"100%\", textAlignLast: \"center\" }}\r\n            value={filter ? filter.value : \"all\"}\r\n          >\r\n            <FormattedMessage id=\"ALL\">\r\n              {txt => <option value=\"all\">{txt}</option>}\r\n            </FormattedMessage>\r\n            {Tableuniqueinscription_status_code.map(k => {\r\n              return (\r\n                <FormattedMessage id={k.toString()}>\r\n                  {txt => <option key={k.toString()} value={k}>{txt}</option>}\r\n                </FormattedMessage>\r\n              );\r\n            })}\r\n          </select>\r\n        )\r\n      },\r\n      {\r\n        Header: (size > 800) ? <FormattedMessage id=\"FAVORITE\" /> : \"FAV\",\r\n        filterable: false,\r\n        sortable: false,\r\n        width: (size > 800) ? 100 : 50,\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Cell: row => (\r\n\r\n\r\n          <Favorites ListaFavoritos={row.original.athlete.athlete_id} />\r\n\r\n        )\r\n      }\r\n    ];\r\n    return (\r\n      <ReactTable\r\n        defaultSorted={[\r\n          {\r\n            id: \"dorsal_number\",\r\n            desc: false\r\n          }\r\n        ]}\r\n        previousText={<FormattedMessage id=\"PREVIOUS\" />}\r\n        nextText={<FormattedMessage id=\"NEXT\" />}\r\n        columns={columns}\r\n        data={this.props.athleteList}\r\n        filterable\r\n        noDataText={<FormattedMessage id=\"NODATA\" />}\r\n        defaultPageSize={minimalSize(this.props.athleteList.length,20)}\r\n        pageSizeOptions={calculatePagination(this.props.athleteList.length, 20)}\r\n        showPagination={true}\r\n        showPaginationTop={false}\r\n        showPaginationBottom={true}\r\n        showPageSizeOptions={true}\r\n        showPageJump={true}\r\n        collapseOnSortingChange={true}\r\n        collapseOnPageChange={true}\r\n        collapseOnDataChange={true}\r\n        freezeWhenExpanded={false}\r\n        sortable={true}\r\n        multiSort={true}\r\n        resizable={true}\r\n        pageText={<FormattedMessage id=\"PAGE\" />}\r\n        defaultSortDesc={false}\r\n        rowsText={\"\"}\r\n        className=\"-striped -highlight\"\r\n\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Header from \"../structure/Header\";\r\nimport Footer from \"../structure/Footer\";\r\nimport Menu from \"../structure/Menu\";\r\nimport TableSubscribersCompetition from \"../Tables/TableParticipantsCompetition\";\r\nimport WidgetNumberParticipants from \"../Widgets/NumberParticipants\";\r\nimport WidgetNumberCategories from \"../Widgets/NumberCategories\";\r\nimport WidgetNumberteams from \"../Widgets/NumberTeams\";\r\nimport WidgetNumberNacionalities from \"../Widgets/NumberNationalities\";\r\nimport Loader from \"../Loader/Loader\";\r\n\r\nconst API_KEY = `${process.env.REACT_APP_API_TRAIL_KEY}`;\r\nconst API_URL = `${process.env.REACT_APP_API_TRAIL_URL}`;\r\nconst TOKEN = API_KEY;\r\n\r\nexport default class EventSubscribers extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      athleteList: [],\r\n      loading: false,\r\n    };\r\n  }\r\n  componentWillMount() {\r\n    try {\r\n      if (localStorage.getItem(`athleteList${this.props.match.params.EventID}${this.props.match.params.CompID}`)) {\r\n        const athList = JSON.parse(localStorage.getItem(`athleteList${this.props.match.params.EventID}${this.props.match.params.CompID}`))\r\n        this.setState({ athleteList: athList, loading: true })\r\n      }\r\n    }\r\n    catch{\r\n      localStorage.clear();\r\n\r\n    }\r\n    this.getAthletsList = this.getAthletsList.bind(this);\r\n    this.getAthletsList();\r\n\r\n  }\r\n  /*when props change*/\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.match.params.CompID !== this.props.match.params.CompID) {\r\n      this.setState({ loading: false });\r\n      try {\r\n        if (localStorage.getItem(`athleteList${this.props.match.params.EventID}${this.props.match.params.CompID}`)) {\r\n          const athList = JSON.parse(localStorage.getItem(`athleteList${this.props.match.params.EventID}${this.props.match.params.CompID}`))\r\n          this.setState({ athleteList: athList, loading: true })\r\n        }\r\n      }\r\n      catch{\r\n        localStorage.clear();\r\n\r\n      }\r\n      this.getAthletsList();\r\n    }\r\n  }\r\n  /*get list of athlets*/\r\n  getAthletsList = async e => {\r\n\r\n    const API_CALL = await fetch(`${API_URL}/competition/AthsList/${this.props.match.params.CompID}/`, {\r\n      headers: new Headers({\r\n        Authorization: TOKEN\r\n      })\r\n    });\r\n    const data = await API_CALL.json();\r\n    try {\r\n      localStorage.setItem(`athleteList${this.props.match.params.EventID}${this.props.match.params.CompID}`, JSON.stringify(data))\r\n    }\r\n    catch{\r\n      localStorage.clear();\r\n\r\n    }\r\n    this.setState({ athleteList: data, loading: true });\r\n\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header eventID={this.props.match.params.EventID} />\r\n        <Menu eventID={this.props.match.params.EventID} competitionID={this.props.match.params.CompID} />\r\n        {/*Send the event id to the MENU, to get the competition list*/}\r\n        {/*CONTENT*/}\r\n        <div>\r\n          {/* Content Wrapper. Contains page content */}\r\n          <div className=\"content-wrapper\">\r\n            {/* Content Header (Page header) */}\r\n            <section className=\"content-header\">\r\n              <h1>\r\n                <span>{this.props.match.params.CompName}</span>\r\n              </h1>\r\n            </section>\r\n            {/* Main content */}\r\n            {/*Check if data is loading*/}\r\n            {(() => {\r\n              if (this.state.loading === false) {\r\n                return (\r\n                  <section className=\"content\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-xs-12\">\r\n                        <div className=\"box\">\r\n                          {/* /.box-body */}\r\n                          <div className=\"box-body\" style={{ display: 'flex', justifyContent: 'center' }}>\r\n                            <Loader />\r\n                          </div>\r\n\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </section>\r\n                )\r\n              }\r\n              else {\r\n                return (\r\n                  <section className=\"content\">\r\n                    <div className=\"row\">\r\n                      {/* widget for the number of participants */}\r\n                      <WidgetNumberParticipants athleteList={this.state.athleteList} />\r\n                      {/* widget for the number of Teams */}\r\n                      <WidgetNumberteams athleteList={this.state.athleteList} />\r\n                      {/* widget for the number of Categories */}\r\n                      <WidgetNumberCategories athleteList={this.state.athleteList} />\r\n                      {/* widget for the number of Nacionalities */}\r\n                      <WidgetNumberNacionalities athleteList={this.state.athleteList} />\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-xs-12\">\r\n                        <div className=\"box\">\r\n                          {/* /.box-body */}\r\n                          <div className=\"box box-primary\"></div>\r\n                          <TableSubscribersCompetition\r\n                            eventID={this.props.match.params.EventID}\r\n                            competitionID={this.props.match.params.CompID}\r\n                            athleteList={this.state.athleteList}\r\n                            loading={this.state.loading}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      {/* /.col */}\r\n                    </div>\r\n                    {/* /.row */}\r\n                  </section>\r\n                )\r\n              }\r\n            })()}\r\n          </div>\r\n          {/* /.content-wrapper */}\r\n        </div>\r\n        <Footer eventID={this.props.match.params.EventID} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export function FormatTime(time) {\r\n    var TimeSplit = time.split(\":\")\r\n    var H = TimeSplit[0]\r\n    var M = TimeSplit[1]\r\n    var S = TimeSplit[2]\r\n    if (H.length === 1) {\r\n        H = \"0\" + H\r\n    }\r\n    if (M.length === 1) {\r\n        M = \"0\" + M\r\n    }\r\n    if (S.length === 1) {\r\n        S = \"0\" + S\r\n    }\r\n    return (H + \":\" + M + \":\" + S)\r\n}\r\n","import React, { Component } from \"react\";\r\nimport ReactTable from \"react-table\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Favorites from \"../favorites/favoritesChecker\"\r\nimport { FormatTime } from \"../Scripts/time\"\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { calculatePagination } from \"../Scripts/PaginationHelper\"\r\nimport { minimalSize } from \"../Scripts/PaginationHelper\"\r\n\r\n\r\nvar size = window.innerWidth;\r\n\r\nexport default class TableCheckpoints extends Component {\r\n\r\n  CheckSize() {\r\n    if (size > 800) {\r\n      return true;\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  checkPosition(position) {\r\n    if (0 === parseInt(position)) {\r\n      return (\"-\")\r\n    }\r\n    else {\r\n      return (position)\r\n\r\n    }\r\n  }\r\n\r\n  render() {\r\n    //Info for the filters\r\n    //get the category\r\n    let category = this.props.athleteList.map(athelete => {\r\n      return athelete.escalao;\r\n    });\r\n    //remove duplicates\r\n    const Tableuniquecategory = [...new Set(category.sort())];\r\n    //get the nacionality\r\n    let nacionality = this.props.athleteList.map(athelete => {\r\n      return athelete.country;\r\n    });\r\n    //remove duplicates\r\n    const Tableuniquenacionality = [...new Set(nacionality.sort())];\r\n\r\n    //get the Club\r\n    let club = this.props.athleteList.map(athelete => {\r\n      return athelete.club;\r\n    });\r\n    //remove duplicates\r\n    const Tableuniqueclub = [...new Set(club.sort())];\r\n\r\n\r\n\r\n    //Table\r\n\r\n    const columns = [\r\n      {\r\n        Header: \"Id\",\r\n        accessor: \"athlete_id\",\r\n        sortable: false,\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        width: 100,\r\n        maxWidth: 100,\r\n        mimWidth: 100,\r\n        show: false\r\n      },\r\n      {\r\n        Header: (size > 800) ? <FormattedMessage id=\"POSITION\" /> : \"POS\",\r\n        accessor: \"PositionGlobal\",\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Cell: row => (\r\n          <span> {this.checkPosition(row.value)} </span>\r\n        ),\r\n        width: (size > 800) ? 100 : 55,\r\n        Filter: ({ filter, onChange }) => (\r\n          <FormattedMessage id=\"SEARCH\" >\r\n          {txt => <input\r\n             onChange={event => onChange(event.target.value)}\r\n             value={filter ? filter.value : \"\"}\r\n             placeholder={txt}\r\n             style={{\r\n               width: \"100%\",\r\n               textAlign: \"Center\"\r\n             }}\r\n           />}\r\n           </FormattedMessage>\r\n        )\r\n      },\r\n      {\r\n        Header: (size > 800) ? <FormattedMessage id=\"DORSAL\" /> : \"PTL\",\r\n        id: \"peitoral\",\r\n        accessor: d => Number(d.peitoral),\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        width: (size > 800) ? 100 : 60,\r\n        Filter: ({ filter, onChange }) => (\r\n          <FormattedMessage id=\"SEARCH\" >\r\n         {txt => <input\r\n            onChange={event => onChange(event.target.value)}\r\n            value={filter ? filter.value : \"\"}\r\n            placeholder={txt}\r\n            style={{\r\n              width: \"100%\",\r\n              textAlign: \"Center\"\r\n            }}\r\n          />}\r\n          </FormattedMessage>\r\n        ),\r\n        Cell: row => (\r\n          <Link\r\n            to={{ pathname: `/AthleteDetail/${this.props.eventID}/${this.props.competitionID}/${row.original.athlete_id}` }}\r\n          >\r\n            <span style={{ color: \"#3c8dbc\" }}>{row.value} </span>\r\n          </Link>\r\n        )\r\n      },\r\n      {\r\n        Header: <FormattedMessage id=\"NAME\" />,\r\n        accessor: \"name\",\r\n        width: (size > 800) ? 300 : 130,\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Filter: ({ filter, onChange }) => (\r\n          <FormattedMessage id=\"SEARCH\" >\r\n          {txt => <input\r\n             onChange={event => onChange(event.target.value)}\r\n             value={filter ? filter.value : \"\"}\r\n             placeholder={txt}\r\n             style={{\r\n               width: \"100%\",\r\n               textAlign: \"Center\"\r\n             }}\r\n           />}\r\n           </FormattedMessage>\r\n        ),\r\n        Cell: row => (\r\n          <Link\r\n            to={{ pathname: `/AthleteDetail/${this.props.eventID}/${this.props.competitionID}/${row.original.athlete_id}` }}\r\n          >\r\n            <span style={{ color: \"#3c8dbc\" }}>{row.value} </span>\r\n          </Link>\r\n        )\r\n      },\r\n      {\r\n        Header: <FormattedMessage id=\"TEAM\" />,\r\n        accessor: \"club\",\r\n        show: this.CheckSize(),\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Cell: row => row.value,\r\n        filterMethod: (filter, row) => {\r\n          if (filter.value === \"\") {\r\n            return true;\r\n          }\r\n\r\n          if (Tableuniqueclub.includes(filter.value)) {\r\n            return row[filter.id] === filter.value;\r\n          } else {\r\n            return true;\r\n          }\r\n        },\r\n        Filter: ({ filter, onChange }) => (\r\n          <select\r\n            onChange={event => onChange(event.target.value)}\r\n            style={{ width: \"100%\", textAlignLast: \"center\" }}\r\n            value={filter ? filter.value : \"all\"}\r\n          >\r\n            <FormattedMessage id=\"ALL\">\r\n              {txt => <option value=\"all\">{txt}</option>}\r\n            </FormattedMessage>\r\n            {Tableuniqueclub.map(k => {\r\n              return (\r\n                <option key={k.toString()} value={k}>\r\n                  {k}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        )\r\n      },\r\n      {\r\n        Header: <FormattedMessage id=\"CATEGORY\" />,\r\n        accessor: \"escalao\",\r\n        width: (size > 800) ? 150 : 85,\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Cell: row => row.value,\r\n        filterMethod: (filter, row) => {\r\n          if (filter.value === \"\") {\r\n            return true;\r\n          }\r\n\r\n          if (Tableuniquecategory.includes(filter.value)) {\r\n            return row[filter.id] === filter.value;\r\n          } else {\r\n            return true;\r\n          }\r\n        },\r\n        Filter: ({ filter, onChange }) => (\r\n          <select\r\n            onChange={event => onChange(event.target.value)}\r\n            style={{ width: \"100%\", textAlignLast: \"center\" }}\r\n            value={filter ? filter.value : \"all\"}\r\n          >\r\n            <FormattedMessage id=\"ALL\">\r\n              {txt => <option value=\"all\">{txt}</option>}\r\n            </FormattedMessage>\r\n            {Tableuniquecategory.map(k => {\r\n              return (\r\n                <option key={k.toString()} value={k}>\r\n                  {k}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        )\r\n      },\r\n      {\r\n        Header: <FormattedMessage id=\"COUNTRY\" />,\r\n        accessor: \"country\",\r\n        width: 150,\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        show: this.CheckSize(),\r\n        Cell: row => row.value,\r\n        filterMethod: (filter, row) => {\r\n          if (filter.value === \"\") {\r\n            return true;\r\n          }\r\n\r\n          if (Tableuniquenacionality.includes(filter.value)) {\r\n            return row[filter.id] === filter.value;\r\n          } else {\r\n            return true;\r\n          }\r\n        },\r\n        Filter: ({ filter, onChange }) => (\r\n          <select\r\n            onChange={event => onChange(event.target.value)}\r\n            style={{ width: \"100%\", textAlignLast: \"center\" }}\r\n            value={filter ? filter.value : \"all\"}\r\n          >\r\n            <FormattedMessage id=\"ALL\">\r\n              {txt => <option value=\"all\">{txt}</option>}\r\n            </FormattedMessage>\r\n            {Tableuniquenacionality.map(k => {\r\n              return (\r\n                <option key={k.toString()} value={k}>\r\n                  {k}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        )\r\n      },\r\n      {\r\n        Header: <FormattedMessage id=\"TIME\" />,\r\n        accessor: \"acumulated_time\",\r\n        filterable: false,\r\n        sortable: false,\r\n        width: (size > 800) ? 100 : 70,\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Cell: row => FormatTime(row.value)\r\n\r\n      },\r\n      {\r\n        Header: (size > 800) ? \"Dif 1º\" : \"Dif 1º\",\r\n        accessor: \"dif\",\r\n        filterable: false,\r\n        sortable: false,\r\n        width: (size > 800) ? 100 : 70,\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Cell: row => FormatTime(row.value)\r\n      },\r\n      {\r\n        Header: (size > 800) ? <FormattedMessage id=\"FAVORITE\" /> : \"FAV\",\r\n        filterable: false,\r\n        sortable: false,\r\n        width: (size > 800) ? 100 : 50,\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Cell: row => (\r\n          <Favorites ListaFavoritos={row.original.athlete_id} />\r\n\r\n        )\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <ReactTable\r\n        defaultSorted={[\r\n          {\r\n            id: \"PositionGlobal\",\r\n            desc: false\r\n          }\r\n        ]}\r\n        previousText={<FormattedMessage id=\"PREVIOUS\" />}\r\n        nextText={<FormattedMessage id=\"NEXT\" />}\r\n        columns={columns}\r\n        data={this.props.athleteList}\r\n        filterable\r\n        noDataText={<FormattedMessage id=\"NODATA\" />}\r\n        defaultPageSize={minimalSize(this.props.athleteList.length,20)}\r\n        pageSizeOptions={calculatePagination(this.props.athleteList.length, 20)}\r\n        showPagination={true}\r\n        showPaginationTop={false}\r\n        showPaginationBottom={true}\r\n        showPageSizeOptions={true}\r\n        showPageJump={true}\r\n        collapseOnSortingChange={true}\r\n        collapseOnPageChange={true}\r\n        collapseOnDataChange={true}\r\n        freezeWhenExpanded={false}\r\n        sortable={true}\r\n        multiSort={true}\r\n        resizable={true}\r\n        pageText={<FormattedMessage id=\"PAGE\" />}\r\n        rowsText={\"\"}\r\n        className=\"-striped -highlight\"\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react'\nimport { Line } from 'react-chartjs-2';\nimport { FormattedMessage} from 'react-intl';\n\nvar data;\n\nexport default class Velocity extends Component {\n\n  chartDataVerification() {\n    \n    if (!!(this.props.Faster) && !!(this.props.Normal)) {\n      return (<Line data={data} />)\n\n    }\n    else {\n      return (<p><FormattedMessage id=\"NODATA\" /></p>)\n\n\n    }\n  }\n\n\n  render() {\n    if (!!(this.props.Normal) && !!(this.props.Faster)) {\n      var position = []\n      this.props.checkpoint.map(data => { position.push(data.local) })\n      data = {\n        labels: (position.length > 2) ? position.slice(1) : position.Normal,\n        datasets: [\n          {\n            label: this.props.Name,\n            fill: false,\n            lineTension: 0.1,\n            backgroundColor: '#455A64',\n            borderColor: '#455A64',\n            borderCapStyle: 'butt',\n            borderDash: [],\n            borderDashOffset: 0.0,\n            borderJoinStyle: 'miter',\n            pointBorderColor: '#455A64',\n            pointBackgroundColor: '#455A64',\n            pointBorderWidth: 1,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: '#455A64',\n            pointHoverBorderColor: '#455A64',\n            pointHoverBorderWidth: 2,\n            pointRadius: 1,\n            pointHitRadius: 10,\n            data: (this.props.Normal.length > 2) ? this.props.Normal.slice(1) : this.props.Normal\n          },\n          {\n            label: 'Mais Rápido',\n            fill: false,\n            lineTension: 0.1,\n            backgroundColor: 'rgba(75,192,192,0.4)',\n            borderColor: 'rgba(75,192,192,1)',\n            borderCapStyle: 'butt',\n            borderDash: [],\n            borderDashOffset: 0.0,\n            borderJoinStyle: 'miter',\n            pointBorderColor: 'rgba(75,192,192,1)',\n            pointBackgroundColor: 'rgba(75,192,192,1)',\n            pointBorderWidth: 1,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n            pointHoverBorderColor: 'rgba(220,220,220,1)',\n            pointHoverBorderWidth: 2,\n            pointRadius: 1,\n            pointHitRadius: 10,\n            data: (this.props.Faster.length > 2) ? this.props.Faster.slice(1) : this.props.Faster\n          },\n          \n        ]\n\n      };\n    }\n\n\n\n    return (\n      this.chartDataVerification()\n\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { Line } from 'react-chartjs-2';\nimport { FormattedMessage} from 'react-intl';\n\nvar data;\n\nexport default class Position extends Component {\n\n    chartDataVerification() {\n\n        if (!!(this.props.Global) && !!(this.props.Tier) && !!(this.props.Gender)) {\n            return (<Line\n                data={data}\n\n                options={{\n                    legend: {\n                        display: true\n                    },\n                    scales: {\n                        yAxes: [{\n                            ticks: {\n                                max: this.props.maxY,\n                                min: 0,\n                                stepSize: 1\n                            }\n                        }]\n                    },\n                }} />)\n\n        }\n        else {\n            return (<p><FormattedMessage id=\"NODATA\" /></p>)\n\n\n        }\n    }\n\n    render() {\n        var position = []\n        this.props.checkpoint.map(data => { position.push(data.local) })\n        if (!!(this.props.Global) && !!(this.props.Tier) && !!(this.props.Gender)) {\n            data = {\n                labels: (position.length > 2) ? position.slice(1) : position,\n                datasets: [\n                    {\n                        label: 'Global',\n                        fill: false,\n                        lineTension: 0.1,\n                        backgroundColor: '#455A64',\n                        borderColor: '#455A64',\n                        borderCapStyle: 'butt',\n                        borderDash: [],\n                        borderDashOffset: 0.0,\n                        borderJoinStyle: 'miter',\n                        pointBorderColor: '#455A64',\n                        pointBackgroundColor: '#455A64',\n                        pointBorderWidth: 1,\n                        pointHoverRadius: 5,\n                        pointHoverBackgroundColor: '#455A64',\n                        pointHoverBorderColor: '#455A64',\n                        pointHoverBorderWidth: 2,\n                        pointRadius: 1,\n                        pointHitRadius: 10,\n                        data: (this.props.Global.length > 2) ? this.props.Global.slice(1) : this.props.Global\n                    },\n                    {\n                        label: 'Genero',\n                        fill: false,\n                        lineTension: 0.1,\n                        backgroundColor: 'rgba(75,192,192,0.4)',\n                        borderColor: 'rgba(75,192,192,1)',\n                        borderCapStyle: 'butt',\n                        borderDash: [],\n                        borderDashOffset: 0.0,\n                        borderJoinStyle: 'miter',\n                        pointBorderColor: 'rgba(75,192,192,1)',\n                        pointBackgroundColor: 'rgba(75,192,192,1)',\n                        pointBorderWidth: 1,\n                        pointHoverRadius: 5,\n                        pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n                        pointHoverBorderColor: 'rgba(220,220,220,1)',\n                        pointHoverBorderWidth: 2,\n                        pointRadius: 1,\n                        pointHitRadius: 10,\n                        data: (this.props.Gender.length > 2) ? this.props.Gender.slice(1) : this.props.Gender\n                    },\n                    {\n                        label: 'Escalão',\n                        fill: false,\n                        lineTension: 0.1,\n                        backgroundColor: '#9CCC65',\n                        borderColor: '#9CCC65',\n                        borderCapStyle: 'butt',\n                        borderDash: [],\n                        borderDashOffset: 0.0,\n                        borderJoinStyle: 'miter',\n                        pointBorderColor: '#9CCC65',\n                        pointBackgroundColor: '#9CCC65',\n                        pointBorderWidth: 1,\n                        pointHoverRadius: 5,\n                        pointHoverBackgroundColor: '#9CCC65',\n                        pointHoverBorderColor: '#9CCC65',\n                        pointHoverBorderWidth: 2,\n                        pointRadius: 1,\n                        pointHitRadius: 10,\n                        data: (this.props.Tier.length > 2) ? this.props.Tier.slice(1) : this.props.Tier\n                    }\n\n                ]\n\n            };\n\n\n        }\n\n\n\n        return (\n            this.chartDataVerification()\n\n        )\n    }\n}\n","import React, { Component } from 'react'\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nvar options;\r\nvar data;\r\n\r\nexport default class bar extends Component {\r\n\r\n\r\n    render() {\r\n        if (this.props.ISThree === true) {\r\n            data = {\r\n                labels: this.props.data.map(items => { return (items.Label) }),\r\n                datasets: [\r\n                    {\r\n                        label: this.props.Inscription,\r\n                        fill: false,\r\n                        lineTension: 0.1,\r\n                        backgroundColor: [\"#EF9A9A\", \"#B0BEC5\", \"#F48FB1\", \"#B39DDB\", \"#BCAAA4\", \"#9FA8DA\", \"#FFAB91\", \"#90CAF9\", \"#FFCC80\", \"#C5E1A5\", \"#81D4FA\", \"#FFF59D\", \"#FFE082\", \"#80CBC4\", \"#E6EE9C\", \"#80DEEA\",\r\n                        \"#C62828\", \"#37474F\", \"#AD1457\", \"#424242\", \"#6A1B9A\", \"#4E342E\", \"#4527A0\", \"#D84315\", \"#283593\", \"#1565C0\", \"#EF6C00\", \"#0277BD\", \"#FF8F00\", \"#00838F\", \"#F9A825\", \"#00695C\", \"#9E9D24\",\r\n                        \"#2E7D32\", \"#558B2F\", \"#F44336\", \"#607D8B\", \"#E91E63\", \"#795548\", \"#9C27B0\", \"#795548\", \"#673AB7\", \"#FF5722\", \"#FF9800\", \"#2196F3\", \"#FF9800\", \"#03A9F4\", \"#FFC107\", \"#00BCD4\", \"#FFEB3B\", \"#009688\",\r\n                        \"#4CAF50\",\"#CDDC39\",\"#009688\",\"#00BCD4\",\"#CDDC39\",\"#EF9A9A\", \"#B0BEC5\", \"#F48FB1\", \"#EEEEEE\", \"#B39DDB\", \"#BCAAA4\", \"#9FA8DA\", \"#FFAB91\", \"#90CAF9\", \"#FFCC80\", \"#C5E1A5\", \"#81D4FA\", \"#FFF59D\", \"#FFE082\", \"#80CBC4\", \"#E6EE9C\", \"#80DEEA\",\r\n                        \"#C62828\", \"#37474F\", \"#AD1457\", \"#424242\", \"#6A1B9A\", \"#4E342E\", \"#4527A0\", \"#D84315\", \"#283593\", \"#1565C0\", \"#EF6C00\", \"#0277BD\", \"#FF8F00\", \"#00838F\", \"#F9A825\", \"#00695C\", \"#9E9D24\",\r\n                        \"#2E7D32\", \"#558B2F\", \"#F44336\", \"#607D8B\", \"#E91E63\", \"#795548\", \"#9C27B0\", \"#795548\", \"#673AB7\", \"#FF5722\", \"#FF9800\", \"#2196F3\", \"#FF9800\", \"#03A9F4\", \"#FFC107\", \"#00BCD4\", \"#FFEB3B\", \"#009688\",\r\n                        \"#4CAF50\",\"#CDDC39\",\"#009688\",\"#00BCD4\",\"#CDDC39\"],\r\n                        pointBorderColor: '#455A64',\r\n                        pointBackgroundColor: '#455A64',\r\n                        pointBorderWidth: 1,\r\n                        pointHoverRadius: 5,\r\n                        pointHoverBackgroundColor: '#455A64',\r\n                        pointHoverBorderColor: '#455A64',\r\n                        pointHoverBorderWidth: 2,\r\n                        pointRadius: 1,\r\n                        pointHitRadius: 10,\r\n                        data: this.props.data.map(items => { return (items.Value) })\r\n                    },\r\n                    {\r\n                        label: this.props.Start,\r\n                        fill: false,\r\n                        lineTension: 0.1,\r\n                        backgroundColor:[\"#EF9A9A\", \"#B0BEC5\", \"#F48FB1\", \"#B39DDB\", \"#BCAAA4\", \"#9FA8DA\", \"#FFAB91\", \"#90CAF9\", \"#FFCC80\", \"#C5E1A5\", \"#81D4FA\", \"#FFF59D\", \"#FFE082\", \"#80CBC4\", \"#E6EE9C\", \"#80DEEA\",\r\n                        \"#C62828\", \"#37474F\", \"#AD1457\", \"#424242\", \"#6A1B9A\", \"#4E342E\", \"#4527A0\", \"#D84315\", \"#283593\", \"#1565C0\", \"#EF6C00\", \"#0277BD\", \"#FF8F00\", \"#00838F\", \"#F9A825\", \"#00695C\", \"#9E9D24\",\r\n                        \"#2E7D32\", \"#558B2F\", \"#F44336\", \"#607D8B\", \"#E91E63\", \"#795548\", \"#9C27B0\", \"#795548\", \"#673AB7\", \"#FF5722\", \"#FF9800\", \"#2196F3\", \"#FF9800\", \"#03A9F4\", \"#FFC107\", \"#00BCD4\", \"#FFEB3B\", \"#009688\",\r\n                        \"#4CAF50\",\"#CDDC39\",\"#009688\",\"#00BCD4\",\"#CDDC39\",\"#EF9A9A\", \"#B0BEC5\", \"#F48FB1\", \"#EEEEEE\", \"#B39DDB\", \"#BCAAA4\", \"#9FA8DA\", \"#FFAB91\", \"#90CAF9\", \"#FFCC80\", \"#C5E1A5\", \"#81D4FA\", \"#FFF59D\", \"#FFE082\", \"#80CBC4\", \"#E6EE9C\", \"#80DEEA\",\r\n                        \"#C62828\", \"#37474F\", \"#AD1457\", \"#424242\", \"#6A1B9A\", \"#4E342E\", \"#4527A0\", \"#D84315\", \"#283593\", \"#1565C0\", \"#EF6C00\", \"#0277BD\", \"#FF8F00\", \"#00838F\", \"#F9A825\", \"#00695C\", \"#9E9D24\",\r\n                        \"#2E7D32\", \"#558B2F\", \"#F44336\", \"#607D8B\", \"#E91E63\", \"#795548\", \"#9C27B0\", \"#795548\", \"#673AB7\", \"#FF5722\", \"#FF9800\", \"#2196F3\", \"#FF9800\", \"#03A9F4\", \"#FFC107\", \"#00BCD4\", \"#FFEB3B\", \"#009688\",\r\n                        \"#4CAF50\",\"#CDDC39\",\"#009688\",\"#00BCD4\",\"#CDDC39\"],\r\n                        pointBackgroundColor: '#455A64',\r\n                        pointBorderWidth: 1,\r\n                        pointHoverRadius: 5,\r\n                        pointHoverBackgroundColor: '#455A64',\r\n                        pointHoverBorderColor: '#455A64',\r\n                        pointHoverBorderWidth: 2,\r\n                        pointRadius: 1,\r\n                        pointHitRadius: 10,\r\n                        data: this.props.dataStart.map(items => { return (items.Value) })\r\n                    },\r\n                    {\r\n                        label: this.props.Arrivals,\r\n                        fill: false,\r\n                        lineTension: 0.1,\r\n                        backgroundColor: [\"#EF9A9A\", \"#B0BEC5\", \"#F48FB1\", \"#B39DDB\", \"#BCAAA4\", \"#9FA8DA\", \"#FFAB91\", \"#90CAF9\", \"#FFCC80\", \"#C5E1A5\", \"#81D4FA\", \"#FFF59D\", \"#FFE082\", \"#80CBC4\", \"#E6EE9C\", \"#80DEEA\",\r\n                        \"#C62828\", \"#37474F\", \"#AD1457\", \"#424242\", \"#6A1B9A\", \"#4E342E\", \"#4527A0\", \"#D84315\", \"#283593\", \"#1565C0\", \"#EF6C00\", \"#0277BD\", \"#FF8F00\", \"#00838F\", \"#F9A825\", \"#00695C\", \"#9E9D24\",\r\n                        \"#2E7D32\", \"#558B2F\", \"#F44336\", \"#607D8B\", \"#E91E63\", \"#795548\", \"#9C27B0\", \"#795548\", \"#673AB7\", \"#FF5722\", \"#FF9800\", \"#2196F3\", \"#FF9800\", \"#03A9F4\", \"#FFC107\", \"#00BCD4\", \"#FFEB3B\", \"#009688\",\r\n                        \"#4CAF50\",\"#CDDC39\",\"#009688\",\"#00BCD4\",\"#CDDC39\",\"#EF9A9A\", \"#B0BEC5\", \"#F48FB1\", \"#EEEEEE\", \"#B39DDB\", \"#BCAAA4\", \"#9FA8DA\", \"#FFAB91\", \"#90CAF9\", \"#FFCC80\", \"#C5E1A5\", \"#81D4FA\", \"#FFF59D\", \"#FFE082\", \"#80CBC4\", \"#E6EE9C\", \"#80DEEA\",\r\n                        \"#C62828\", \"#37474F\", \"#AD1457\", \"#424242\", \"#6A1B9A\", \"#4E342E\", \"#4527A0\", \"#D84315\", \"#283593\", \"#1565C0\", \"#EF6C00\", \"#0277BD\", \"#FF8F00\", \"#00838F\", \"#F9A825\", \"#00695C\", \"#9E9D24\",\r\n                        \"#2E7D32\", \"#558B2F\", \"#F44336\", \"#607D8B\", \"#E91E63\", \"#795548\", \"#9C27B0\", \"#795548\", \"#673AB7\", \"#FF5722\", \"#FF9800\", \"#2196F3\", \"#FF9800\", \"#03A9F4\", \"#FFC107\", \"#00BCD4\", \"#FFEB3B\", \"#009688\",\r\n                        \"#4CAF50\",\"#CDDC39\",\"#009688\",\"#00BCD4\",\"#CDDC39\"],\r\n                        pointBorderColor: '#455A64',\r\n                        pointBackgroundColor: '#455A64',\r\n                        pointBorderWidth: 1,\r\n                        pointHoverRadius: 5,\r\n                        pointHoverBackgroundColor: '#455A64',\r\n                        pointHoverBorderColor: '#455A64',\r\n                        pointHoverBorderWidth: 2,\r\n                        pointRadius: 1,\r\n                        pointHitRadius: 10,\r\n                        data: this.props.dataLast.map(items => { return (items.Value) })\r\n                    }\r\n                ]\r\n\r\n            }\r\n        }\r\n        else {\r\n            data = {\r\n                labels: this.props.data.map(items => { return (items.Label) }),\r\n                datasets: [\r\n                    {\r\n                        label: this.props.Inscription,\r\n                        fill: false,\r\n                        lineTension: 0.1,\r\n                        backgroundColor:[\"#EF9A9A\", \"#B0BEC5\", \"#F48FB1\", \"#B39DDB\", \"#BCAAA4\", \"#9FA8DA\", \"#FFAB91\", \"#90CAF9\", \"#FFCC80\", \"#C5E1A5\", \"#81D4FA\", \"#FFF59D\", \"#FFE082\", \"#80CBC4\", \"#E6EE9C\", \"#80DEEA\",\r\n                        \"#C62828\", \"#37474F\", \"#AD1457\", \"#424242\", \"#6A1B9A\", \"#4E342E\", \"#4527A0\", \"#D84315\", \"#283593\", \"#1565C0\", \"#EF6C00\", \"#0277BD\", \"#FF8F00\", \"#00838F\", \"#F9A825\", \"#00695C\", \"#9E9D24\",\r\n                        \"#2E7D32\", \"#558B2F\", \"#F44336\", \"#607D8B\", \"#E91E63\", \"#795548\", \"#9C27B0\", \"#795548\", \"#673AB7\", \"#FF5722\", \"#FF9800\", \"#2196F3\", \"#FF9800\", \"#03A9F4\", \"#FFC107\", \"#00BCD4\", \"#FFEB3B\", \"#009688\",\r\n                        \"#4CAF50\",\"#CDDC39\",\"#009688\",\"#00BCD4\",\"#CDDC39\",\"#EF9A9A\", \"#B0BEC5\", \"#F48FB1\", \"#EEEEEE\", \"#B39DDB\", \"#BCAAA4\", \"#9FA8DA\", \"#FFAB91\", \"#90CAF9\", \"#FFCC80\", \"#C5E1A5\", \"#81D4FA\", \"#FFF59D\", \"#FFE082\", \"#80CBC4\", \"#E6EE9C\", \"#80DEEA\",\r\n                        \"#C62828\", \"#37474F\", \"#AD1457\", \"#424242\", \"#6A1B9A\", \"#4E342E\", \"#4527A0\", \"#D84315\", \"#283593\", \"#1565C0\", \"#EF6C00\", \"#0277BD\", \"#FF8F00\", \"#00838F\", \"#F9A825\", \"#00695C\", \"#9E9D24\",\r\n                        \"#2E7D32\", \"#558B2F\", \"#F44336\", \"#607D8B\", \"#E91E63\", \"#795548\", \"#9C27B0\", \"#795548\", \"#673AB7\", \"#FF5722\", \"#FF9800\", \"#2196F3\", \"#FF9800\", \"#03A9F4\", \"#FFC107\", \"#00BCD4\", \"#FFEB3B\", \"#009688\",\r\n                        \"#4CAF50\",\"#CDDC39\",\"#009688\",\"#00BCD4\",\"#CDDC39\"],\r\n                        pointBorderColor: '#455A64',\r\n                        pointBackgroundColor: '#455A64',\r\n                        pointBorderWidth: 1,\r\n                        pointHoverRadius: 5,\r\n                        pointHoverBackgroundColor: '#455A64',\r\n                        pointHoverBorderColor: '#455A64',\r\n                        pointHoverBorderWidth: 2,\r\n                        pointRadius: 1,\r\n                        pointHitRadius: 10,\r\n                        data: this.props.data.map(items => { return (items.Value) })\r\n                    }\r\n                ]\r\n\r\n            }\r\n        }\r\n\r\n        options = {\r\n            legend: {\r\n                display: false,\r\n                position: 'bottom',\r\n\r\n            },\r\n            scales: {\r\n                yAxes: [{\r\n                    ticks: {\r\n                        beginAtZero: true,\r\n                        min: 0,\r\n                        stepSize: 10,\r\n                    }\r\n                }]\r\n            }\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <Bar data={data} options={options} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Pie  } from 'react-chartjs-2';\r\n\r\nvar options;\r\nexport default class pie extends Component {\r\n\r\n\r\n    render() {\r\n        const data = {\r\n\r\n            labels: this.props.data.map(items => { return (items.Label) }),\r\n            datasets: [\r\n                {\r\n                    fill: false,\r\n                    lineTension: 0.1,\r\n                    backgroundColor: [\"#64B5F6\",\"#9575CD\",\"#EF9A9A\", \"#B0BEC5\", \"#F48FB1\", \"#EEEEEE\", \"#B39DDB\", \"#BCAAA4\", \"#9FA8DA\", \"#FFAB91\", \"#90CAF9\", \"#FFCC80\", \"#C5E1A5\", \"#81D4FA\", \"#FFF59D\", \"#FFE082\", \"#80CBC4\", \"#E6EE9C\", \"#80DEEA\",\r\n                    \"#C62828\", \"#37474F\", \"#AD1457\", \"#424242\", \"#6A1B9A\", \"#4E342E\", \"#4527A0\", \"#D84315\", \"#283593\", \"#1565C0\", \"#EF6C00\", \"#0277BD\", \"#FF8F00\", \"#00838F\", \"#F9A825\", \"#00695C\", \"#9E9D24\",\r\n                    \"#2E7D32\", \"#558B2F\", \"#F44336\", \"#607D8B\", \"#E91E63\", \"#795548\", \"#9C27B0\", \"#795548\", \"#673AB7\", \"#FF5722\", \"#FF9800\", \"#2196F3\", \"#FF9800\", \"#03A9F4\", \"#FFC107\", \"#00BCD4\", \"#FFEB3B\", \"#009688\",\r\n                    \"#4CAF50\",\"#CDDC39\",\"#009688\",\"#00BCD4\",\"#CDDC39\",\"#EF9A9A\", \"#B0BEC5\", \"#F48FB1\", \"#EEEEEE\", \"#B39DDB\", \"#BCAAA4\", \"#9FA8DA\", \"#FFAB91\", \"#90CAF9\", \"#FFCC80\", \"#C5E1A5\", \"#81D4FA\", \"#FFF59D\", \"#FFE082\", \"#80CBC4\", \"#E6EE9C\", \"#80DEEA\",\r\n                    \"#C62828\", \"#37474F\", \"#AD1457\", \"#424242\", \"#6A1B9A\", \"#4E342E\", \"#4527A0\", \"#D84315\", \"#283593\", \"#1565C0\", \"#EF6C00\", \"#0277BD\", \"#FF8F00\", \"#00838F\", \"#F9A825\", \"#00695C\", \"#9E9D24\",\r\n                    \"#2E7D32\", \"#558B2F\", \"#F44336\", \"#607D8B\", \"#E91E63\", \"#795548\", \"#9C27B0\", \"#795548\", \"#673AB7\", \"#FF5722\", \"#FF9800\", \"#2196F3\", \"#FF9800\", \"#03A9F4\", \"#FFC107\", \"#00BCD4\", \"#FFEB3B\", \"#009688\",\r\n                    \"#4CAF50\",\"#CDDC39\",\"#009688\",\"#00BCD4\",\"#CDDC39\"],\r\n                    pointBorderColor: '#455A64',\r\n                    pointBackgroundColor: '#455A64',\r\n                    pointBorderWidth: 1,\r\n                    pointHoverRadius: 5,\r\n                    pointHoverBackgroundColor: '#455A64',\r\n                    pointHoverBorderColor: '#455A64',\r\n                    pointHoverBorderWidth: 2,\r\n                    pointRadius: 1,\r\n                    pointHitRadius: 10,\r\n                    data: this.props.data.map(items => { return (items.Value) })\r\n                }]\r\n        }\r\n\r\n        options = {\r\n            legend: {\r\n                display: true,\r\n                position: 'bottom',\r\n            },\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <Pie  data={data} options={options} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nvar options;\r\nvar data;\r\n\r\nexport default class GenderComp extends Component {\r\n    render() {\r\n             data = {\r\n                labels: this.props.data.map(items => { return (items.Label) }),\r\n                datasets: [\r\n                    {\r\n                        label: this.props.Inscription,\r\n                        fill: false,\r\n                        lineTension: 0.1,\r\n                        backgroundColor: [\r\n                            \"#64B5F6\", \"#9575CD\",\r\n                        ],\r\n                        pointBorderColor: '#455A64',\r\n                        pointBackgroundColor: '#455A64',\r\n                        pointBorderWidth: 1,\r\n                        pointHoverRadius: 5,\r\n                        pointHoverBackgroundColor: '#455A64',\r\n                        pointHoverBorderColor: '#455A64',\r\n                        pointHoverBorderWidth: 2,\r\n                        pointRadius: 1,\r\n                        pointHitRadius: 10,\r\n                        data: this.props.data.map(items => { return (items.Value) })\r\n                    },\r\n                    {\r\n                        label: this.props.Start,\r\n                        fill: false,\r\n                        lineTension: 0.1,\r\n                        backgroundColor: [\r\n                            \"#64B5F6\", \"#9575CD\",\r\n                        ],\r\n                        pointBorderColor: '#455A64',\r\n                        pointBackgroundColor: '#455A64',\r\n                        pointBorderWidth: 1,\r\n                        pointHoverRadius: 5,\r\n                        pointHoverBackgroundColor: '#455A64',\r\n                        pointHoverBorderColor: '#455A64',\r\n                        pointHoverBorderWidth: 2,\r\n                        pointRadius: 1,\r\n                        pointHitRadius: 10,\r\n                        data: this.props.dataStart.map(items => { return (items.Value) })\r\n                    },\r\n                    {\r\n                        label: this.props.Arrivals,\r\n                        fill: false,\r\n                        lineTension: 0.1,\r\n                        backgroundColor: [\r\n                            \"#64B5F6\", \"#9575CD\",\r\n                        ],\r\n                        pointBorderColor: '#455A64',\r\n                        pointBackgroundColor: '#455A64',\r\n                        pointBorderWidth: 1,\r\n                        pointHoverRadius: 5,\r\n                        pointHoverBackgroundColor: '#455A64',\r\n                        pointHoverBorderColor: '#455A64',\r\n                        pointHoverBorderWidth: 2,\r\n                        pointRadius: 1,\r\n                        pointHitRadius: 10,\r\n                        data: this.props.dataLast.map(items => { return (items.Value) })\r\n                    }\r\n                ]\r\n\r\n            }\r\n        \r\n\r\n\r\n        options = {\r\n            legend: {\r\n                display: false,\r\n            },\r\n            scales: {\r\n                yAxes: [{\r\n                  ticks: {\r\n                    beginAtZero: true,\r\n                    min: 0\r\n                  }    \r\n                }]\r\n              }   \r\n        };\r\n\r\n        return (\r\n            <div>\r\n            <Bar data={data} options={options} />\r\n        </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nvar data;\r\nvar options;\r\nexport default class Ground extends Component {\r\n    render() {\r\n            data = {\r\n            labels:this.props.data.map(items => { return (items.checkpoint.local) }),\r\n            datasets: [\r\n              {\r\n                label: this.props.Name,\r\n                fill: true,\r\n                lineTension: 0.1,\r\n                backgroundColor: '#BCAAA4',\r\n                borderColor: '#66BB6A',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'miter',\r\n                pointBorderColor: '#212121',\r\n                pointBackgroundColor: '#212121',\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: '#212121',\r\n                pointHoverBorderColor: '#212121',\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 10,\r\n                data: this.props.data.map(items => { return (items.checkpoint.altitude) })\r\n              }              \r\n            ]\r\n          };\r\n          \r\n        options = {\r\n            legend: {\r\n                display: false,\r\n            },\r\n            scales: {\r\n                yAxes: [{\r\n                  ticks: {\r\n                    beginAtZero: true,\r\n                    min: 0,\r\n                  },   \r\n                  scaleLabel: {\r\n                    display: true,\r\n                    labelString: 'm'\r\n                  } \r\n                }]\r\n              }   \r\n        };\r\n        \r\n    \r\n    \r\n    \r\n        return (\r\n            <Line data={data} options={options} />\r\n    \r\n        )\r\n      }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nvar options;\r\nvar data;\r\n\r\nexport default class Checkpoint extends Component {\r\n    render() {\r\n        data = {\r\n            labels: this.props.data.map(items => { return (items.Label) }),\r\n            datasets: [\r\n                {\r\n                    fill: true,\r\n                    lineTension: 0.1,\r\n                    backgroundColor: '#90CAF9',\r\n                    borderColor: '#42A5F5',\r\n                    borderDash: [],\r\n                    borderDashOffset: 0.0,\r\n                    borderJoinStyle: 'miter',\r\n                    pointBorderColor: '#263238',\r\n                    pointBackgroundColor: '#263238',\r\n                    pointBorderWidth: 1,\r\n                    pointHoverRadius: 5,\r\n                    pointHoverBackgroundColor: '#263238',\r\n                    pointHoverBorderColor: '#263238',\r\n                    pointHoverBorderWidth: 2,\r\n                    pointRadius: 1,\r\n                    pointHitRadius: 10,\r\n                    data: this.props.data.map(items => { return (items.Value) })\r\n                }\r\n            ]\r\n        };\r\n\r\n        options = {\r\n            legend: {\r\n                display: false,\r\n            },\r\n            scales: {\r\n                yAxes: [{\r\n                    ticks: {\r\n                        beginAtZero: true,\r\n                        min: 0,\r\n                    }\r\n                }]\r\n            }\r\n        };\r\n        return (\r\n            <div>\r\n                <Line data={data} options={options} />\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\nimport { FormattedMessage } from 'react-intl';\n\nexport default class FasterMale extends Component {\n    render() {\n        var Array = this.props.athleteList.filter(function (el) {\n            return el.sexo ===\"M\"\n                   \n          });\n        //get the faster time\n        let fasterTime = Array.map(athelete => {\n            return athelete.acumulated_time;\n        });\n        //get the faster athlete name\n        let fasterName = Array.map(athelete => {\n            return athelete.name;\n        });\n\n        return (\n\n            <div>\n                {/* Info boxes */}\n                <div className=\"col-md-3 col-sm-6 col-xs-12\">\n                    <div className=\"info-box\">\n                        <span className=\"info-box-icon bg-blue\"><i className=\"fa fa-fw fa-male\" /></span>\n                        <div className=\"info-box-content\">\n                            <span className=\"info-box-text\"><FormattedMessage id=\"FASTER\" /></span>\n                            <span className=\"info-box-text\"> <strong>{fasterName[0]} </strong></span>\n                            <span className=\"info-box-number\"> <small>{fasterTime[0]}</small></span>\n                        </div>\n                        {/* /.info-box-content */}\n                    </div>\n                    {/* /.info-box */}\n                </div>\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { FormattedMessage } from 'react-intl';\n\nexport default class FasterFemale extends Component {\n    render() {\n        var Array = this.props.athleteList.filter(function (el) {\n            return el.sexo ===\"F\"\n                   \n          });\n        //get the faster time\n        let fasterTime = Array.map(athelete => {\n            return athelete.acumulated_time;\n        });\n        //get the faster athlete name\n        let fasterName = Array.map(athelete => {\n            return athelete.name;\n        });\n        return (\n\n            <div>\n                {/* Info boxes */}\n                <div className=\"col-md-3 col-sm-6 col-xs-12\">\n                    <div className=\"info-box\">\n                        <span className=\"info-box-icon bg-blue\"><i className=\"fa fa-fw fa-female\" /></span>\n                        <div className=\"info-box-content\">\n                            <span className=\"info-box-text\"><FormattedMessage id=\"FASTER\" /></span>\n                            <span className=\"info-box-text\"> <strong>{fasterName[0]} </strong></span>\n                            <span className=\"info-box-number\"> <small>{fasterTime[0]}</small></span>\n                        </div>\n                        {/* /.info-box-content */}\n                    </div>\n                    {/* /.info-box */}\n                </div>\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from \"react\";\r\nimport Header from \"../structure/Header\";\r\nimport Footer from \"../structure/Footer\";\r\nimport Menu from \"../structure/Menu\";\r\nimport TableCheckpoints from \"../Tables/TableCheckpoints\";\r\nimport WidgetNumberParticipants from \"../Widgets/NumberParticipants\"\r\nimport WidgetFasterMale from \"../Widgets/FasterMale\"\r\nimport WidgetFasterFemale from \"../Widgets/FasterFemale\"\r\nimport Loader from \"../Loader/Loader\";\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { FormattedMessage} from 'react-intl';\r\n\r\n\r\nconst API_KEY = `${process.env.REACT_APP_API_TRAIL_KEY}`;\r\nconst API_URL = `${process.env.REACT_APP_API_TRAIL_URL}`;\r\nconst TOKEN = API_KEY;\r\nvar AthleteListSize = 0;\r\nvar sizeCheckpointList = 0;\r\nvar arrayTotalAthlets = [];\r\n\r\nexport default class EventSubscribers extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      CheckpointList: [],\r\n      loadingAthlets: false,\r\n      loadingCheckpoints: false,\r\n      Checkpointid: 0,\r\n      checkpointname: \"\",\r\n      checkpointnameShow: <div>< FormattedMessage id=\"SEARCHING\" />&nbsp;&nbsp;<i class=\"fa fa-refresh fa-spin\"/></div>,\r\n      AtheletsTotal: 0,\r\n      AtheletsTotalLoaded: false,\r\n      CheckpointTotalLoaded: false,\r\n      AthleteList: [],\r\n      CheckpointTotal:[]\r\n    };\r\n    this.GetFirstRunCheckpointList();\r\n    this.PopulateBadgesvalues()\r\n  }\r\n\r\n\r\n\r\n  /*for the first time when page is loaded */\r\n  GetFirstRunCheckpointList = async e => {\r\n    const API_CALL = await fetch(`${API_URL}/competition/Checkpoints/${this.props.match.params.CompID}/`, {\r\n      headers: new Headers({\r\n        Authorization: TOKEN\r\n      })\r\n    });\r\n    const data = await API_CALL.json();\r\n    this.setState({ CheckpointList: data, loadingCheckpoints: true });\r\n    this.Getlastcheckpoint();\r\n\r\n  };\r\n\r\n  /*for the  time when props change */\r\n  GetCheckpointList = async e => {\r\n    const API_CALL = await fetch(`${API_URL}/competition/Checkpoints/${this.props.match.params.CompID}/`, {\r\n      headers: new Headers({\r\n        Authorization: TOKEN\r\n      })\r\n    });\r\n    const data = await API_CALL.json();\r\n    this.setState({ CheckpointList: data, loadingCheckpoints: true });\r\n  };\r\n\r\n  /*get list of athlets*/\r\n  GetAthleteList = async e => {\r\n    const API_CALL = await fetch(`${API_URL}/results/AthsTimeWithGlobalPositions/${this.props.match.params.CompID}/${this.state.Checkpointid}/`, {\r\n      headers: new Headers({\r\n        Authorization: TOKEN\r\n      })\r\n    });\r\n    const data = await API_CALL.json();\r\n    AthleteListSize = await data.length;\r\n    this.setState({ AthleteList: data, loadingAthlets: true });\r\n  };\r\n  /*get total of athlets by checkpoint*/\r\n  async GetTotalAthlets() {\r\n    const API_CALL = await fetch(`${API_URL}/results/AthTotalByCheckpoint/${this.props.match.params.CompID}/`, {\r\n      headers: new Headers({\r\n        Authorization: TOKEN\r\n      })\r\n    });\r\n    const data = await API_CALL.json()\r\n    this.setState({ CheckpointTotal: data, CheckpointTotalLoaded: true });\r\n\r\n  };\r\n\r\n  /*when props change*/\r\n  async componentDidUpdate(prevProps) {\r\n    if (prevProps.match.params.CompID !== this.props.match.params.CompID) {\r\n      this.setState({ loadingAthlets: false })\r\n      await this.GetFirstRunCheckpointList();\r\n\r\n    }\r\n  }\r\n\r\n  /*when props change*/\r\n  UpdateStateCheckpoint(checkpointID, checkpointName) {\r\n    this.setState({ Checkpointid: checkpointID, checkpointname: checkpointName, loadingAthlets: false, checkpointnameShow: checkpointName }, this.GetAthleteList);\r\n  };\r\n\r\n  /*get last checkpoint with values in the database*/\r\n  async Getlastcheckpoint() {\r\n    let checkpointID = this.state.CheckpointList.map(checkpoint => checkpoint.checkpoint.checkpoint_id)\r\n    let checkpointName = this.state.CheckpointList.map(checkpoint => checkpoint.checkpoint.local)\r\n    sizeCheckpointList = checkpointID.length - 1; //-1 because array start in 0\r\n    this.setState({ Checkpointid: checkpointID[sizeCheckpointList], checkpointname: checkpointName[sizeCheckpointList] });\r\n    await this.GetAthleteList();\r\n\r\n    //Search for the last checkpoint with times inserted\r\n    if (AthleteListSize === 0) {\r\n      while (sizeCheckpointList >= 0) {\r\n        sizeCheckpointList = sizeCheckpointList - 1;\r\n        this.setState({ Checkpointid: checkpointID[sizeCheckpointList], checkpointname: checkpointName[sizeCheckpointList] });\r\n        await this.GetAthleteList();\r\n        if (AthleteListSize > 0) {\r\n          this.setState({ checkpointnameShow: this.state.checkpointname })\r\n          break;\r\n        }\r\n        else {\r\n          //if there is no times\r\n          if (sizeCheckpointList === 0) {\r\n            this.setState({ Checkpointid: checkpointID[0], checkpointname: checkpointName[0] });\r\n            this.setState({ checkpointnameShow: this.state.checkpointname })\r\n            await this.GetAthleteList();\r\n            break;\r\n          }\r\n        }\r\n\r\n\r\n      }\r\n    }\r\n    else {\r\n      this.setState({ checkpointnameShow: this.state.checkpointname })\r\n    }\r\n\r\n  }\r\n\r\n  PopulateBadgesvalues() {\r\n      this.GetTotalAthlets()\r\n  }\r\n\r\n  GetBadgesvalues(checkpoint) {\r\n    var total = 0;\r\n    this.state.CheckpointTotal.map(checkpointValue => { if (checkpointValue.CheckpointID === checkpoint) { total =checkpointValue.Value } })\r\n    return (total);\r\n  }\r\n\r\n\r\n  CheckpointList(checkpoint_order, length) {\r\n    if (checkpoint_order === '99'){\r\n      return (<span style={{ padding: '1px' }} class=\"fa fa-fw fa-flag-checkered\" ></span>)}\r\n    else if (checkpoint_order === '00'){\r\n      return (<span style={{ padding: '1px' }} class=\"fa fa-fw fa-bell-o\" ></span>)} \r\n    else if(Math.ceil(length/2)-1=== parseInt(checkpoint_order)){\r\n\r\n      return (<span style={{ padding: '1px' }} class=\"fa fa-fw fa-map-marker\" ></span>)} \r\n    else\r\n    {        return (<span style={{ padding: '1px' }}>{checkpoint_order}</span>)} \r\n    }\r\n    \r\n  \r\n\r\n  /*Loading message for the checkpoints*/\r\n  LoadingCheckpoints() {\r\n    if (this.state.loadingCheckpoints === false) {\r\n      return (\r\n        <th key=\"Loading\"> <a href=\"##\">< FormattedMessage id=\"LOADING\" /><i class=\"fa fa-refresh fa-spin\"/></a></th>\r\n      )\r\n    }\r\n    else\r\n      return (\r\n        this.state.CheckpointList.map(checkpoint => {\r\n          if (checkpoint.checkpoint.checkpoint_id === this.state.Checkpointid) {\r\n            return (\r\n\r\n              <th key={checkpoint.checkpoint.checkpoint_id} >\r\n                <Tooltip placement=\"top\" title={<span style={{ fontSize: \"16px\" }}>{checkpoint.checkpoint.local}</span>} arrow>\r\n                  <a style={{ color: '#37474F' }} onClick={() => this.UpdateStateCheckpoint(checkpoint.checkpoint.checkpoint_id, checkpoint.checkpoint.local)} href=\"##\">\r\n                   {this.CheckpointList(checkpoint.checkpoint_order,this.state.CheckpointList.length)}\r\n                    <span class=\"badge bg-red\">{this.GetBadgesvalues(checkpoint.checkpoint.checkpoint_id)}</span>\r\n\r\n                  </a>\r\n                </Tooltip>\r\n\r\n\r\n              </th>\r\n            )\r\n          }\r\n          else {\r\n            return (\r\n              <th key={checkpoint.checkpoint.checkpoint_id} >\r\n                <Tooltip placement=\"top\" title={<span style={{ fontSize: \"16px\" }}>{checkpoint.checkpoint.local}</span>} arrow>\r\n                  <a onClick={() => this.UpdateStateCheckpoint(checkpoint.checkpoint.checkpoint_id, checkpoint.checkpoint.local)} href=\"##\">\r\n                  {this.CheckpointList(checkpoint.checkpoint_order,this.state.CheckpointList.length)}\r\n                   <span class=\"badge bg-red\">{this.GetBadgesvalues(checkpoint.checkpoint.checkpoint_id)}</span>\r\n                  </a>\r\n                </Tooltip>\r\n\r\n              </th>\r\n\r\n            )\r\n          }\r\n\r\n\r\n\r\n        }))\r\n  }\r\n\r\n  /*Loading message for the athlete*/\r\n  LoadingAthletes() {\r\n    if (this.state.loadingAthlets === false) {\r\n      return (\r\n        <section className=\"content\">\r\n          <div className=\"row\">\r\n            <div className=\"col-xs-12\">\r\n              <div className=\"box\">\r\n                {/* /.box-body */}\r\n                <div className=\"box-body\" style={{ display: 'flex', justifyContent: 'center' }}>\r\n                  <Loader />\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      )\r\n    }\r\n    else {\r\n      return (\r\n        <section className=\"content\">\r\n          <div className=\"row\">\r\n            {/* widget for the number of participants */}\r\n            <WidgetNumberParticipants athleteList={this.state.AthleteList} />\r\n            {/* widget for the Faster */}\r\n            <WidgetFasterMale athleteList={this.state.AthleteList} />\r\n            <WidgetFasterFemale athleteList={this.state.AthleteList} />\r\n\r\n\r\n          </div>\r\n          <div\r\n            style={{\r\n              padding: \"10px 30px\",\r\n              background: \"#3c8dbc\",\r\n              zIndex: 999999,\r\n              fontSize: 16,\r\n              fontWeight: 600\r\n            }}\r\n          >\r\n\r\n            <table className=\"text-center\" style={{ padding: \"5px\", border: \"5px\", width: \"100%\" }}>\r\n              <tbody>\r\n                <tr style={{ textAlign: \"center !important\" }} >\r\n                  {this.LoadingCheckpoints()} {/* load checkpoint */}\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n\r\n\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-xs-12\">\r\n              <div className=\"box box-primary\">\r\n                {/* /.box-body */}\r\n                <div className=\"box-body\"></div>\r\n                <TableCheckpoints\r\n                  athleteList={this.state.AthleteList}\r\n                  eventID={this.props.match.params.EventID}\r\n                  competitionID={this.props.match.params.CompID}\r\n                  loading={this.state.loading}\r\n                />\r\n\r\n              </div>\r\n            </div>\r\n            {/* /.col */}\r\n          </div>\r\n          {/* /.row */}\r\n        </section>\r\n      )\r\n    }\r\n  }\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <div>\r\n        <Header eventID={this.props.match.params.EventID} />\r\n        {/*Send the event id to the MENU, to get the competition list*/}\r\n        <Menu eventID={this.props.match.params.EventID} competitionID={this.props.match.params.CompID} />\r\n        {/*CONTENT*/}\r\n        <div>\r\n          {/* Content Wrapper. Contains page content */}\r\n          <div className=\"content-wrapper\">\r\n\r\n            {/* Content Header (Page header) */}\r\n            <section className=\"content-header\">\r\n              <h1>\r\n                <span style={{ float: \"right\" }}  > {this.state.checkpointnameShow}</span>\r\n\r\n                <span >{this.props.match.params.CompName}</span>\r\n              </h1>\r\n            </section>\r\n\r\n\r\n            {/* Main content */}\r\n            {/*Check if data is loading*/}\r\n            {this.LoadingAthletes()} {/* loaded athletes */}\r\n          </div>\r\n          {/* /.content-wrapper */}\r\n        </div>\r\n        <Footer eventID={this.props.match.params.EventID} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport ReactTable from \"react-table\";\r\nimport \"react-table/react-table.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Favorites from \"../favorites/favoritesChecker\"\r\nimport {FormatTime} from \"../Scripts/time\"\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nvar size = window.innerWidth;\r\n\r\n\r\nexport default class TableSubscribers extends Component {\r\n  \r\n  CheckSize() {\r\n    if(size > 800){\r\n      return true;\r\n    }\r\n    else{\r\n      return false;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    \r\n    //Info for the filters\r\n    //get the category\r\n    let category = this.props.athleteList.map(athelete => {\r\n      return athelete.escalao;\r\n    });\r\n    //remove duplicates\r\n    const Tableuniquecategory = [...new Set(category.sort())];\r\n    //get the nacionality\r\n    let nacionality = this.props.athleteList.map(athelete => {\r\n      return athelete.country;\r\n    });\r\n    //remove duplicates\r\n    const Tableuniquenacionality = [...new Set(nacionality.sort())];\r\n  \r\n    //get the Club\r\n    let club = this.props.athleteList.map(athelete => {\r\n      return athelete.club;\r\n    });\r\n    //remove duplicates\r\n    const Tableuniqueclub = [...new Set(club.sort())];\r\n\r\n\r\n    //Table\r\n    const columns = [\r\n      {\r\n        Header: \"Id\",\r\n        accessor: \"athlete_id\",\r\n        sortable: false,\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        width: 100,\r\n        maxWidth: 100,\r\n        mimWidth: 100,\r\n        show: false\r\n      },\r\n      {\r\n        Header: (size>800)?<FormattedMessage id=\"POSITION\" />:\"POS\",\r\n        accessor: this.props.position,\r\n        style: {\r\n          display: \"flex\",\r\n          textAlign: \"Center\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        },\r\n        width:(size>800)?100:55,\r\n        Filter: ({ filter, onChange }) => (\r\n          <FormattedMessage id=\"SEARCH\" >\r\n          {txt => <input\r\n            onChange={event => onChange(event.target.value)}\r\n            value={filter ? filter.value : \"\"}\r\n            placeholder={txt}\r\n            style={{\r\n              width: \"100%\",\r\n              textAlign: \"Center\"\r\n            }}\r\n          />}\r\n        </FormattedMessage>\r\n        )\r\n      },\r\n      {\r\n        Header: (size>800)?<FormattedMessage id=\"PHOTO\" /> :\"PTL\",\r\n        id: \"photo\",\r\n        show: (size>800)?true:false,\r\n        accessor: \"photo\",\r\n        style: {\r\n          display: \"flex\",\r\n          textAlign: \"Center\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        },\r\n        width:(size>800)?100:60, \r\n        Cell: row => (\r\n          <img className=\"profile-user-img img-responsive img-circle\" src={row.value}></img>\r\n        )\r\n      },\r\n      {\r\n        Header: (size>800)?<FormattedMessage id=\"DORSAL\" /> :\"PTL\",\r\n        id: \"peitoral\",\r\n        accessor: d => Number(d.peitoral),\r\n        style: {\r\n          display: \"flex\",\r\n          textAlign: \"Center\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        },\r\n        width:(size>800)?100:60,\r\n        Filter: ({ filter, onChange }) => (\r\n          <FormattedMessage id=\"SEARCH\" >\r\n          {txt => <input\r\n            onChange={event => onChange(event.target.value)}\r\n            value={filter ? filter.value : \"\"}\r\n            placeholder={txt}\r\n            style={{\r\n              width: \"100%\",\r\n              textAlign: \"Center\"\r\n            }}\r\n          />}\r\n        </FormattedMessage>\r\n        ),\r\n        \r\n        Cell: row => (\r\n\r\n          <Link\r\n            to={{ pathname: `/AthleteDetail/${this.props.eventID}/${this.props.competitionID}/${row.original.athlete_id}` }}\r\n          >\r\n            <span style={{ color: \"#3c8dbc\" }}>{row.value} </span>\r\n          </Link>\r\n        )\r\n      },\r\n      {\r\n        Header: <FormattedMessage id=\"NAME\" />,\r\n        accessor: \"name\",\r\n        width:(size>800)?300:130,\r\n        style: {\r\n          display: \"flex\",\r\n          textAlign: \"Center\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        },\r\n        Filter: ({ filter, onChange }) => (\r\n          <FormattedMessage id=\"SEARCH\" >\r\n          {txt => <input\r\n            onChange={event => onChange(event.target.value)}\r\n            value={filter ? filter.value : \"\"}\r\n            placeholder={txt}\r\n            style={{\r\n              width: \"100%\",\r\n              textAlign: \"Center\"\r\n            }}\r\n          />}\r\n        </FormattedMessage>\r\n        ),\r\n        \r\n        Cell: row => (\r\n\r\n          <Link\r\n            to={{ pathname: `/AthleteDetail/${this.props.eventID}/${this.props.competitionID}/${row.original.athlete_id}` }}\r\n          >\r\n            <span style={{ color: \"#3c8dbc\" }}>{row.value} </span>\r\n          </Link>\r\n        )\r\n      },\r\n      {\r\n        Header: <FormattedMessage id=\"TEAM\" />,\r\n        accessor: \"club\",\r\n        show : this.CheckSize(),\r\n\r\n        style: {\r\n          display: \"flex\",\r\n          textAlign: \"Center\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        },\r\n        Cell: row => row.value,\r\n        filterMethod: (filter, row) => {\r\n          if (filter.value === \"\") {\r\n            return true;\r\n          }\r\n\r\n          if (Tableuniqueclub.includes(filter.value)) {\r\n            return row[filter.id] === filter.value;\r\n          } else {\r\n            return true;\r\n          }\r\n        },\r\n        Filter: ({ filter, onChange }) => (\r\n          <select\r\n            onChange={event => onChange(event.target.value)}\r\n            style={{ width: \"100%\", textAlignLast:\"center\" }}\r\n            value={filter ? filter.value : \"all\"}\r\n          >\r\n            <FormattedMessage id=\"ALL\">\r\n              {txt => <option value=\"all\">{txt}</option>}\r\n            </FormattedMessage>\r\n            {Tableuniqueclub.map(k => {\r\n              return (\r\n                <option key={k.toString()} value={k}>\r\n                  {k}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        )\r\n      },\r\n      {\r\n        Header: <FormattedMessage id=\"CATEGORY\" />,\r\n        accessor: \"escalao\",\r\n        width:(size>800)?150:85,\r\n        style: {\r\n          display: \"flex\",\r\n          textAlign: \"Center\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        },\r\n        Cell: row => row.value,\r\n        filterMethod: (filter, row) => {\r\n          if (filter.value === \"\") {\r\n            return true;\r\n          }\r\n\r\n          if (Tableuniquecategory.includes(filter.value)) {\r\n            return row[filter.id] === filter.value;\r\n          } else {\r\n            return true;\r\n          }\r\n        },\r\n        Filter: ({ filter, onChange }) => (\r\n          <select\r\n            onChange={event => onChange(event.target.value)}\r\n            style={{ width: \"100%\", textAlignLast:\"center\" }}\r\n            value={filter ? filter.value : \"all\"}\r\n          >\r\n             <FormattedMessage id=\"ALL\">\r\n              {txt => <option value=\"all\">{txt}</option>}\r\n            </FormattedMessage>\r\n            {Tableuniquecategory.map(k => {\r\n              return (\r\n                <option key={k.toString()} value={k}>\r\n                  {k}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        )\r\n      },\r\n      {\r\n        Header:  <FormattedMessage id=\"COMPETITION\" />,\r\n        accessor: \"country\",\r\n        width:150,\r\n        show : this.CheckSize(),\r\n        style: {\r\n          display: \"flex\",\r\n          textAlign: \"Center\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        },\r\n        Cell: row => row.value,\r\n        filterMethod: (filter, row) => {\r\n          if (filter.value === \"\") {\r\n            return true;\r\n          }\r\n\r\n          if (Tableuniquenacionality.includes(filter.value)) {\r\n            return row[filter.id] === filter.value;\r\n          } else {\r\n            return true;\r\n          }\r\n        },\r\n        Filter: ({ filter, onChange }) => (\r\n          <select\r\n            onChange={event => onChange(event.target.value)}\r\n            style={{ width: \"100%\", textAlignLast:\"center\" }}\r\n            value={filter ? filter.value : \"all\"}\r\n          >\r\n           <FormattedMessage id=\"ALL\">\r\n              {txt => <option value=\"all\">{txt}</option>}\r\n            </FormattedMessage>\r\n            {Tableuniquenacionality.map(k => {\r\n              return (\r\n                <option key={k.toString()} value={k}>\r\n                  {k}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        )\r\n      },\r\n      {\r\n        Header: <FormattedMessage id=\"TIME\" />,\r\n        accessor: \"acumulated_time\",\r\n        width:(size>800)?100:70,\r\n        filterable:false,\r\n        sortable:false,\r\n        style: {\r\n          display: \"flex\",\r\n          textAlign: \"Center\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        },\r\n        Cell: row => FormatTime(row.value)\r\n        \r\n      },\r\n      {\r\n        Header: (size>800)?\"Dif 1º\" : \"Dif 1º\",\r\n        width:(size>800)?100:70,\r\n        accessor: \"dif\",\r\n        filterable:false,\r\n        sortable:false,\r\n        style: {\r\n          display: \"flex\",\r\n          textAlign: \"Center\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        },\r\n        Cell: row => FormatTime(row.value)\r\n        },\r\n      {\r\n        Header: (size>800)?<FormattedMessage id=\"FAVORITE\" />:\"FAV\",\r\n        filterable: false,\r\n        sortable:false,\r\n        width:(size>800)?100:50,\r\n        style: {\r\n          display: \"flex\",\r\n          textAlign: \"Center\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        },\r\n        Cell: row => (\r\n          <Favorites ListAthletes={this.props.athleteList} ListaFavoritos={row.original.athlete_id} />\r\n        )\r\n      }\r\n    ];\r\n    return (\r\n      <ReactTable\r\n      defaultSorted={[\r\n        {\r\n          id: \"PositionGlobal\",\r\n          desc: false\r\n        }\r\n      ]}\r\n      previousText={<FormattedMessage id=\"PREVIOUS\" />}\r\n      nextText={<FormattedMessage id=\"NEXT\" />}\r\n        columns={columns}\r\n        data={this.props.athleteList}\r\n        filterable={false}\r\n        noDataText={<FormattedMessage id=\"NODATA\" />}\r\n        defaultPageSize={3}\r\n        showPagination={false}\r\n        showPaginationTop={false}\r\n        showPaginationBottom={false}\r\n        showPageSizeOptions={false}\r\n        showPageJump={true}\r\n        collapseOnSortingChange={true}\r\n        collapseOnPageChange={true}\r\n        collapseOnDataChange={true}\r\n        freezeWhenExpanded={false}\r\n        sortable={false}\r\n        multiSort={true}\r\n        resizable={true}\r\n        defaultSortDesc={false}\r\n        pageText={<FormattedMessage id=\"PAGE\" />}\r\n        rowsText={\"\"}\r\n        className=\"-striped -highlight\"\r\n\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react'\nimport { FormattedMessage } from 'react-intl';\n\nexport default class FasterMale extends Component {\n    render() {\n        //get the faster time\n        let fasterTime = this.props.athleteList.map(athelete => {\n            return athelete.acumulated_time;\n        });\n        //get the faster athlete name\n        let fasterName = this.props.athleteList.map(athelete => {\n            return athelete.name;\n        });\n\n        return (\n\n            <div>\n                {/* Info boxes */}\n                <div className=\"col-md-3 col-sm-6 col-xs-12\">\n                    <div className=\"info-box\">\n                        <span className=\"info-box-icon bg-blue\"><i className=\"fa fa-fw fa-clock-o\" /></span>\n                        <div className=\"info-box-content\">\n                            <span className=\"info-box-text\"><FormattedMessage id=\"FASTER\" /></span>\n                            <span className=\"info-box-text\"> <strong>{fasterName[0]} </strong></span>\n                            <span className=\"info-box-number\"> <small>{fasterTime[0]}</small></span>\n                        </div>\n                        {/* /.info-box-content */}\n                    </div>\n                    {/* /.info-box */}\n                </div>\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from \"react\";\r\nimport Header from \"../structure/Header\";\r\nimport Footer from \"../structure/Footer\";\r\nimport Menu from \"../structure/Menu\";\r\nimport TableWinners from \"../Tables/TableWinners\";\r\nimport WidgetFaster from \"../Widgets/Faster\"\r\nimport Loader from \"../Loader/Loader\";\r\nimport { FormattedMessage} from 'react-intl';\r\n\r\n\r\nconst API_KEY = `${process.env.REACT_APP_API_TRAIL_KEY}`;\r\nconst API_URL = `${process.env.REACT_APP_API_TRAIL_URL}`;\r\nconst TOKEN = API_KEY;\r\nvar size = window.innerWidth;\r\n\r\nexport default class Winners extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            CategoryList: [],\r\n            loadingCategory: false,\r\n            loadingAthlete: false,\r\n            CategoryName: \"Global\",\r\n            Positon: \"PositionGlobal\",\r\n            Gender: \"M\",\r\n            AthleteList: []\r\n        };\r\n        this.GetCategoryList();\r\n        this.GetCategoryList = this.GetCategoryList.bind(this);\r\n\r\n    }\r\n\r\n    StaticElementGlobal() {\r\n        if (this.state.CategoryName === \"Global\") {\r\n            return (<th key=\"Global\" > <a style={{ color: '#37474F' }} onClick={() => this.UpdateStateCheckpoint(\"Global\")} href=\"##\"><FormattedMessage id=\"GERAL\" /></a></th>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <th key=\"Global\" > <a onClick={() => this.UpdateStateCheckpoint(\"Global\")} href=\"##\"><FormattedMessage id=\"GERAL\" /></a></th>\r\n            )\r\n\r\n        }\r\n    }\r\n\r\n    StaticElementGlobalM() {\r\n        if (this.state.CategoryName === \"Global M\") {\r\n            return (<th key=\"GlobalM\" > <a style={{ color: '#37474F' }} onClick={() => this.UpdateStateCheckpoint(\"Global M\")} href=\"##\">{(size>800)? <FormattedMessage id=\"MEN\" />: <i className=\"fa fa-fw fa-male\" /> }</a></th>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <th key=\"GlobalM\" > <a onClick={() => this.UpdateStateCheckpoint(\"Global M\")} href=\"##\">{(size>800)? <FormattedMessage id=\"MEN\" /> : <i className=\"fa fa-fw fa-male\" /> }</a></th>\r\n            )\r\n\r\n        }\r\n    }\r\n    StaticElementGlobalF() {\r\n        if (this.state.CategoryName === \"Global F\") {\r\n            return (\r\n\r\n                <th key=\"GlobalF\" > <a style={{ color: '#37474F' }} onClick={() => this.UpdateStateCheckpoint(\"Global F\")} href=\"##\">{(size>800)? <FormattedMessage id=\"WOMEN\" /> : <i className=\"fa fa-fw fa-female\" /> }</a></th>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n\r\n                <th key=\"GlobalF\" > <a onClick={() => this.UpdateStateCheckpoint(\"Global F\")} href=\"##\">{(size>800)? <FormattedMessage id=\"WOMEN\" /> : <i className=\"fa fa-fw fa-female\" /> }</a></th>\r\n            )\r\n\r\n        }\r\n    }\r\n    /*get Category for the winners*/\r\n    GetCategoryList = async e => {\r\n        const API_CALL = await fetch(`${API_URL}/results/AthsFinalTimeGlobalWithPositions/${this.props.match.params.CompID}/`, {\r\n            headers: new Headers({\r\n                Authorization: TOKEN\r\n            })\r\n        });\r\n        const data = await API_CALL.json();\r\n        const dataSlice = data.slice(0, 3); //Get the 3 winners for the podio\r\n\r\n        //get the category\r\n        let category = data.map(athelete => {\r\n            return athelete.escalao;\r\n        });\r\n        //remove duplicates\r\n        const Tableuniquecategory = [...new Set(category)];\r\n        Tableuniquecategory.sort();\r\n        this.setState({ CategoryList: Tableuniquecategory, AthleteList: dataSlice,  loadingAthlete: true, loadingCategory: true });\r\n    };\r\n    /*get Global winners*/\r\n    GetAthleteListGender = async e => {\r\n        const API_CALL = await fetch(`${API_URL}/results/AthsFinalTimeGenderWithPositions/${this.props.match.params.CompID}/${this.state.Gender}/`, {\r\n            headers: new Headers({\r\n                Authorization: TOKEN\r\n            })\r\n        });\r\n        const data = await API_CALL.json();\r\n        const dataSlice = data.slice(0, 3); //Get the 3 winners for the podio\r\n        this.setState({ AthleteList: dataSlice, loadingAthlete: true });\r\n    };\r\n    /*get Category winners*/\r\n    GetAthleteListCategory = async e => {\r\n        const API_CALL = await fetch(`${API_URL}/results/AthsFinalTimeTierWithPositions/${this.props.match.params.CompID}/${this.state.CategoryName}/`, {\r\n            headers: new Headers({\r\n                Authorization: TOKEN\r\n            })\r\n        });\r\n        const data = await API_CALL.json();\r\n        const dataSlice = data.slice(0, 3); //Get the 3 winners for the podio\r\n        this.setState({ AthleteList: dataSlice, loadingAthlete: true });\r\n    };\r\n    /*props change*/\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.match.params.CompID !== this.props.match.params.CompID) {\r\n            this.setState({ Positon: \"PositionGlobal\", loadingAthlete: false });\r\n            this.GetCategoryList();\r\n            this.UpdateStateCheckpoint(\"Global\");\r\n        }\r\n    }\r\n    /*Check if is global or tier*/\r\n    async UpdateStateCheckpoint(Category) {\r\n        if( Category === \"Global\")\r\n        {\r\n            this.setState({ CategoryName: Category, Positon: \"PositionGlobal\", loadingAthlete: false }, this.GetCategoryList);\r\n        }\r\n        else if (Category === \"Global M\") {\r\n            this.setState({ CategoryName: Category, Positon: \"PositionGender\", Gender: \"M\", loadingAthlete: false }, this.GetAthleteListGender);\r\n        }\r\n        else if (Category === \"Global F\") {\r\n            this.setState({ CategoryName: Category, Positon: \"PositionGender\", Gender: \"F\", loadingAthlete: false }, this.GetAthleteListGender);\r\n        }\r\n        else {\r\n            this.setState({ CategoryName: Category, Positon: \"PositionTier\", loadingAthlete: false }, this.GetAthleteListCategory);\r\n        }\r\n    };\r\n    /*Loadings*/\r\n    LoadingAthlete() {\r\n        if (this.state.loadingAthlete === false) {\r\n            return (\r\n                <section className=\"content\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-xs-12\">\r\n                            <div className=\"box\">\r\n                                {/* /.box-body */}\r\n                                <div className=\"box-body\" style={{ display: 'flex', justifyContent: 'center' }}>\r\n                                    <Loader />\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            )\r\n\r\n        }\r\n        else {\r\n            return (\r\n                <section className=\"content\">\r\n                    <div className=\"row\">\r\n                        {/* widget for the Faster */}\r\n                        <WidgetFaster athleteList={this.state.AthleteList} />\r\n\r\n                    </div>\r\n                    <div\r\n                            style={{\r\n                                padding: \"10px 30px\",\r\n                                background: \"#3c8dbc\",\r\n                                zIndex: 999999,\r\n                                fontSize: 16,\r\n                                fontWeight: 600\r\n                            }}\r\n                        >\r\n                            <table className=\"text-center\"   style={{padding:\"5px\", border:\"5px\", width:\"100%\"}}>\r\n                                {this.LoadingCategory()}\r\n                            </table>\r\n\r\n\r\n                        </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-xs-12\">\r\n                            <div className=\"box box-primary\">\r\n                                {/* /.box-body */}\r\n                                <div className=\"box-body\"></div>\r\n                                <TableWinners\r\n                                    eventID={this.props.match.params.EventID}\r\n                                    competitionID={this.props.match.params.CompID}\r\n                                    athleteList={this.state.AthleteList}\r\n                                    loading={this.state.loading}\r\n                                    position={this.state.Positon}\r\n                                />\r\n\r\n                            </div>\r\n                        </div>\r\n                        {/* /.col */}\r\n                    </div>\r\n                    {/* /.row */}\r\n                </section>\r\n\r\n            )\r\n\r\n        }\r\n\r\n    }\r\n\r\n    LoadingCategory() {\r\n        if (this.state.loadingCategory === false) {\r\n            return (\r\n                <th> <a href=\"##\"><FormattedMessage id=\"LOADING\" /> <i class=\"fa fa-refresh fa-spin\"></i></a></th>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <tbody>\r\n                    <tr>\r\n                                               \r\n                        {this.StaticElementGlobal()}\r\n                        {this.StaticElementGlobalM()}\r\n                        {this.StaticElementGlobalF()}\r\n                        {this.state.CategoryList.map(category => {\r\n                            if (this.state.CategoryName === category) {\r\n                                return (\r\n                                    <th key={category} > <a style={{ color: '#37474F' }} onClick={() => this.UpdateStateCheckpoint(category)} href=\"##\">{category}</a></th>\r\n                                )\r\n                            }\r\n                            else {\r\n                                return (\r\n                                    <th key={category} > <a onClick={() => this.UpdateStateCheckpoint(category)} href=\"##\">{category}</a></th>\r\n                                )\r\n                            }\r\n\r\n                        })}\r\n                    </tr>\r\n                </tbody>\r\n\r\n            )\r\n\r\n        }\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header eventID={this.props.match.params.EventID} />\r\n                {/*Send the event id to the MENU, to get the competition list*/}\r\n                <Menu eventID={this.props.match.params.EventID} competitionID={this.props.match.params.CompID} />\r\n                {/*CONTENT*/}\r\n                <div>\r\n                    {/* Content Wrapper. Contains page content */}\r\n                    <div className=\"content-wrapper\">\r\n                        {/* Content Header (Page header) */}\r\n                        <section className=\"content-header\">\r\n                            <h1>\r\n                                {/* <span style={{ float: \"right\" }}> {this.state.CategoryName} </span>*/}\r\n                                <span> {this.props.match.params.CompName} </span>\r\n                            </h1>\r\n                        </section>\r\n                        {/* Main content */}\r\n                        {this.LoadingAthlete()}\r\n                    </div>\r\n                    {/* /.content-wrapper */}\r\n                </div>\r\n                <Footer eventID={this.props.match.params.EventID} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport ReactTable from \"react-table\";\r\nimport {FormatTime} from \"../Scripts/time\"\r\nimport { calculatePagination } from \"../Scripts/PaginationHelper\"\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nvar size = window.innerWidth;\r\n\r\n\r\nexport default class TableTier extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: this.props.loading\r\n    };\r\n  }\r\n\r\n  CheckSize() {\r\n    if (size > 800) {\r\n      return true;\r\n    }\r\n    else {\r\n      return false;\r\n    }}\r\n    checkPosition(position){\r\n      if (0=== parseInt(position))\r\n      {\r\n        return(\"-\")\r\n      }\r\n      else\r\n      {\r\n        return(position)\r\n  \r\n      }\r\n    }\r\n\r\n  CalculateKMperH(checkpointName,time){\r\n    var distance\r\n    this.props.checkpoint.map(checkpoint =>{\r\n      if(checkpoint.checkpoint.local===checkpointName){\r\n        distance=checkpoint.distancia_acumulada\r\n      }\r\n      return null\r\n    })\r\n    var km=distance/1000;\r\n    var TimeSplit= time.split(\":\")\r\n    var H=TimeSplit[0]\r\n    var M=TimeSplit[1]\r\n    var S=TimeSplit[2]\r\n    var finaltime=parseFloat(H)+parseFloat((M/60))+parseFloat((S/3600))\r\n    var KMperH=parseFloat(km)/parseFloat(finaltime)\r\n    if(isNaN(KMperH))\r\n    {\r\n      KMperH=0;\r\n    }\r\n  return(KMperH.toFixed(2))\r\n  }\r\n\r\n  CalculateMINperKM(checkpointName,time){\r\n    var MInperKM = parseFloat(60/this.CalculateKMperH(checkpointName,time))\r\n    if(!isFinite(MInperKM))\r\n    {\r\n      MInperKM=0;\r\n    }\r\n  return(MInperKM.toFixed(2));\r\n\r\n\r\n  }\r\n\r\n  getDistance(checkpointName){\r\n    var distance\r\n\r\n    this.props.checkpoint.map(checkpoint =>{\r\n      if(checkpoint.checkpoint.local===checkpointName){\r\n        distance=checkpoint.distancia_acumulada\r\n      }\r\n      return null\r\n    })\r\n    distance=parseFloat(distance/1000);\r\n    return(distance.toFixed(2)+\" km\")\r\n\r\n  }\r\n  getaltitude(checkpointName){\r\n    var Altitude\r\n\r\n    this.props.checkpoint.map(checkpoint =>{\r\n      if(checkpoint.checkpoint.local===checkpointName){\r\n        Altitude=checkpoint.checkpoint.altitude\r\n      }\r\n      return null\r\n    })\r\n    return(Altitude+\" m\")\r\n\r\n  }\r\n  render() {\r\n    //Info for the filters\r\n\r\n\r\n    //Table\r\n    const columns = [\r\n      {\r\n        Header: \"Id\",\r\n        accessor: \"athlete_id\",\r\n        sortable: false,\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        show: false\r\n      },\r\n      {\r\n        Header: (size>800)?<FormattedMessage id=\"POSITION\" />:\"POS\",\r\n        width:(size>800)?100:50,\r\n\r\n        accessor: \"PositionTier\",\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Cell: row => (\r\n          <span> {this.checkPosition(row.value)} </span>\r\n        ),\r\n\r\n      },\r\n      {\r\n        Header: <FormattedMessage id=\"PLACE\" />,\r\n        accessor: \"local\",\r\n        filterable: false,\r\n        sortable: false,\r\n\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Cell: row => row.value\r\n\r\n      },\r\n      {\r\n        Header: <FormattedMessage id=\"TIME\" />,\r\n        accessor: \"acumulated_time\",\r\n        filterable: false,\r\n        sortable: false,\r\n\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Cell: row => FormatTime(row.value)\r\n\r\n      },\r\n      {\r\n        Header:  \"Dif 1º\" ,\r\n        accessor: \"dif\",\r\n        filterable: false,\r\n        sortable: false,\r\n\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Cell: row => FormatTime(row.value)\r\n      },\r\n      {\r\n        Header: <FormattedMessage id=\"HEIGHT\" />,\r\n        filterable: false,\r\n        sortable: false,\r\n        show : this.CheckSize(),\r\n\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Cell: row => this.getaltitude(row.original.local)\r\n      },\r\n      {\r\n        Header: <FormattedMessage id=\"DISTANCE\" />,\r\n        filterable: false,\r\n        sortable: false,\r\n        show : this.CheckSize(),\r\n\r\n\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Cell: row => this.getDistance(row.original.local)\r\n      },\r\n      {\r\n        Header: \"KM/H\",\r\n        filterable: false,\r\n        sortable: false,\r\n        width:(size>800)?100:70,\r\n\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Cell: row => this.CalculateKMperH(row.original.local,row.original.acumulated_time)\r\n      },\r\n      {\r\n        Header: \"MIN/KM\",\r\n        filterable: false,\r\n        sortable: false,\r\n        width:(size>800)?100:70,\r\n\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Cell: row => this.CalculateMINperKM(row.original.local,row.original.acumulated_time)\r\n      }\r\n    ];\r\n    return (\r\n      <ReactTable\r\n        columns={columns}\r\n        data={this.props.athleteList}\r\n        filterable={false}\r\n        noDataText={<FormattedMessage id=\"NODATA\" />}\r\n        defaultPageSize={parseInt(this.props.athleteList.length)}\r\n        showPagination={false}\r\n        showPaginationTop={false}\r\n        showPaginationBottom={false}\r\n        showPageSizeOptions={false}\r\n        showPageJump={false}\r\n        collapseOnSortingChange={true}\r\n        collapseOnPageChange={true}\r\n        collapseOnDataChange={true}\r\n        freezeWhenExpanded={false}\r\n        sortable={false}\r\n        multiSort={false}\r\n        resizable={true}\r\n        defaultSortDesc={false}\r\n        pageText={<FormattedMessage id=\"PAGE\" />}\r\n        rowsText={\"\"}\r\n        className=\"-striped -highlight\"\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport ReactTable from \"react-table\";\r\nimport {FormatTime} from \"../Scripts/time\"\r\nimport { calculatePagination } from \"../Scripts/PaginationHelper\"\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nvar size = window.innerWidth;\r\n\r\n\r\nexport default class TableGlobal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: this.props.loading\r\n    };\r\n  }\r\n\r\n  CheckSize() {\r\n    if (size > 800) {\r\n      return true;\r\n    }\r\n    else {\r\n      return false;\r\n    }}\r\n    checkPosition(position){\r\n      if (0=== parseInt(position))\r\n      {\r\n        return(\"-\")\r\n      }\r\n      else\r\n      {\r\n        return(position)\r\n  \r\n      }\r\n    }\r\n\r\n  CalculateKMperH(checkpointName,time){\r\n    var distance\r\n    this.props.checkpoint.map(checkpoint =>{\r\n      if(checkpoint.checkpoint.local===checkpointName){\r\n        distance=checkpoint.distancia_acumulada\r\n      }\r\n      return null\r\n    })\r\n    var km=distance/1000;\r\n    var TimeSplit= time.split(\":\")\r\n    var H=TimeSplit[0]\r\n    var M=TimeSplit[1]\r\n    var S=TimeSplit[2]\r\n    var finaltime=parseFloat(H)+parseFloat((M/60))+parseFloat((S/3600))\r\n    var KMperH=parseFloat(km)/parseFloat(finaltime)\r\n    if(isNaN(KMperH))\r\n    {\r\n      KMperH=0;\r\n    }\r\n  return(KMperH.toFixed(2))\r\n  }\r\n\r\n  CalculateMINperKM(checkpointName,time){\r\n    var MInperKM = parseFloat(60/this.CalculateKMperH(checkpointName,time))\r\n    if(!isFinite(MInperKM))\r\n    {\r\n      MInperKM=0;\r\n    }\r\n  return(MInperKM.toFixed(2));\r\n\r\n\r\n  }\r\n\r\n  getDistance(checkpointName){\r\n    var distance\r\n\r\n    this.props.checkpoint.map(checkpoint =>{\r\n      if(checkpoint.checkpoint.local===checkpointName){\r\n        distance=checkpoint.distancia_acumulada\r\n      }\r\n      return null\r\n    })\r\n    distance=parseFloat(distance/1000);\r\n    return(distance.toFixed(2)+\" km\")\r\n\r\n  }\r\n  getaltitude(checkpointName){\r\n    var Altitude\r\n\r\n    this.props.checkpoint.map(checkpoint =>{\r\n      if(checkpoint.checkpoint.local===checkpointName){\r\n        Altitude=checkpoint.checkpoint.altitude\r\n      }\r\n      return null\r\n    })\r\n    return(Altitude+\" m\")\r\n\r\n  }\r\n  render() {\r\n    //Info for the filters\r\n\r\n\r\n    //Table\r\n    const columns = [\r\n      {\r\n        Header: \"Id\",\r\n        accessor: \"athlete_id\",\r\n        sortable: false,\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        show: false\r\n      },\r\n      {\r\n        Header: (size>800)?<FormattedMessage id=\"POSITION\" />:\"POS\",\r\n        width:(size>800)?100:50,\r\n\r\n        accessor: \"PositionGlobal\",\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Cell: row => (\r\n          <span> {this.checkPosition(row.value)} </span>\r\n        ),\r\n\r\n      },\r\n      {\r\n        Header: <FormattedMessage id=\"PLACE\" />,\r\n        accessor: \"local\",\r\n        filterable: false,\r\n        sortable: false,\r\n\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Cell: row => row.value\r\n\r\n      },\r\n      {\r\n        Header: <FormattedMessage id=\"TIME\" />,\r\n        accessor: \"acumulated_time\",\r\n        filterable: false,\r\n        sortable: false,\r\n\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Cell: row => FormatTime(row.value)\r\n\r\n      },\r\n      {\r\n        Header:  \"Dif 1º\" ,\r\n        accessor: \"dif\",\r\n        filterable: false,\r\n        sortable: false,\r\n\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Cell: row => FormatTime(row.value)\r\n      },\r\n      {\r\n        Header: <FormattedMessage id=\"HEIGHT\" />,\r\n        filterable: false,\r\n        sortable: false,\r\n        show : this.CheckSize(),\r\n\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Cell: row => this.getaltitude(row.original.local)\r\n      },\r\n      {\r\n        Header: <FormattedMessage id=\"DISTANCE\" />,\r\n        filterable: false,\r\n        sortable: false,\r\n        show : this.CheckSize(),\r\n\r\n\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Cell: row => this.getDistance(row.original.local)\r\n      },\r\n      {\r\n        Header: \"KM/H\",\r\n        filterable: false,\r\n        sortable: false,\r\n        width:(size>800)?100:70,\r\n\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Cell: row => this.CalculateKMperH(row.original.local,row.original.acumulated_time)\r\n      },\r\n      {\r\n        Header: \"MIN/KM\",\r\n        filterable: false,\r\n        sortable: false,\r\n        width:(size>800)?100:70,\r\n\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Cell: row => this.CalculateMINperKM(row.original.local,row.original.acumulated_time)\r\n      }\r\n    ];\r\n    return (\r\n      <ReactTable\r\n        columns={columns}\r\n        data={this.props.athleteList}\r\n        filterable={false}\r\n        noDataText={<FormattedMessage id=\"NODATA\" />}\r\n        defaultPageSize={parseInt(this.props.athleteList.length)}\r\n        showPagination={false}\r\n        showPaginationTop={false}\r\n        showPaginationBottom={false}\r\n        showPageSizeOptions={false}\r\n        showPageJump={false}\r\n        collapseOnSortingChange={true}\r\n        collapseOnPageChange={true}\r\n        collapseOnDataChange={true}\r\n        freezeWhenExpanded={false}\r\n        sortable={false}\r\n        multiSort={false}\r\n        resizable={true}\r\n        defaultSortDesc={false}\r\n        pageText={<FormattedMessage id=\"PAGE\" />}\r\n        rowsText={\"\"}\r\n        className=\"-striped -highlight\"\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport ReactTable from \"react-table\";\r\nimport {FormatTime} from \"../Scripts/time\"\r\nimport { calculatePagination } from \"../Scripts/PaginationHelper\"\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nvar size = window.innerWidth;\r\n\r\n\r\nexport default class TableGender extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: this.props.loading\r\n    };\r\n  }\r\n\r\n  CheckSize() {\r\n    if (size > 800) {\r\n      return true;\r\n    }\r\n    else {\r\n      return false;\r\n    }}\r\n    checkPosition(position){\r\n      if (0=== parseInt(position))\r\n      {\r\n        return(\"-\")\r\n      }\r\n      else\r\n      {\r\n        return(position)\r\n  \r\n      }\r\n    }\r\n\r\n  CalculateKMperH(checkpointName,time){\r\n    var distance\r\n    this.props.checkpoint.map(checkpoint =>{\r\n      if(checkpoint.checkpoint.local===checkpointName){\r\n        distance=checkpoint.distancia_acumulada\r\n      }\r\n      return null\r\n    })\r\n    var km=distance/1000;\r\n    var TimeSplit= time.split(\":\")\r\n    var H=TimeSplit[0]\r\n    var M=TimeSplit[1]\r\n    var S=TimeSplit[2]\r\n    var finaltime=parseFloat(H)+parseFloat((M/60))+parseFloat((S/3600))\r\n    var KMperH=parseFloat(km)/parseFloat(finaltime)\r\n    if(isNaN(KMperH))\r\n    {\r\n      KMperH=0;\r\n    }\r\n  return(KMperH.toFixed(2))\r\n  }\r\n\r\n  CalculateMINperKM(checkpointName,time){\r\n    var MInperKM = parseFloat(60/this.CalculateKMperH(checkpointName,time))\r\n    if(!isFinite(MInperKM))\r\n    {\r\n      MInperKM=0;\r\n    }\r\n  return(MInperKM.toFixed(2));\r\n\r\n\r\n  }\r\n\r\n  getDistance(checkpointName){\r\n    var distance\r\n\r\n    this.props.checkpoint.map(checkpoint =>{\r\n      if(checkpoint.checkpoint.local===checkpointName){\r\n        distance=checkpoint.distancia_acumulada\r\n      }\r\n      return null\r\n    })\r\n    distance=parseFloat(distance/1000);\r\n    return(distance.toFixed(2)+\" km\")\r\n\r\n  }\r\n  getaltitude(checkpointName){\r\n    var Altitude\r\n\r\n    this.props.checkpoint.map(checkpoint =>{\r\n      if(checkpoint.checkpoint.local===checkpointName){\r\n        Altitude=checkpoint.checkpoint.altitude\r\n      }\r\n      return null\r\n    })\r\n    return(Altitude+\" m\")\r\n\r\n  }\r\n  render() {\r\n    //Info for the filters\r\n\r\n\r\n    //Table\r\n    const columns = [\r\n      {\r\n        Header: \"Id\",\r\n        accessor: \"athlete_id\",\r\n        sortable: false,\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        show: false\r\n      },\r\n      {\r\n        Header: (size>800)?<FormattedMessage id=\"POSITION\" />:\"POS\",\r\n        width:(size>800)?100:50,\r\n\r\n        accessor: \"PositionGender\",\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Cell: row => (\r\n          <span> {this.checkPosition(row.value)} </span>\r\n        ),\r\n\r\n      },\r\n      {\r\n        Header: <FormattedMessage id=\"PLACE\" />,\r\n        accessor: \"local\",\r\n        filterable: false,\r\n        sortable: false,\r\n\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Cell: row => row.value\r\n\r\n      },\r\n      {\r\n        Header: <FormattedMessage id=\"TIME\" />,\r\n        accessor: \"acumulated_time\",\r\n        filterable: false,\r\n        sortable: false,\r\n\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Cell: row => FormatTime(row.value)\r\n\r\n      },\r\n      {\r\n        Header:  \"Dif 1º\" ,\r\n        accessor: \"dif\",\r\n        filterable: false,\r\n        sortable: false,\r\n\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Cell: row => FormatTime(row.value)\r\n      },\r\n      {\r\n        Header: <FormattedMessage id=\"HEIGHT\" />,\r\n        filterable: false,\r\n        sortable: false,\r\n        show : this.CheckSize(),\r\n\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Cell: row => this.getaltitude(row.original.local)\r\n      },\r\n      {\r\n        Header: <FormattedMessage id=\"DISTANCE\" />,\r\n        filterable: false,\r\n        sortable: false,\r\n        show : this.CheckSize(),\r\n\r\n\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Cell: row => this.getDistance(row.original.local)\r\n      },\r\n      {\r\n        Header: \"KM/H\",\r\n        filterable: false,\r\n        sortable: false,\r\n        width:(size>800)?100:70,\r\n\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Cell: row => this.CalculateKMperH(row.original.local,row.original.acumulated_time)\r\n      },\r\n      {\r\n        Header: \"MIN/KM\",\r\n        filterable: false,\r\n        sortable: false,\r\n        width:(size>800)?100:70,\r\n\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Cell: row => this.CalculateMINperKM(row.original.local,row.original.acumulated_time)\r\n      }\r\n    ];\r\n    return (\r\n      <ReactTable\r\n        columns={columns}\r\n        data={this.props.athleteList}\r\n        filterable={false}\r\n        noDataText={<FormattedMessage id=\"NODATA\" />}\r\n        defaultPageSize={parseInt(this.props.athleteList.length)}\r\n        showPagination={false}\r\n        showPaginationTop={false}\r\n        showPaginationBottom={false}\r\n        showPageSizeOptions={false}\r\n        showPageJump={false}\r\n        collapseOnSortingChange={true}\r\n        collapseOnPageChange={true}\r\n        collapseOnDataChange={true}\r\n        freezeWhenExpanded={false}\r\n        sortable={false}\r\n        multiSort={false}\r\n        resizable={true}\r\n        defaultSortDesc={false}\r\n        pageText={<FormattedMessage id=\"PAGE\" />}\r\n        rowsText={\"\"}\r\n        className=\"-striped -highlight\"\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react'\nimport { FormattedMessage } from 'react-intl';\n\nexport default class PositionGlobal extends Component {\n    render() {\n        return (\n            <div>\n                {/* Info boxes */}\n                <div className=\"col-md-3 col-sm-6 col-xs-12\">\n                    <div className=\"info-box\">\n                        <span className={`info-box-icon bg-${this.props.color}`}><i className=\"ion ion-ios-people-outline\" /></span>\n                        <div className=\"info-box-content\">\n                            <span className=\"info-box-text\"><FormattedMessage id=\"GERAL\" />: <strong>{this.props.positionGlobal}</strong></span>\n                            <span className=\"info-box-text\"><FormattedMessage id=\"CATEGORY\" />: <strong>{this.props.positionTier}</strong></span>\n                            <span className=\"info-box-text\"><FormattedMessage id=\"GENDER\" />: <strong>{this.props.positionGender}</strong></span>\n                        </div>\n                        {/* /.info-box-content */}\n                    </div>\n                    {/* /.info-box */}\n                </div>\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\r\n\r\nexport default class FasterMale extends Component {\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div>\r\n                {/* Info boxes */}\r\n                <div className=\"col-md-3 col-sm-6 col-xs-12\">\r\n                    <div className=\"info-box\">\r\n                        <span className={`info-box-icon bg-${this.props.color}`}><i className=\"fa fa-refresh fa-spin\" /></span>\r\n                        <div className=\"info-box-content\">\r\n                            <span className=\"info-box-text\">{this.props.text}</span>\r\n                        </div>\r\n                        {/* /.info-box-content */}\r\n                    </div>\r\n                    {/* /.info-box */}\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\n\nexport default class PositionGlobal extends Component {\n    render() {\n        return (\n            <div>\n                {/* Info boxes */}\n                <div className=\"col-md-3 col-sm-6 col-xs-12\">\n                    <div className=\"info-box\">\n                        <span className={`info-box-icon bg-${this.props.color}`}><i className=\"fa fa-fw fa-clock-o\" /></span>\n                        <div className=\"info-box-content\">\n                            <span className=\"info-box-text\">{this.props.name}</span>\n                            <span className=\"info-box-number\">{this.props.time}</span>\n                        </div>\n                        {/* /.info-box-content */}\n                    </div>\n                    {/* /.info-box */}\n                </div>\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class velocity extends Component {\n    render() {\n        return (\n            <div>\n            {/* Info boxes */}\n            <div className=\"col-md-3 col-sm-6 col-xs-12\">\n                <div className=\"info-box\">\n                    <span className={`info-box-icon bg-${this.props.color}`}><i className=\"fa fa-dashboard\" /></span>\n                    <div className=\"info-box-content\">\n                        <span className=\"info-box-text\">{this.props.name}</span>\n                        <span className=\"info-box-number\">{this.props.speedKM}</span>\n                        <span className=\"info-box-number\">{this.props.speedMIN}</span>\n\n                    </div>\n                    {/* /.info-box-content */}\n                </div>\n                {/* /.info-box */}\n            </div>\n\n        </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { FormattedMessage } from 'react-intl';\n\nexport default class LastPlace extends Component {\n    render() {\n        return (\n\n            <div>\n                {/* Info boxes */}\n                <div className=\"col-md-3 col-sm-6 col-xs-12\">\n                    <div className=\"info-box\">\n                        <span className={`info-box-icon bg-${this.props.color}`}><i className=\"fa fa-fw fa-map-signs\" /></span>\n                        <div className=\"info-box-content\">\n                            <span className=\"info-box-text\"><FormattedMessage id=\"LAST_POINT\" /></span>\n                            <span className=\"info-box-number\">{this.props.place}</span>\n                        </div>\n                        {/* /.info-box-content */}\n                    </div>\n                    {/* /.info-box */}\n                </div>\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\r\nimport Header from \"../structure/Header\";\r\nimport Footer from \"../structure/Footer\";\r\nimport Menu from \"../structure/Menu\";\r\nimport TableTier from \"../Tables/TableTier\"\r\nimport TableGlobal from \"../Tables/TableGlobal\"\r\nimport TableGender from \"../Tables/TableGender\"\r\nimport Loader from \"../Loader/Loader\";\r\nimport ChartVelocity from \"../Chart/Velocity\"\r\nimport ChartPosition from \"../Chart/Position\"\r\nimport PositonWidget from \"../Widgets/Position\"\r\nimport LoadingWidget from \"../Widgets/Loading\"\r\nimport TimeWidget from '../Widgets/Time'\r\nimport VelocityWidget from '../Widgets/velocity';\r\nimport PlaceWidget from '../Widgets/LastPlace';\r\nimport FavoriteChecker from \"../favorites/favoritesChecker\"\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nconst API_KEY = `${process.env.REACT_APP_API_TRAIL_KEY}`;\r\nconst API_URL = `${process.env.REACT_APP_API_TRAIL_URL}`;\r\nconst TOKEN = API_KEY;\r\nconst MICROSERVICE_PDFS = `${process.env.REACT_APP_PUBLIC_MICROSERVICE_PDFS}`;\r\n\r\n//for the charts\r\nvar arrayGlobal = [];\r\nvar arrayGender = [];\r\nvar arrayTier = [];\r\nvar arrayFaster = [];\r\nvar LastCheckpointID = 0;\r\nvar Faster = [];\r\nvar FasterID = 0;\r\nexport default class AthleteDetail extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loadingGlobal: false,\r\n            loadingTier: false,\r\n            loadingGender: false,\r\n            loadingCheckpoint: false,\r\n            loadingList: false,\r\n            loadingFaster: false,\r\n            ListGlobal: [],\r\n            ListTier: [],\r\n            ListGender: [],\r\n            ListFaster: [],\r\n            PersonalInfo: [],\r\n            athleteList: [],\r\n            athleteListStatus: [],\r\n            CheckpointInfo: [],\r\n            AthleteID: this.props.match.params.AthleteID,\r\n        };\r\n\r\n    }\r\n\r\n    componentWillMount() {\r\n        //CACHES\r\n        try {\r\n            if (localStorage.getItem(`ListGlobal${this.props.match.params.EventID}${this.props.match.params.AthleteID}`)) {\r\n                const ListGlobal = JSON.parse(localStorage.getItem(`ListGlobal${this.props.match.params.EventID}${this.props.match.params.AthleteID}`))\r\n                this.setState({ ListGlobal: ListGlobal, loadingGlobal: true })\r\n            }\r\n            if (localStorage.getItem(`PersonalInfo${this.props.match.params.EventID}${this.props.match.params.AthleteID}`)) {\r\n                const PersonalInfo = JSON.parse(localStorage.getItem(`PersonalInfo${this.props.match.params.EventID}${this.props.match.params.AthleteID}`))\r\n                this.setState({ PersonalInfo: PersonalInfo })\r\n            }\r\n            if (localStorage.getItem(`ListFaster${this.props.match.params.CompID}${this.props.match.params.FasterID}`)) {\r\n                const ListFaster = JSON.parse(localStorage.getItem(`ListFaster${this.props.match.params.CompID}${this.props.match.params.FasterID}`))\r\n                this.setState({ ListFaster: ListFaster, loadingFaster: true })\r\n            }\r\n            if (localStorage.getItem(`ListTier${this.props.match.params.CompID}${this.props.match.params.AthleteID}`)) {\r\n                const ListTier = JSON.parse(localStorage.getItem(`ListTier${this.props.match.params.CompID}${this.props.match.params.AthleteID}`))\r\n                this.setState({ ListTier: ListTier, loadingTier: true })\r\n            }\r\n            if (localStorage.getItem(`ListGender${this.props.match.params.CompID}${this.props.match.params.AthleteID}`)) {\r\n                const ListGender = JSON.parse(localStorage.getItem(`ListGender${this.props.match.params.CompID}${this.props.match.params.AthleteID}`))\r\n                this.setState({ ListGender: ListGender, loadingGender: true })\r\n            }\r\n            if (localStorage.getItem(`CheckpointInfo${this.props.match.params.CompID}`)) {\r\n                const CheckpointInfo = JSON.parse(localStorage.getItem(`CheckpointInfo${this.props.match.params.CompID}`))\r\n                this.setState({ CheckpointInfo: CheckpointInfo, loadingCheckpoint: true })\r\n            }\r\n            if (localStorage.getItem(`athleteListStatus${this.props.match.params.CompID}${this.props.match.params.AthleteID}`)) {\r\n                const athleteListStatus = JSON.parse(localStorage.getItem(`athleteListStatus${this.props.match.params.CompID}${this.props.match.params.AthleteID}`))\r\n                this.setState({ athleteListStatus: athleteListStatus, loadingList: true })\r\n            }\r\n            if (localStorage.getItem(`Faster${this.props.match.params.CompID}${LastCheckpointID}`)) {\r\n                const data = JSON.parse(localStorage.getItem(`Faster${this.props.match.params.CompID}${LastCheckpointID}`))\r\n                Faster = data\r\n            }\r\n        }\r\n        catch{\r\n\r\n        }\r\n\r\n        //END CACHE\r\n\r\n        this.GetListGlobal();\r\n        this.GetListTier();\r\n        this.GetListGender();\r\n        this.GetCheckpointInfo();\r\n        this.GetFaster();\r\n\r\n    }\r\n\r\n    GetListGlobal = async e => {\r\n        const API_CALL = await fetch(`${API_URL}/results/AthTimesGlobalWithPositions/${this.props.match.params.CompID}/${this.props.match.params.AthleteID}/`, {\r\n            headers: new Headers({\r\n                Authorization: TOKEN\r\n            })\r\n        });\r\n        const data = await API_CALL.json();\r\n        const dataSlice = data.slice(0, 1); //Get the personal info\r\n        try {\r\n            localStorage.setItem(`ListGlobal${this.props.match.params.EventID}${this.props.match.params.AthleteID}`, JSON.stringify(data))\r\n            localStorage.setItem(`PersonalInfo${this.props.match.params.EventID}${this.props.match.params.AthleteID}`, JSON.stringify(dataSlice))\r\n        }\r\n        catch{\r\n            localStorage.clear();\r\n        }\r\n        this.setState({ ListGlobal: data, loadingGlobal: true, PersonalInfo: dataSlice });\r\n    };\r\n\r\n    GetListGlobalFaster = async e => {\r\n        if (FasterID !== 0) {\r\n            const API_CALL = await fetch(`${API_URL}/results/AthTimesGlobalWithPositions/${this.props.match.params.CompID}/${FasterID}/`, {\r\n                headers: new Headers({\r\n                    Authorization: TOKEN\r\n                })\r\n            });\r\n            const data = await API_CALL.json();\r\n            try {\r\n                localStorage.setItem(`ListFaster${this.props.match.params.CompID}${this.props.match.params.FasterID}`, JSON.stringify(data))\r\n            }\r\n            catch{\r\n                localStorage.clear();\r\n            }\r\n            this.setState({ ListFaster: data, loadingFaster: true });\r\n        }\r\n\r\n    };\r\n\r\n    GetListTier = async e => {\r\n        const API_CALL = await fetch(`${API_URL}/results/AthTimeTierWithPositions/${this.props.match.params.CompID}/${this.props.match.params.AthleteID}/`, {\r\n            headers: new Headers({\r\n                Authorization: TOKEN\r\n            })\r\n        });\r\n        const data = await API_CALL.json();\r\n        try {\r\n            localStorage.setItem(`ListTier${this.props.match.params.CompID}${this.props.match.params.AthleteID}`, JSON.stringify(data))\r\n        }\r\n        catch{\r\n            localStorage.clear();\r\n        }\r\n        this.setState({ ListTier: data, loadingTier: true });\r\n    };\r\n\r\n    GetListGender = async e => {\r\n        const API_CALL = await fetch(`${API_URL}/results/AthTimeGenderWithPositions/${this.props.match.params.CompID}/${this.props.match.params.AthleteID}/`, {\r\n            headers: new Headers({\r\n                Authorization: TOKEN\r\n            })\r\n        });\r\n        const data = await API_CALL.json();\r\n        try {\r\n\r\n            localStorage.setItem(`ListGender${this.props.match.params.CompID}${this.props.match.params.AthleteID}`, JSON.stringify(data))\r\n        }\r\n        catch{\r\n            localStorage.clear();\r\n        }\r\n        this.setState({ ListGender: data, loadingGender: true });\r\n    };\r\n\r\n    GetCheckpointInfo = async e => {\r\n        const API_CALL = await fetch(`${API_URL}/competition/Checkpoints/${this.props.match.params.CompID}/`, {\r\n            headers: new Headers({\r\n                Authorization: TOKEN\r\n            })\r\n        });\r\n        const data = await API_CALL.json();\r\n        try {\r\n            localStorage.setItem(`CheckpointInfo${this.props.match.params.CompID}`, JSON.stringify(data))\r\n\r\n        }\r\n        catch{\r\n            localStorage.clear();\r\n        }\r\n        this.setState({ CheckpointInfo: data, loadingCheckpoint: true });\r\n    };\r\n\r\n    getAthletsList = async e => {\r\n\r\n        const API_CALL = await fetch(`${API_URL}/competition/AthInfo/${this.props.match.params.CompID}/${this.props.match.params.AthleteID}/`, {\r\n            headers: new Headers({\r\n                Authorization: TOKEN\r\n            })\r\n        });\r\n        const data = await API_CALL.json();\r\n        data.map(Athlete => {\r\n            if (Athlete.athlete.athlete_id === parseInt(this.state.AthleteID)) {\r\n                try {\r\n                    localStorage.setItem(`athleteListStatus${this.props.match.params.CompID}${this.props.match.params.AthleteID}`, JSON.stringify(Athlete))\r\n                }\r\n                catch{\r\n                    localStorage.clear();\r\n\r\n                }\r\n                this.setState({ athleteListStatus: Athlete, loadingList: true });\r\n            }\r\n            return null;\r\n\r\n        })\r\n\r\n    };\r\n\r\n    GetFaster = async e => {\r\n        if (LastCheckpointID !== 0) {\r\n            const API_CALL = await fetch(`${API_URL}/results/AthFasterTimeWithGlobalPositions/${this.props.match.params.CompID}/${LastCheckpointID}/`, {\r\n                headers: new Headers({\r\n                    Authorization: TOKEN\r\n                })\r\n            });\r\n            const data = await API_CALL.json();\r\n            if (data.length > 0) {\r\n                try {\r\n                    localStorage.setItem(`Faster${this.props.match.params.CompID}${LastCheckpointID}`, JSON.stringify(data))\r\n                }\r\n                catch{\r\n                    localStorage.clear();\r\n\r\n                }\r\n                Faster = data;\r\n                this.getFasterTimes();\r\n            }\r\n        }\r\n    };\r\n\r\n    PopulateArrays() {\r\n        arrayTier = [];\r\n        this.state.ListTier.map(list => list.map(Listinside => arrayTier.push(Listinside)))\r\n        arrayGender = [];\r\n        this.state.ListGender.map(list => list.map(Listinside => arrayGender.push(Listinside)))\r\n        arrayGlobal = [];\r\n        this.state.ListGlobal.map(list => list.map(Listinside => arrayGlobal.push(Listinside)))\r\n        this.getLastCheckpoint();\r\n        arrayFaster = [];\r\n        this.state.ListFaster.map(list => list.map(Listinside => arrayFaster.push(Listinside)))\r\n    }\r\n\r\n    tableTier() {\r\n        if (this.state.loadingTier === false) {\r\n            return (<Loader />)\r\n        } else {\r\n            if (arrayTier.length > 0) {\r\n                return (\r\n                    <TableTier athleteList={arrayTier} checkpoint={this.state.CheckpointInfo} />\r\n                )\r\n            }\r\n            else {\r\n                return (\r\n                    <p style={{ textAlign: \"center\" }}><FormattedMessage id=\"NODATA\" /> </p>)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    tableGender() {\r\n        if (this.state.loadingGender === false) {\r\n            return (<Loader />)\r\n\r\n        } else {\r\n            if (arrayGender.length > 0) {\r\n                return (\r\n                    <TableGender athleteList={arrayGender} checkpoint={this.state.CheckpointInfo} />\r\n                )\r\n            }\r\n            else {\r\n                return (<p style={{ textAlign: \"center\" }}><FormattedMessage id=\"NODATA\" /></p>)\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    tableGlobal() {\r\n        if (this.state.loadingGlobal === false) {\r\n            return (<Loader />)\r\n        } else {\r\n            if (arrayGlobal.length > 0) {\r\n                //Calculate the data for the arrays\r\n                return (\r\n                    <TableGlobal athleteList={arrayGlobal} checkpoint={this.state.CheckpointInfo} />\r\n                )\r\n            }\r\n            else {\r\n                return (<p style={{ textAlign: \"center\" }}><FormattedMessage id=\"NODATA\" /></p>)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    ChartVelocityKMRender() {\r\n        if (this.state.loadingFaster === false) {\r\n            return (<Loader />)\r\n        } else {\r\n            if (this.state.athleteListStatus.inscription_status_code === \"FIN\" || this.state.athleteListStatus.inscription_status_code === \"EP\") {\r\n                if (arrayGlobal.length > 0 && !!(this.state.athleteListStatus.athlete.name)) {\r\n                    return (\r\n\r\n                        <ChartVelocity checkpoint={arrayGlobal} Name={this.state.athleteListStatus.athlete.name} Faster={arrayFaster.map(data => this.CalculateKMperH(data.local, data.acumulated_time))} Normal={arrayGlobal.map(data => this.CalculateKMperH(data.local, data.acumulated_time))} />\r\n                    )\r\n                }\r\n                else {\r\n                    return (<p><FormattedMessage id=\"NODATA\" /></p>)\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n\r\n    ChartVelocityMINRender() {\r\n        if (this.state.loadingFaster === false) {\r\n            return (<Loader />)\r\n        } else {\r\n            if (this.state.athleteListStatus.inscription_status_code === \"FIN\" || this.state.athleteListStatus.inscription_status_code === \"EP\") {\r\n                if (arrayGlobal.length > 0 && !!(this.state.athleteListStatus.athlete.name)) {\r\n                    return (\r\n\r\n                        <ChartVelocity checkpoint={arrayGlobal} Name={this.state.athleteListStatus.athlete.name} Faster={arrayFaster.map(data => this.CalculateMINperKM(data.local, data.acumulated_time))} Normal={arrayGlobal.map(data => this.CalculateMINperKM(data.local, data.acumulated_time))} />\r\n                    )\r\n                }\r\n                else {\r\n                    return (<p><FormattedMessage id=\"NODATA\" /></p>)\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n\r\n    ChartPositionRender() {\r\n        if (this.state.loadingGlobal === false && this.state.loadingFaster === false) {\r\n            return (<Loader />)\r\n        } else {\r\n            if (this.state.athleteListStatus.inscription_status_code === \"FIN\" || this.state.athleteListStatus.inscription_status_code === \"EP\") {\r\n                if (arrayGlobal.length > 0 && arrayGender.length > 0 && arrayTier.length > 0) {\r\n                    //Calculate the data for the arrays\r\n                    var global = []\r\n                    var Tier = []\r\n                    var gender = []\r\n\r\n                    arrayGlobal.map(data => global.push(data.PositionGlobal))\r\n                    arrayTier.map(data => Tier.push(data.PositionTier))\r\n                    arrayGender.map(data => gender.push(data.PositionGender))\r\n\r\n                    return (\r\n                        <ChartPosition checkpoint={arrayGlobal} Global={global} Tier={Tier} Gender={gender} />\r\n                    )\r\n                }\r\n                else {\r\n                    return (<p><FormattedMessage id=\"NODATA\" /></p>)\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAthletsList()\r\n\r\n    }\r\n\r\n    getStatus() {\r\n\r\n        if (this.state.athleteListStatus.inscription_status_code === \"FIN\") {\r\n            return (<p style={{ color: \"#3c8dbc\" }} className=\"text-muted text-center\"> <strong><FormattedMessage id=\"FIN\" /></strong></p>);\r\n        } else if (this.state.athleteListStatus.inscription_status_code === \"EP\") {\r\n            return (<p style={{ color: \"#00a65a\" }} className=\"text-muted text-center\"> <strong><FormattedMessage id=\"EP\" /></strong></p>);\r\n        } else if (this.state.athleteListStatus.inscription_status_code === \"DNS\") {\r\n            return (<p style={{ color: \"#f39c12\" }} className=\"text-muted text-center\"> <strong><FormattedMessage id=\"DNS\" /></strong></p>);\r\n        } else if (this.state.athleteListStatus.inscription_status_code === \"D\") {\r\n            return (<p style={{ color: \"#f39c12\" }} className=\"text-muted text-center\"> <strong><FormattedMessage id=\"D\" /></strong></p>);\r\n        } else if (this.state.athleteListStatus.inscription_status_code === \"DNF\") {\r\n            return (<p style={{ color: \"#dd4b39\" }} className=\"text-muted text-center\"> <strong><FormattedMessage id=\"DNF\" /></strong></p>);\r\n        } else if (this.state.athleteListStatus.inscription_status_code === \"DSQ\") {\r\n            return (<p style={{ color: \"#dd4b39\" }} className=\"text-muted text-center\"> <strong><FormattedMessage id=\"DSQ\" /></strong></p>);\r\n        }\r\n    }\r\n\r\n    CalculateKMperH(checkpointName, time) {\r\n        var distance\r\n        this.state.CheckpointInfo.map(checkpoint => {\r\n            if (checkpoint.checkpoint.local === checkpointName) {\r\n                distance = checkpoint.distancia_acumulada\r\n            }\r\n            return null;\r\n        })\r\n        var km = distance / 1000;\r\n        var TimeSplit = time.split(\":\")\r\n        var H = TimeSplit[0]\r\n        var M = TimeSplit[1]\r\n        var S = TimeSplit[2]\r\n        var finaltime = parseFloat(H) + parseFloat((M / 60)) + parseFloat((S / 3600))\r\n        var KMperH = parseFloat(km) / parseFloat(finaltime)\r\n        if (isNaN(KMperH)) {\r\n            KMperH = 0;\r\n        }\r\n        return (KMperH.toFixed(2));\r\n    }\r\n\r\n    CalculateMINperKM(checkpointName, time) {\r\n        var MInperKM = parseFloat(60 / this.CalculateKMperH(checkpointName, time))\r\n        if (!isFinite(MInperKM)) {\r\n            MInperKM = 0;\r\n        }\r\n        return (MInperKM.toFixed(2));\r\n    }\r\n\r\n    PositionWidgetRender() {\r\n        if (!!(arrayGlobal[arrayGlobal.length - 1]) && !!(arrayTier[arrayTier.length - 1]) && !!(arrayGender[arrayGender.length - 1])) //check if is undefined, is because is awaiting for the api response\r\n        {\r\n            if (this.state.athleteListStatus.inscription_status_code === \"FIN\" || this.state.athleteListStatus.inscription_status_code === \"EP\") {\r\n                return (\r\n                    <div>\r\n                        <PositonWidget color={\"aqua\"} positionGlobal={arrayGlobal[arrayGlobal.length - 1].PositionGlobal} positionTier={arrayTier[arrayTier.length - 1].PositionTier} positionGender={arrayGender[arrayGender.length - 1].PositionGender} />\r\n                    </div>\r\n                )\r\n            }\r\n\r\n        }\r\n        else\r\n            if (this.state.athleteListStatus.inscription_status_code === \"FIN\" || this.state.athleteListStatus.inscription_status_code === \"EP\") {\r\n                return (\r\n                    < LoadingWidget color={\"aqua\"} text={< FormattedMessage id=\"LOADING\" />} />\r\n                )\r\n            }\r\n\r\n    }\r\n\r\n    TimeVelocityWidgetRender() {\r\n\r\n        if (!!(arrayGlobal[arrayGlobal.length - 1])) //check if is undefined, is because is awaiting for the api response\r\n        {\r\n            var KM = 0;\r\n            var MIN = 0;\r\n            arrayGlobal.map(data => {\r\n                if (parseFloat(this.CalculateKMperH(data.local, data.acumulated_time)) !== 0) {\r\n                    KM = KM + parseFloat(this.CalculateKMperH(data.local, data.acumulated_time))\r\n                }\r\n                return null\r\n            })\r\n            arrayGlobal.map(data => {\r\n                if (parseFloat(this.CalculateMINperKM(data.local, data.acumulated_time)) !== 0) {\r\n                    MIN = MIN + parseFloat(this.CalculateMINperKM(data.local, data.acumulated_time))\r\n                }\r\n                return null\r\n            })\r\n\r\n            var AvarageKM = (KM / (arrayGlobal.length - 1)).toFixed(2)\r\n            var AvarageMIN = (MIN / (arrayGlobal.length - 1)).toFixed(2)\r\n            if (this.state.athleteListStatus.inscription_status_code === \"FIN\" || this.state.athleteListStatus.inscription_status_code === \"EP\") {\r\n\r\n                return (\r\n                    <div>\r\n                        <TimeWidget time={arrayGlobal[arrayGlobal.length - 1].acumulated_time} name={<FormattedMessage id=\"TIME\" />} color={\"yellow\"} />\r\n                        <VelocityWidget name={<FormattedMessage id=\"AVERAGESPEED\" />} speedKM={AvarageKM + \" KM/H\"} speedMIN={AvarageMIN + \" MIN/KM\"} color={\"red\"} />\r\n                        <PlaceWidget place={arrayGlobal[arrayGlobal.length - 1].local} color={\"green\"} />\r\n                    </div>\r\n\r\n                )\r\n            }\r\n        }\r\n        else {\r\n            if (this.state.athleteListStatus.inscription_status_code === \"FIN\" || this.state.athleteListStatus.inscription_status_code === \"EP\") {\r\n                return (\r\n                    <div>\r\n\r\n                        < LoadingWidget color={\"yellow\"} text={< FormattedMessage id=\"LOADING\" />} />\r\n                        < LoadingWidget color={\"red\"} text={< FormattedMessage id=\"LOADING\" />} />\r\n                        < LoadingWidget color={\"green\"} text={< FormattedMessage id=\"LOADING\" />} />\r\n                    </div>\r\n                )\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    chartsRender() {\r\n        if (this.state.athleteListStatus.inscription_status_code === \"FIN\" || this.state.athleteListStatus.inscription_status_code === \"EP\") {\r\n\r\n            return (\r\n                <div style={{ float: 'right' }} className=\"col-md-9\">\r\n                    <div className=\"nav-tabs-custom\" >\r\n                        <ul className=\"nav nav-tabs\">\r\n                            <li className=\"active\"><a href=\"#VelocityKMperH\" data-toggle=\"tab\">< FormattedMessage id=\"SPEED\" /> KM/H</a></li>\r\n                            <li ><a href=\"#VelocityMINperH\" data-toggle=\"tab\">< FormattedMessage id=\"SPEED\" /> MIN/KM</a></li>\r\n                            <li><a href=\"#Position\" data-toggle=\"tab\">< FormattedMessage id=\"POSITION\" /></a></li>\r\n                        </ul>\r\n                        <div className=\"tab-content\">\r\n                            <div className=\"active tab-pane\" id=\"VelocityKMperH\">\r\n                                {/* Post */}\r\n                                <div className=\"post\">\r\n                                    <div className=\"chart\">\r\n                                        {this.ChartVelocityKMRender()}\r\n                                    </div>\r\n                                </div>\r\n                                {/* /.post */}\r\n                            </div>\r\n                            <div className=\"tab-pane\" id=\"VelocityMINperH\">\r\n                                {/* Post */}\r\n                                <div className=\"post\">\r\n                                    <div className=\"chart\">\r\n                                        {this.ChartVelocityMINRender()}\r\n                                    </div>\r\n                                </div>\r\n                                {/* /.post */}\r\n                            </div>\r\n                            {/* /.tab-pane */}\r\n                            <div className=\"tab-pane\" id=\"Position\">\r\n                                <div className=\"post\">\r\n                                    <div className=\"chart\">\r\n                                        {this.ChartPositionRender()}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {/* /.tab-content */}\r\n                    </div>\r\n                    {/* /.nav-tabs-custom */}\r\n                </div>\r\n\r\n            )\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getLastCheckpoint() {\r\n        var LastPositon = (arrayGlobal.slice(-1).pop())\r\n        if (!!(LastPositon)) {\r\n            this.state.CheckpointInfo.map(checkpoint => {\r\n                if (checkpoint.checkpoint.local === LastPositon.local) {\r\n                    if (LastCheckpointID === 0) {\r\n                        LastCheckpointID = checkpoint.checkpoint.checkpoint_id\r\n                        this.GetFaster();\r\n                    }\r\n\r\n                }\r\n                return null\r\n            }\r\n            )\r\n        }\r\n    }\r\n\r\n    getFasterTimes() {\r\n        if (Faster.length > 0) {\r\n            if (FasterID === 0) {\r\n                Faster.map(athlete => FasterID = athlete.athlete_id);\r\n                this.GetListGlobalFaster();\r\n\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    showCertificateButton() {\r\n\r\n        if (!!(this.state.athleteListStatus.athlete)) {\r\n\r\n            if (this.state.athleteListStatus.competition.certification === 1 && this.state.athleteListStatus.inscription_status_code === \"FIN\") {\r\n                if (!!(arrayGlobal[arrayGlobal.length - 1]) && !!(arrayTier[arrayTier.length - 1]) && !!(arrayGender[arrayGender.length - 1])) {\r\n                    return (\r\n                        <div>\r\n                            <br></br>\r\n                            <button href=\"##\" className=\"btn btn-success  btn-block\" onClick={() => this.getCertificate()}><b>< FormattedMessage id=\"CERTIFICATE\" /></b></button>\r\n                        </div>\r\n                    )\r\n                }\r\n                else {\r\n                    return (\r\n                        <div>\r\n                            <br></br>\r\n\r\n                            <button disabled className=\"btn btn-success  btn-block\" ><b> <i class=\"fa fa-refresh fa-spin\"></i> < FormattedMessage id=\"CERTIFICATE\" /></b>\r\n                            </button>\r\n\r\n                        </div>)\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    getCertificate() {\r\n        if (!!(this.state.athleteListStatus.athlete) && !!(arrayGlobal[arrayGlobal.length - 1]) && !!(arrayTier[arrayTier.length - 1]) && !!(arrayGender[arrayGender.length - 1])) {\r\n\r\n            var ID_Template = this.state.athleteListStatus.competition.cert_tpl\r\n            var Codigo_Validacao = this.state.athleteListStatus.competition.cert_code\r\n            var Nome_Atleta = encodeURIComponent(this.state.athleteListStatus.athlete.name)\r\n            var Sexo = this.state.athleteListStatus.athlete.gender\r\n            var Prova = this.state.athleteListStatus.competition.name\r\n            var Posicao_Escalao = arrayTier[arrayTier.length - 1].PositionTier\r\n            var Escalao = encodeURIComponent(this.state.athleteListStatus.category)\r\n            var Posicao_Geral = arrayGlobal[arrayGlobal.length - 1].PositionGlobal\r\n            var Tempo = arrayGlobal[arrayGlobal.length - 1].acumulated_time\r\n            var Peitoral = this.state.athleteListStatus.dorsal_number\r\n            var Clube = encodeURIComponent(this.state.athleteListStatus.club)\r\n\r\n            var Total_Info_Recebida = ID_Template + Nome_Atleta + Sexo + Prova + Posicao_Geral + Escalao + Posicao_Escalao + Tempo + Peitoral + Clube + Codigo_Validacao;\r\n\r\n            var md5 = require('md5');\r\n            var Hash_Calculada = md5(Total_Info_Recebida)\r\n            var url = `${MICROSERVICE_PDFS}/${ID_Template}/${Nome_Atleta}/${Sexo}/${Prova}/${Posicao_Geral}/${Escalao}/${Posicao_Escalao}/${Tempo}/${Peitoral}/${Clube}/${Hash_Calculada}`\r\n\r\n            window.location.replace(url);\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        this.PopulateArrays() //populate da data for the tables and widgets\r\n        return (\r\n            <div>\r\n                <Header eventID={this.props.match.params.EventID} />\r\n                {/*Send the event id to the MENU, to get the competition list*/}\r\n                <Menu eventID={this.props.match.params.EventID} competitionID={this.props.match.params.CompID} />\r\n                <div className=\"content-wrapper\">\r\n                    <section class=\"content-header\" >\r\n                        {/*Check if data is loading*/}\r\n                        {(() => {\r\n                            if (this.state.loadingGlobal === false && this.state.loadingTier === false && this.state.loadingGender === false && this.state.loadingCheckpoint === false && this.state.loadingList === false) {\r\n                                return (\r\n                                    <section className=\"content\">\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-xs-12\">\r\n                                                <div className=\"box\">\r\n                                                    {/* /.box-body */}\r\n                                                    <div className=\"box-body\" style={{ display: 'flex', justifyContent: 'center' }}>\r\n                                                        <Loader />\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </section>\r\n                                )\r\n                            }\r\n                            else {\r\n                                return (\r\n                                    <section className=\"content\">\r\n                                        <div className=\"row\">\r\n                                            {/* widget for the number of participants */}\r\n                                            {this.PositionWidgetRender()}\r\n                                            {this.TimeVelocityWidgetRender()}\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-3\">\r\n                                                {/* Profile Image */}\r\n                                                <div className=\"box box-primary\">\r\n                                                    <div className=\"box-body box-profile\">\r\n                                                        <img className=\"profile-user-img img-responsive img-circle\" src={!!(this.state.athleteListStatus.athlete) ? this.state.athleteListStatus.athlete.photo_url : \"\"} alt=\"User profile picture\" />\r\n                                                        {/* NEED TO CHECK IF IS UNDEFINED OR IT WILL CRASH*/}\r\n                                                        <h3 className=\"profile-username text-center\"> {!!(this.state.athleteListStatus.athlete) ? this.state.athleteListStatus.athlete.name : \"\"}</h3>\r\n                                                        {this.getStatus()}\r\n                                                        <ul className=\"list-group list-group-unbordered\">\r\n                                                            <li className=\"list-group-item\">\r\n                                                                <b>< FormattedMessage id=\"DORSAL\" /></b> <div className=\"pull-right\">{this.state.athleteListStatus.dorsal_number}</div>\r\n                                                            </li>\r\n                                                            <li className=\"list-group-item\">\r\n                                                                <b>< FormattedMessage id=\"COUNTRY\" /></b> <div className=\"pull-right\"> {!!(this.state.athleteListStatus.athlete) ? this.state.athleteListStatus.athlete.nacionality : \"\"}</div>\r\n                                                            </li>\r\n\r\n                                                            <li className=\"list-group-item\">\r\n                                                                <b>< FormattedMessage id=\"CATEGORY\" /></b> <div className=\"pull-right\">{this.state.athleteListStatus.category}</div>\r\n                                                            </li>\r\n                                                            <li className=\"list-group-item\">\r\n                                                                <p>\r\n                                                                    <b>< FormattedMessage id=\"TEAM\" /></b> <div className=\"pull-right\">{!!(this.state.athleteListStatus.club) ? this.state.athleteListStatus.club : \"\"}</div>\r\n                                                                </p>\r\n                                                            </li>\r\n                                                            <li className=\"list-group-item\">\r\n                                                                <b>< FormattedMessage id=\"COMPETITION\" /></b> <div className=\"pull-right\"> {!!(this.state.athleteListStatus.competition) ? this.state.athleteListStatus.competition.name : \"\"}</div>\r\n                                                            </li>\r\n                                                        </ul>\r\n                                                        <div>\r\n                                                            <FavoriteChecker ListaFavoritos={this.props.match.params.AthleteID} AthleteDetail={true} />\r\n                                                        </div>\r\n                                                        <div>\r\n\r\n                                                            {this.showCertificateButton()}\r\n                                                        </div>\r\n\r\n\r\n                                                    </div>\r\n                                                    {/* /.box-body */}\r\n                                                </div>\r\n                                                {/* /.box */}\r\n                                                {/* /.col (LEFT) */}\r\n\r\n                                            </div>\r\n                                            {/* /.col */}\r\n                                            <div className=\"col-md-9\">\r\n                                                <div className=\"nav-tabs-custom\">\r\n                                                    <ul className=\"nav nav-tabs\">\r\n                                                        <li className=\"active\"><a href=\"#Global\" data-toggle=\"tab\">< FormattedMessage id=\"GERAL\" /></a></li>\r\n                                                        <li><a href=\"#Tier\" data-toggle=\"tab\">< FormattedMessage id=\"CATEGORY\" /></a></li>\r\n                                                        <li><a href=\"#Gender\" data-toggle=\"tab\">< FormattedMessage id=\"GENDER\" /></a></li>\r\n                                                    </ul>\r\n                                                    <div className=\"tab-content\">\r\n                                                        <div className=\"active tab-pane\" id=\"Global\">\r\n                                                            {/* Post */}\r\n                                                            <div className=\"post\">\r\n                                                                {/* /.user-block */}\r\n\r\n                                                                {this.tableGlobal()}\r\n\r\n\r\n                                                            </div>\r\n                                                            {/* /.post */}\r\n                                                        </div>\r\n                                                        {/* /.tab-pane */}\r\n                                                        <div className=\"tab-pane\" id=\"Tier\">\r\n                                                            <div className=\"post\">\r\n                                                                {this.tableTier()}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        {/* /.tab-pane */}\r\n                                                        <div className=\"tab-pane\" id=\"Gender\">\r\n                                                            <div className=\"post\">\r\n                                                                {this.tableGender()}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        {/* /.tab-pane */}\r\n                                                    </div>\r\n                                                    {/* /.tab-content */}\r\n                                                </div>\r\n                                                {/* /.nav-tabs-custom */}\r\n                                            </div>\r\n\r\n                                            {/* LINE CHART */}\r\n                                            {this.chartsRender()}\r\n\r\n                                        </div>\r\n                                        {/* /.row */}\r\n                                    </section>\r\n\r\n                                )\r\n                            }\r\n                        })()}\r\n                    </section>\r\n                </div>\r\n                <Footer eventID={this.props.match.params.EventID} />\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport ReactTable from \"react-table\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {FormatTime} from \"../Scripts/time\"\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nexport default class TableGlobal extends Component {\r\n\r\n  \r\n  render() {\r\n    //Info for the filters\r\n    //Table\r\n    const columns = [\r\n      {\r\n        Header: \"Id\",\r\n        accessor: \"athleteid\",\r\n        sortable: false,\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n\r\n        show: false\r\n      },\r\n\r\n      {\r\n        Header: <FormattedMessage id=\"NAME\" />,\r\n        accessor: \"athleteName\",\r\n        filterable: false,\r\n        sortable: false,\r\n\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Cell: row => (\r\n\r\n            <Link\r\n              to={{ pathname: `/AthleteDetail/${this.props.eventID}/${this.props.compID}/${row.original.athleteid}` }}\r\n            >\r\n              <span style={{ color: \"#3c8dbc\" }}>{row.value} </span>\r\n            </Link>\r\n          )\r\n\r\n      },\r\n      {\r\n        Header: <FormattedMessage id=\"TIME\" />,\r\n        accessor: \"time\",\r\n        filterable: false,\r\n        sortable: false,\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Cell: row => FormatTime(row.value)\r\n\r\n      }\r\n    ];\r\n    return (\r\n      <ReactTable\r\n        columns={columns}\r\n        data={this.props.athleteList}\r\n        filterable\r\n        noDataText={<FormattedMessage id=\"NODATA\" />}\r\n        defaultPageSize={parseInt(this.props.athleteList.length)}\r\n        showPagination={false}\r\n        showPaginationTop={false}\r\n        showPaginationBottom={false}\r\n        showPageSizeOptions={false}\r\n        showPageJump={false}\r\n        collapseOnSortingChange={true}\r\n        collapseOnPageChange={true}\r\n        collapseOnDataChange={true}\r\n        freezeWhenExpanded={false}\r\n        sortable={false}\r\n        multiSort={false}\r\n        resizable={false}\r\n        defaultSortDesc={false}\r\n        pageText={<FormattedMessage id=\"PAGE\" />}\r\n        rowsText={\"\"}\r\n        className=\"-striped -highlight\"\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Header from \"../structure/Header\";\r\nimport Footer from \"../structure/Footer\";\r\nimport Menu from \"../structure/Menu\";\r\nimport TableTeams from \"../Tables/TableTeams\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport { FormatTime } from \"../Scripts/time\"\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\n\r\nconst API_KEY = `${process.env.REACT_APP_API_TRAIL_KEY}`;\r\nconst API_URL = `${process.env.REACT_APP_API_TRAIL_URL}`;\r\nconst TOKEN = API_KEY;\r\n\r\n//Control Variable\r\nvar firstrun = 0;\r\n\r\nexport default class Teams extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            teamlist: [],\r\n            loading: false,\r\n            loadingCheckpoint: false,\r\n            genderState: \"MALE\",\r\n            checkpointid: 0\r\n\r\n        };\r\n\r\n\r\n    }\r\n\r\n    componentWillMount() {\r\n        try {\r\n            if (JSON.parse(localStorage.getItem(`checkpointid${this.props.match.params.EventID}${this.props.match.params.CompID}`))) {\r\n                const checkpointid = JSON.parse(localStorage.getItem(`checkpointid${this.props.match.params.EventID}${this.props.match.params.CompID}`))\r\n                this.setState({ loadingCheckpoint: true, checkpointid: checkpointid })\r\n            }\r\n        }\r\n        catch{\r\n            localStorage.clear();\r\n\r\n        }\r\n        this.GetLastCheckpoint();\r\n        this.GetLastCheckpoint = this.GetLastCheckpoint.bind(this);\r\n    }\r\n\r\n    GetLastCheckpoint = async () => {\r\n        const API_CALL = await fetch(`${API_URL}/competition/Checkpoints/${this.props.match.params.CompID}/`, {\r\n            headers: new Headers({\r\n                Authorization: TOKEN\r\n            })\r\n        });\r\n        const data = await API_CALL.json();\r\n        //dont use the ===, dont work for some reason\r\n        try {\r\n            data.map(checkpoint => {\r\n                if (checkpoint.checkpoint_order == 99) {\r\n                    localStorage.setItem(`checkpointid${this.props.match.params.EventID}${this.props.match.params.CompID}`, JSON.stringify(checkpoint.checkpoint.checkpoint_id))\r\n                    this.setState({ loadingCheckpoint: true, checkpointid: checkpoint.checkpoint.checkpoint_id })\r\n                }\r\n            })\r\n        }\r\n        catch{\r\n            localStorage.clear();\r\n\r\n        }\r\n    };\r\n    GetTeamsMale = async () => {\r\n        if (this.state.loadingCheckpoint === true) {\r\n            const API_CALL = await fetch(`${API_URL}/results/teamresultsMALE/${this.props.match.params.CompID}/${this.state.checkpointid}/`, {\r\n                headers: new Headers({\r\n                    Authorization: TOKEN\r\n                })\r\n            });\r\n            try {\r\n                const data = await API_CALL.json();\r\n                localStorage.setItem(`teamlistMale${this.props.match.params.EventID}${this.props.match.params.CompID}`, JSON.stringify(data))\r\n                this.setState({ teamlist: data, loading: true })\r\n            }\r\n            catch{\r\n\r\n            }\r\n           \r\n        }\r\n    };\r\n\r\n    GetTeamsFemale = async () => {\r\n        const API_CALL = await fetch(`${API_URL}/results/teamresultsFEMALE/${this.props.match.params.CompID}/${this.state.checkpointid}/`, {\r\n            headers: new Headers({\r\n                Authorization: TOKEN\r\n            })\r\n        });\r\n        try {\r\n            const data = await API_CALL.json();\r\n            localStorage.setItem(`teamlistFemale${this.props.match.params.EventID}${this.props.match.params.CompID}`, JSON.stringify(data))\r\n            this.setState({ teamlist: data, loading: true })\r\n        }\r\n        catch{\r\n\r\n        }\r\n        \r\n    };\r\n\r\n    GetTeamsMaleorCache() {\r\n        try {\r\n            if (JSON.parse(localStorage.getItem(`teamlistMale${this.props.match.params.EventID}${this.props.match.params.CompID}`))) {\r\n                const teamlist = JSON.parse(localStorage.getItem(`teamlistMale${this.props.match.params.EventID}${this.props.match.params.CompID}`))\r\n                this.setState({ teamlist: teamlist, loading: true })\r\n            }\r\n        }\r\n        catch{\r\n\r\n        }\r\n        this.GetTeamsMale()\r\n    }\r\n\r\n    GetTeamsFemaleorCache() {\r\n        try {\r\n            if (JSON.parse(localStorage.getItem(`teamlistFemale${this.props.match.params.EventID}${this.props.match.params.CompID}`))) {\r\n                const teamlist = JSON.parse(localStorage.getItem(`teamlistFemale${this.props.match.params.EventID}${this.props.match.params.CompID}`))\r\n                this.setState({ teamlist: teamlist, loading: true })\r\n            }\r\n        }\r\n        catch{\r\n\r\n        }\r\n        this.GetTeamsFemale()\r\n    }\r\n\r\n    UpdateStateGender(gender) {\r\n\r\n        if (this.state.loadingCheckpoint === true) {\r\n            if (gender === \"MALE\") {\r\n                this.setState({ genderState: gender, loading: false }, this.GetTeamsMaleorCache)\r\n            }\r\n            else {\r\n                this.setState({ genderState: gender, loading: false }, this.GetTeamsFemaleorCache)\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n    /*when props change*/\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.match.params.CompID !== this.props.match.params.CompID) {\r\n            this.GetLastCheckpoint();\r\n            this.UpdateStateGender(\"MALE\");\r\n\r\n        }\r\n    }\r\n\r\n\r\n    checkIFthereISDataTOShow() {\r\n        if (this.state.teamlist.length > 0) {\r\n            return (\r\n                this.state.teamlist.map(team => {\r\n                    var APItime = team.Time.split(\":\")\r\n                    var timeLimited = APItime[0] + \":\" + APItime[1] + \":\" + APItime[2].substring(0, 2)\r\n                    return (\r\n                        <div className=\"col-md-4\">\r\n                            {/* general form elements */}\r\n                            <div className=\"box box-primary\">\r\n                                <div className=\"box-header with-border\">\r\n                                    <div className=\"row\" >\r\n                                        <div style={{ textAlign: \"center\" }} className=\"col-md-12\">\r\n                                            <h5>\r\n                                                <a class=\"btn btn-app\" style={{ pointerEvents: \"none\", fontSize: \"23px\", float: \"left\" }}> <strong>{team.Position}</strong> </a>\r\n\r\n                                                <span style={{ fontSize: \"18px\", }}>{team.Team.substring(0, 70)}</span>\r\n                                                <br></br>\r\n                                            </h5>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                {/* /.box-header */}\r\n                                {/* form start */}\r\n                                <div className=\"box-body\">\r\n                                    <div style={{ textAlign: \"center\" }} className=\"col-md-4\">\r\n                                        <img className=\"profile-user-img img-responsive img-circle\" src={team.LogoURL} alt=\"User profile picture\" />\r\n                                        <span style={{ fontSize: \"20px\" }}>\r\n                                            < FormattedMessage id=\"TIMECAPS\" />: </span>\r\n                                        <span style={{ fontSize: \"20px\" }}>\r\n                                            <strong>{FormatTime(timeLimited)}</strong> </span>\r\n                                    </div>\r\n                                    <div style={{ textAlign: \"center\" }} className=\"col-md-8\">\r\n                                        <TableTeams eventID={this.props.match.params.EventID} compID={this.props.match.params.CompID} athleteList={team.Athlets} />\r\n                                    </div>\r\n                                </div>\r\n                                {/* /.box-body */}\r\n\r\n                            </div>\r\n                            {/* /.box */}\r\n\r\n                        </div>\r\n\r\n                    )\r\n                })\r\n            )\r\n\r\n        }\r\n        else {\r\n            return (\r\n                <div className=\"col-md-12\">\r\n                    {/* general form elements */}\r\n                    <div className=\"box box-primary\">\r\n\r\n                        {/* /.box-header */}\r\n                        {/* form start */}\r\n                        <form role=\"form\">\r\n                            <div className=\"box-body\">\r\n                                <p>< FormattedMessage id=\"MESSAGETEAMSDATA\" /></p>\r\n\r\n                            </div>\r\n                            {/* /.box-body */}\r\n\r\n                        </form>\r\n                    </div>\r\n                    {/* /.box */}\r\n\r\n                </div>\r\n\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    StaticElementTeamM() {\r\n        if (this.state.genderState === \"MALE\") {\r\n\r\n            return (\r\n                <th key=\"MALE\" > <a style={{ color: '#37474F' }} onClick={() => this.UpdateStateGender(\"MALE\")} href=\"#\">< FormattedMessage id=\"MEN\" /><i class=\"fa fa-fw fa-male\"></i></a></th>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <th key=\"MALE\" > <a style={{ color: 'white' }} onClick={() => this.UpdateStateGender(\"MALE\")} href=\"#\">< FormattedMessage id=\"MEN\" /><i class=\"fa fa-fw fa-male\"></i></a></th>\r\n            )\r\n\r\n        }\r\n    }\r\n\r\n    StaticElementTeamF() {\r\n        if (this.state.genderState === \"FEMALE\") {\r\n            return (\r\n\r\n                <th key=\"FEMALE\" > <a style={{ color: '#37474F' }} onClick={() => this.UpdateStateGender(\"FEMALE\")} href=\"#\">< FormattedMessage id=\"WOMEN\" /><i class=\"fa fa-fw fa-female\"></i></a></th>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n\r\n                <th key=\"FEMALE\" > <a style={{ color: 'white' }} onClick={() => this.UpdateStateGender(\"FEMALE\")} href=\"#\">< FormattedMessage id=\"WOMEN\" /><i class=\"fa fa-fw fa-female\"></i></a></th>\r\n            )\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loadingCheckpoint === true) {\r\n            if (firstrun === 0) {\r\n                this.GetTeamsMaleorCache()\r\n                firstrun = 1;\r\n            }\r\n        }\r\n\r\n        return (\r\n\r\n            <div>\r\n                <Header eventID={this.props.match.params.EventID} />\r\n                {/*Send the event id to the MENU, to get the competition list*/}\r\n                <Menu eventID={this.props.match.params.EventID} competitionID={this.props.match.params.CompID} />\r\n                {/* Content Wrapper. Contains page content */}\r\n\r\n                <div className=\"content-wrapper\">\r\n\r\n                    <div\r\n                        style={{\r\n                            paddingTop: \"30px\",\r\n                            background: \"#367fa9\",\r\n                            zIndex: 999999,\r\n                            fontSize: 16,\r\n                            fontWeight: 600\r\n                        }}\r\n                    >\r\n                        <table className=\"text-center\" style={{ width: \"100%\", borderSpacing: \"10px\", borderCollapse: \"separate\" }}>\r\n                            <tbody>\r\n                                <tr >\r\n                                    {this.StaticElementTeamM()}\r\n                                    {this.StaticElementTeamF()}\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <section className=\"content-header\">\r\n                        <h1>\r\n                            <span style={{ float: \"right\" }}>{(this.state.genderState == \"MALE\") ? < FormattedMessage id=\"MEN\" /> : < FormattedMessage id=\"WOMEN\" />}</span>\r\n\r\n                            <span >{this.props.match.params.CompName}</span>\r\n                        </h1>\r\n                    </section>\r\n                    {(() => {\r\n                        if (this.state.loading === false) {\r\n                            return (\r\n                                <section className=\"content\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-xs-12\">\r\n                                            <div className=\"box\">\r\n                                                {/* /.box-body */}\r\n                                                <div className=\"box-body\" style={{ display: 'flex', justifyContent: 'center' }}>\r\n                                                    <Loader />\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </section>\r\n                            )\r\n                        }\r\n                        else {\r\n                            return (\r\n                                <section className=\"content\">\r\n\r\n                                    <div className=\"row\">\r\n                                        {/* left column */}\r\n                                        {this.checkIFthereISDataTOShow()}\r\n                                    </div>\r\n                                    {/* /.row */}\r\n                                </section>\r\n                            )\r\n\r\n\r\n\r\n                        }\r\n                    })()}\r\n                </div>\r\n                <Footer eventID={this.props.match.params.EventID} />\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport ReactTable from \"react-table\";\r\nimport \"react-table/react-table.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Favorites from \"../favorites/favoritesChecker\"\r\nimport { calculatePagination } from \"../Scripts/PaginationHelper\"\r\nimport { minimalSize } from \"../Scripts/PaginationHelper\"\r\n\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nvar size = window.innerWidth;\r\n\r\nexport default class TableFavorites extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: this.props.athleteList\r\n    };\r\n  }\r\n  CheckSize() {\r\n    if (size > 800) {\r\n      return true;\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n\r\n  removeFav(id, index) {\r\n    return (<Favorites tableFav={true} ListaFavoritos={id} />)\r\n  }\r\n  render() {\r\n    //Info for the filters\r\n    //get the category\r\n    let category = this.props.athleteList.map(athelete => {\r\n      return athelete.category;\r\n    });\r\n    //remove duplicates\r\n    const Tableuniquecategory = [...new Set(category.sort())];\r\n    //get the nacionality\r\n    let nacionality = this.props.athleteList.map(athelete => {\r\n      return athelete.athlete.nacionality;\r\n    });\r\n    //remove duplicates\r\n    const Tableuniquenacionality = [...new Set(nacionality.sort())];\r\n    //get the competitons\r\n    let competition = this.props.athleteList.map(athelete => {\r\n      return athelete.competition.name;\r\n    });\r\n    //remove duplicates\r\n    const Tableuniquecompetition = [...new Set(competition.sort())];\r\n    //get the Club\r\n    let club = this.props.athleteList.map(athelete => {\r\n      return athelete.club;\r\n    });\r\n    //remove duplicates\r\n    const Tableuniqueclub = [...new Set(club.sort())];\r\n    //get the inscription_status_code\r\n    let inscription_status_code = this.props.athleteList.map(athelete => {\r\n      return athelete.inscription_status_code;\r\n    });\r\n    //remove duplicates\r\n    const Tableuniqueinscription_status_code = [\r\n      ...new Set(inscription_status_code.sort())\r\n    ];\r\n\r\n    //Table\r\n    const columns = [\r\n      {\r\n        Header: \"Id\",\r\n        accessor: \"athlete_athlete.athlete_id\",\r\n        sortable: false,\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        width: 100,\r\n        maxWidth: 100,\r\n        show: false\r\n      },\r\n      {\r\n\r\n        Header: (size > 800) ? <FormattedMessage id=\"DORSAL\" /> : \"PTL\",\r\n        id: \"dorsal_number\",\r\n        accessor: d => Number(d.dorsal_number),\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        width: (size > 800) ? 100 : 60,\r\n\r\n        Filter: ({ filter, onChange }) => (\r\n          <FormattedMessage id=\"SEARCH\" >\r\n            {txt => <input\r\n              onChange={event => onChange(event.target.value)}\r\n              value={filter ? filter.value : \"\"}\r\n              placeholder={txt}\r\n              style={{\r\n                width: \"100%\",\r\n                textAlign: \"Center\"\r\n              }}\r\n            />}\r\n          </FormattedMessage>\r\n        ),\r\n        Cell: row => (\r\n\r\n          <Link\r\n            to={{ pathname: `/AthleteDetail/${this.props.eventID}/${row.original.competition.competition_id}/${row.original.athlete.athlete_id}` }}\r\n          >\r\n            <span style={{ color: \"#3c8dbc\" }}>{row.value} </span>\r\n          </Link>\r\n        )\r\n      },\r\n      {\r\n        Header: <FormattedMessage id=\"NAME\" />,\r\n        accessor: \"athlete.name\",\r\n        width: (size > 800) ? 300 : 130,\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n\r\n        Filter: ({ filter, onChange }) => (\r\n          <FormattedMessage id=\"SEARCH\" >\r\n            {txt => <input\r\n              onChange={event => onChange(event.target.value)}\r\n              value={filter ? filter.value : \"\"}\r\n              placeholder={txt}\r\n              style={{\r\n                width: \"100%\",\r\n                textAlign: \"Center\"\r\n              }}\r\n            />}\r\n          </FormattedMessage>\r\n\r\n        ),\r\n        Cell: row => (\r\n\r\n          <Link\r\n            to={{ pathname: `/AthleteDetail/${this.props.eventID}/${row.original.competition.competition_id}/${row.original.athlete.athlete_id}` }}\r\n          >\r\n            <span style={{ color: \"#3c8dbc\" }}>{row.value} </span>\r\n          </Link>\r\n        )\r\n      },\r\n      {\r\n        Header: <FormattedMessage id=\"TEAM\" />,\r\n        accessor: \"club\",\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        show: this.CheckSize(),\r\n        Cell: row => row.value,\r\n        filterMethod: (filter, row) => {\r\n          if (filter.value === \"\") {\r\n            return true;\r\n          }\r\n\r\n          if (Tableuniqueclub.includes(filter.value)) {\r\n            return row[filter.id] === filter.value;\r\n          } else {\r\n            return true;\r\n          }\r\n        },\r\n        Filter: ({ filter, onChange }) => (\r\n          <select\r\n            onChange={event => onChange(event.target.value)}\r\n            style={{ width: \"100%\", textAlignLast: \"center\" }}\r\n\r\n            value={filter ? filter.value : \"all\"}\r\n          >\r\n            <FormattedMessage id=\"ALL\">\r\n              {txt => <option value=\"all\">{txt}</option>}\r\n            </FormattedMessage>\r\n            {Tableuniqueclub.map(k => {\r\n              return (\r\n                <option key={k.toString()} value={k}>\r\n                  {k}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        )\r\n      },\r\n      {\r\n        Header: <FormattedMessage id=\"CATEGORY\" />,\r\n        accessor: \"category\",\r\n        width: (size > 800) ? 150 : 85,\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Cell: row => row.value,\r\n        filterMethod: (filter, row) => {\r\n          if (filter.value === \"\") {\r\n            return true;\r\n          }\r\n\r\n          if (Tableuniquecategory.includes(filter.value)) {\r\n            return row[filter.id] === filter.value;\r\n          } else {\r\n            return true;\r\n          }\r\n        },\r\n        Filter: ({ filter, onChange }) => (\r\n          <select\r\n            onChange={event => onChange(event.target.value)}\r\n            style={{ width: \"100%\", textAlignLast: \"center\" }}\r\n\r\n            value={filter ? filter.value : \"all\"}\r\n          >\r\n            <FormattedMessage id=\"ALL\">\r\n              {txt => <option value=\"all\">{txt}</option>}\r\n            </FormattedMessage>\r\n            {Tableuniquecategory.map(k => {\r\n              return (\r\n                <option key={k.toString()} value={k}>\r\n                  {k}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        )\r\n      },\r\n      {\r\n        Header: <FormattedMessage id=\"COMPETITION\" />,\r\n        accessor: \"competition.name\",\r\n        show: this.CheckSize(),\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Cell: row => row.value,\r\n        filterMethod: (filter, row) => {\r\n          if (filter.value === \"\") {\r\n            return true;\r\n          }\r\n\r\n          if (Tableuniquecompetition.includes(filter.value)) {\r\n            return row[filter.id] === filter.value;\r\n          } else {\r\n            return true;\r\n          }\r\n        },\r\n        Filter: ({ filter, onChange }) => (\r\n          <select\r\n            onChange={event => onChange(event.target.value)}\r\n            style={{ width: \"100%\", textAlignLast: \"center\" }}\r\n\r\n            value={filter ? filter.value : \"all\"}\r\n          >\r\n            <FormattedMessage id=\"ALL\">\r\n              {txt => <option value=\"all\">{txt}</option>}\r\n            </FormattedMessage>\r\n            {Tableuniquecompetition.map(k => {\r\n              return (\r\n                <option key={k.toString()} value={k}>\r\n                  {k}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        )\r\n      },\r\n      {\r\n        Header: \"Prova\",\r\n        accessor: \"competition.competition_id\",\r\n        show: false,\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Cell: row => row.value,\r\n        filterMethod: (filter, row) => {\r\n          if (filter.value === \"\") {\r\n            return true;\r\n          }\r\n\r\n          if (Tableuniquecompetition.includes(filter.value)) {\r\n            return row[filter.id] === filter.value;\r\n          } else {\r\n            return true;\r\n          }\r\n        },\r\n        Filter: ({ filter, onChange }) => (\r\n          <select\r\n            onChange={event => onChange(event.target.value)}\r\n            style={{ width: \"100%\", textAlignLast: \"center\" }}\r\n            value={filter ? filter.value : \"all\"}\r\n          >\r\n            <FormattedMessage id=\"ALL\">\r\n              {txt => <option value=\"all\">{txt}</option>}\r\n            </FormattedMessage>\r\n            {Tableuniquecompetition.map(k => {\r\n              return (\r\n                <option key={k.toString()} value={k}>\r\n                  {k}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        )\r\n      },\r\n      {\r\n        Header: <FormattedMessage id=\"COUNTRY\" />,\r\n        accessor: \"athlete.nacionality\",\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Cell: row => row.value,\r\n        filterMethod: (filter, row) => {\r\n          if (filter.value === \"\") {\r\n            return true;\r\n          }\r\n\r\n          if (Tableuniquenacionality.includes(filter.value)) {\r\n            return row[filter.id] === filter.value;\r\n          } else {\r\n            return true;\r\n          }\r\n        },\r\n        Filter: ({ filter, onChange }) => (\r\n          <select\r\n            onChange={event => onChange(event.target.value)}\r\n            style={{ width: \"100%\", textAlignLast: \"center\" }}\r\n            value={filter ? filter.value : \"all\"}\r\n          >\r\n            <FormattedMessage id=\"ALL\">\r\n              {txt => <option value=\"all\">{txt}</option>}\r\n            </FormattedMessage>\r\n            {Tableuniquenacionality.map(k => {\r\n              return (\r\n                <option key={k.toString()} value={k}>\r\n                  {k}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        )\r\n      },\r\n      {\r\n\r\n        Header: <FormattedMessage id=\"STATUS\" />,\r\n        accessor: \"inscription_status_code\",\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Cell: row => {\r\n          if (row.value === \"FIN\") {\r\n            return <FormattedMessage id=\"FIN\" />;\r\n          } else if (row.value === \"EP\") {\r\n            return <FormattedMessage id=\"EP\" />;\r\n          } else if (row.value === \"DNS\") {\r\n            return <FormattedMessage id=\"DNS\" />;\r\n          } else if (row.value === \"D\") {\r\n            return <FormattedMessage id=\"D\" />;\r\n          } else if (row.value === \"DNF\") {\r\n            return <FormattedMessage id=\"DNF\" />;\r\n          } else if (row.value === \"DSQ\") {\r\n            return <FormattedMessage id=\"DSQ\" />;\r\n          }\r\n\r\n        },\r\n        filterMethod: (filter, row) => {\r\n          if (filter.value === \"\") {\r\n            return true;\r\n          }\r\n\r\n          if (Tableuniqueinscription_status_code.includes(filter.value)) {\r\n            return row[filter.id] === filter.value;\r\n          } else {\r\n            return true;\r\n          }\r\n        },\r\n        Filter: ({ filter, onChange }) => (\r\n          <select\r\n            onChange={event => onChange(event.target.value)}\r\n            style={{ width: \"100%\", textAlignLast: \"center\" }}\r\n            value={filter ? filter.value : \"all\"}\r\n          >\r\n            <FormattedMessage id=\"ALL\">\r\n              {txt => <option value=\"all\">{txt}</option>}\r\n            </FormattedMessage>\r\n            {Tableuniqueinscription_status_code.map(k => {\r\n              return (\r\n                <FormattedMessage id={k.toString()}>\r\n                  {txt => <option key={k.toString()} value={k}>{txt}</option>}\r\n                </FormattedMessage>\r\n              );\r\n            })}\r\n          </select>\r\n        )\r\n      },\r\n      {\r\n        Header: (size > 800) ? <FormattedMessage id=\"FAVORITE\" /> : \"FAV\",\r\n        width: (size > 800) ? 100 : 50,\r\n        filterable: false,\r\n        sortable: false,\r\n\r\n        style: {\r\n          textAlign: \"Center\"\r\n        },\r\n        Cell: (row) => (\r\n          <span onClick={() => {\r\n            let data = this.state.data;\r\n            data.splice(row.index, 1)\r\n            this.setState({ data })\r\n          }}>\r\n            {this.removeFav(row.original.athlete.athlete_id, row.index)}\r\n          </span>\r\n\r\n        )\r\n      }\r\n    ];\r\n    return (\r\n      <ReactTable\r\n        defaultSorted={[\r\n          {\r\n            id: \"dorsal_number\",\r\n            desc: false\r\n          }\r\n        ]}\r\n        previousText={<FormattedMessage id=\"PREVIOUS\" />}\r\n        nextText={<FormattedMessage id=\"NEXT\" />}\r\n        columns={columns}\r\n        data={this.state.data}\r\n        filterable\r\n        noDataText={<FormattedMessage id=\"NODATA\" />}\r\n        defaultPageSize={minimalSize(this.state.data.length, 10)}\r\n        pageSizeOptions={calculatePagination(this.state.data.length, 10)}\r\n        showPagination={true}\r\n        showPaginationTop={false}\r\n        showPaginationBottom={true}\r\n        showPageJump={true}\r\n        collapseOnSortingChange={true}\r\n        collapseOnPageChange={true}\r\n        collapseOnDataChange={true}\r\n        freezeWhenExpanded={false}\r\n        sortable={true}\r\n        multiSort={true}\r\n        resizable={true}\r\n        defaultSortDesc={false}\r\n        pageText={<FormattedMessage id=\"PAGE\" />}\r\n        rowsText={\"\"}\r\n        className=\"-striped -highlight\"\r\n\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport { FormattedMessage } from 'react-intl';\n\nexport default class NumberFavorites extends Component {\n    render() {\n        return (\n            <div>\n                {/* Info boxes */}\n                <div className=\"col-md-3 col-sm-6 col-xs-12\">\n                    <div className=\"info-box\">\n                        <span className=\"info-box-icon bg-aqua\"><i className=\"ion ion-ios-contact-outline\" /></span>\n                        <div className=\"info-box-content\">\n                            <span className=\"info-box-text\"><FormattedMessage id=\"FAVORITES\" /></span>\n                            <span className=\"info-box-number\">{this.props.athleteList.length}</span>\n                        </div>\n                        {/* /.info-box-content */}\n                    </div>\n                    {/* /.info-box */}\n                </div>\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from \"react\";\r\nimport Header from \"../structure/Header\";\r\nimport Footer from \"../structure/Footer\";\r\nimport Menu from \"../structure/Menu\";\r\nimport TableFavorites from \"../Tables/TableFavorites\";\r\nimport WidgetNumberFavortites from \"../Widgets/NumberFavorites\";\r\nimport WidgetNumberCategories from \"../Widgets/NumberCategories\";\r\nimport WidgetNumberteams from \"../Widgets/NumberTeams\";\r\nimport WidgetNumberNacionalities from \"../Widgets/NumberNationalities\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\n\r\nconst API_KEY = `${process.env.REACT_APP_API_TRAIL_KEY}`;\r\nconst API_URL = `${process.env.REACT_APP_API_TRAIL_URL}`;\r\nconst TOKEN = API_KEY;\r\nvar EventID = 0;\r\nvar arrayFavorites = [];\r\nexport default class Favorites extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      athleteList: [],\r\n      loading: false,\r\n    };\r\n\r\n    this.getAthletsList();\r\n  }\r\n\r\n  componentWillMount() {\r\n    try {\r\n      if (JSON.parse(localStorage.getItem(`athleteList${this.props.match.params.EventID}`))) {\r\n        const athList = JSON.parse(localStorage.getItem(`athleteList${this.props.match.params.EventID}`))\r\n        this.setState({ athleteList: athList }, () => this.checkFavorites());\r\n\r\n      }\r\n\r\n      else {\r\n        this.getAthletsList();\r\n\r\n      }\r\n    }\r\n    catch{\r\n      localStorage.clear();\r\n\r\n    }}\r\n        /*List of athlets*/\r\n    getAthletsList = async e => {\r\n      EventID = this.props.match.params.EventID;\r\n      const API_CALL = await fetch(`${API_URL}/trail/Athletes/${EventID}/`, {\r\n        headers: new Headers({\r\n          Authorization: TOKEN\r\n        })\r\n      });\r\n      const data = await API_CALL.json();\r\n\r\n      this.setState({ athleteList: data }, () => this.checkFavorites());\r\n    };\r\n\r\n    /*Check Favorites*/\r\n    checkFavorites() {\r\n      arrayFavorites = []\r\n      this.state.athleteList.map(athlete => {\r\n        if (parseInt(athlete.athlete.athlete_id) === parseInt(localStorage.getItem(athlete.athlete.athlete_id))) {\r\n          arrayFavorites.push(athlete)\r\n        }\r\n        return null\r\n      })\r\n      this.setState({ loading: true })\r\n    }\r\n\r\n    renderTable() {\r\n      if (this.state.loading === true) {\r\n        if (arrayFavorites.length > 0) {\r\n          return (\r\n            <TableFavorites\r\n              athleteList={arrayFavorites}\r\n              loading={this.state.loading}\r\n              eventID={EventID}\r\n              competitionID={0} />\r\n          )\r\n\r\n\r\n        }\r\n        else\r\n          return (\r\n            <p>\r\n              < FormattedMessage id=\"NOFAVORITES\" />\r\n            </p>\r\n          )\r\n      }\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div>\r\n          <Header eventID={this.props.match.params.EventID} />\r\n          {/*Send the event id to the MENU, to get the competition list*/}\r\n          <Menu eventID={EventID} competitionID={0} />\r\n          {/*CONTENT*/}\r\n          <div>\r\n            {/* Content Wrapper. Contains page content */}\r\n            <div className=\"content-wrapper\">\r\n\r\n              {/* Content Header (Page header) */}\r\n              <section className=\"content-header\">\r\n                <h1>\r\n                  < FormattedMessage id=\"FAVORITESLIST\" />\r\n                </h1>\r\n              </section>\r\n              {/* Main content */}\r\n              {/*Check if data is loading*/}\r\n              {(() => {\r\n                if (this.state.loading === false) {\r\n                  return (\r\n                    <section className=\"content\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-xs-12\">\r\n                          <div className=\"box\">\r\n                            {/* /.box-body */}\r\n                            <div className=\"box-body\" style={{ display: 'flex', justifyContent: 'center' }}>\r\n                              <Loader />\r\n                            </div>\r\n\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </section>\r\n                  )\r\n                }\r\n                else {\r\n                  return (\r\n\r\n                    <section className=\"content\">\r\n                      <div className=\"row\">\r\n                        {/* widget for the number of participants */}\r\n                        <WidgetNumberFavortites athleteList={arrayFavorites} />\r\n                        {/* widget for the number of Teams */}\r\n                        <WidgetNumberteams athleteList={arrayFavorites} />\r\n                        {/* widget for the number of Categories */}\r\n                        <WidgetNumberCategories athleteList={arrayFavorites} />\r\n                        {/* widget for the number of Nacionalities */}\r\n                        <WidgetNumberNacionalities athleteList={arrayFavorites} />\r\n                      </div>\r\n                      <div className=\"row\">\r\n                        <div className=\"col-xs-12\">\r\n                          <div className=\"box\">\r\n                            {/* /.box-body */}\r\n                            <div className=\"box box-primary\"></div>\r\n                            <div className=\"post\" style={{ textAlign: \"center\" }}>\r\n                              {this.renderTable()}\r\n                            </div>\r\n\r\n                          </div>\r\n                          {/* Table for the list of participants */}\r\n\r\n\r\n                        </div>\r\n                      </div>\r\n                      {/* /.col */}\r\n                      {/* /.row */}\r\n\r\n                    </section>\r\n                  )\r\n                }\r\n              })()}\r\n            </div>\r\n            {/* /.content-wrapper */}\r\n          </div>\r\n          <Footer eventID={this.props.match.params.EventID} />\r\n        </div >\r\n      );\r\n    }\r\n\r\n  }\r\n","import React, { Component } from 'react'\r\nimport Header from \"../structure/Header\";\r\nimport Footer from \"../structure/Footer\";\r\nimport Menu from \"../structure/Menu\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport ChartBar from \"../Chart/bar\"\r\nimport ChartPie from \"../Chart/pie\"\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\n\r\nconst API_KEY = `${process.env.REACT_APP_API_TRAIL_KEY}`;\r\nconst API_URL = `${process.env.REACT_APP_API_TRAIL_URL}`;\r\nconst TOKEN = API_KEY;\r\n\r\nexport default class StatsGlobal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loadingCategory: false,\r\n            loadingGender: false,\r\n            loadingCompetitions: false,\r\n            loadingNacionality: false,\r\n\r\n            categoryList: [],\r\n            genderList: [],\r\n            competitionList: [],\r\n            nacionalityList: [],\r\n        };\r\n        this.GetCategory();\r\n        this.GetGender();\r\n        this.GetCompetitions();\r\n        this.GetNacionality();\r\n    }\r\n\r\n    /*for the first time when page is loaded */\r\n    GetCategory = async e => {\r\n        const API_CALL = await fetch(`${API_URL}/trail/CategoryTotal/${this.props.match.params.EventID}/`, {\r\n            headers: new Headers({\r\n                Authorization: TOKEN\r\n            })\r\n        });\r\n        const data = await API_CALL.json();\r\n        this.setState({ categoryList: data, loadingCategory: true });\r\n\r\n    };\r\n    GetGender = async e => {\r\n        const API_CALL = await fetch(`${API_URL}/trail/GenderTotal/${this.props.match.params.EventID}/`, {\r\n            headers: new Headers({\r\n                Authorization: TOKEN\r\n            })\r\n        });\r\n        const data = await API_CALL.json();\r\n        this.setState({ genderList: data, loadingGender: true });\r\n    };\r\n    GetCompetitions = async e => {\r\n        const API_CALL = await fetch(`${API_URL}/trail/CompetitionTotal/${this.props.match.params.EventID}/`, {\r\n            headers: new Headers({\r\n                Authorization: TOKEN\r\n            })\r\n        });\r\n        const data = await API_CALL.json();\r\n        this.setState({ competitionList: data, loadingCompetitions: true });\r\n    };\r\n    GetNacionality = async e => {\r\n        const API_CALL = await fetch(`${API_URL}/trail/NacionalityTotal/${this.props.match.params.EventID}/`, {\r\n            headers: new Headers({\r\n                Authorization: TOKEN\r\n            })\r\n        });\r\n        const data = await API_CALL.json();\r\n        this.setState({ nacionalityList: data, loadingNacionality: true });\r\n    };\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <Header eventID={this.props.match.params.EventID} />\r\n                {/*Send the event id to the MENU, to get the competition list*/}\r\n                <Menu eventID={this.props.match.params.EventID} competitionID={0} />\r\n                {/*CONTENT*/}\r\n                <div>\r\n                    {/* Content Wrapper. Contains page content */}\r\n                    <div className=\"content-wrapper\">\r\n\r\n                        {/* Content Header (Page header) */}\r\n                        <section className=\"content-header\">\r\n\r\n                        </section>\r\n                        {/* Main content */}\r\n                        {/*Check if data is loading*/}\r\n                        <section className=\"content\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-6\">\r\n                                    {/* general form elements */}\r\n                                    <div className=\"box box-primary\">\r\n                                        <div className=\"box-header with-border\">\r\n                                            <div style={{ textAlign: \"center\" }} >\r\n                                                <h3><FormattedMessage id=\"CATEGORY\" /></h3>\r\n                                            </div>\r\n                                        </div>\r\n                                        {/* /.box-header */}\r\n                                        {/* form start */}\r\n                                        {(() => {\r\n                                            //Category\r\n                                            if (this.state.loadingCategory === false) {\r\n                                                return (\r\n                                                    <div style={{ textAlign: \"center\" }} className=\"box-body\">\r\n                                                        <Loader />\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                            else {\r\n                                                return (\r\n                                                    <div className=\"box-body\">\r\n                                                        <ChartBar data={this.state.categoryList} />\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        })()}\r\n                                    </div>\r\n                                    {/* /.box */}\r\n\r\n                                </div>\r\n\r\n                                <div className=\"col-md-6\">\r\n                                    {/* general form elements */}\r\n                                    <div className=\"box box-primary\">\r\n                                        <div className=\"box-header with-border\">\r\n                                            <div style={{ textAlign: \"center\" }} >\r\n                                                <h3><FormattedMessage id=\"GENDER\" /></h3>\r\n                                            </div>\r\n                                        </div>\r\n                                        {/* /.box-header */}\r\n                                        {/* form start */}\r\n                                        {(() => {\r\n                                            //Gender\r\n\r\n                                            if (this.state.loadingGender === false) {\r\n                                                return (\r\n                                                    <div style={{ textAlign: \"center\" }} className=\"box-body\">\r\n                                                        <Loader />\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                            else {\r\n\r\n                                                return (\r\n                                                    <div className=\"box-body\">\r\n                                                        <ChartPie data={this.state.genderList} />\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        })()}\r\n\r\n                                    </div>\r\n                                    {/* /.box */}\r\n\r\n                                </div>\r\n                                <div className=\"col-md-6\">\r\n                                    {/* general form elements */}\r\n                                    <div className=\"box box-primary\">\r\n                                        <div className=\"box-header with-border\">\r\n                                            <div style={{ textAlign: \"center\" }} >\r\n                                                <h3><FormattedMessage id=\"COUNTRY\" /></h3>\r\n                                            </div>\r\n                                        </div>\r\n                                        {/* /.box-header */}\r\n                                        {/* form start */}\r\n                                        {(() => {\r\n                                            //Gender\r\n                                            if (this.state.loadingNacionality === false) {\r\n                                                return (\r\n                                                    <div style={{ textAlign: \"center\" }} className=\"box-body\">\r\n                                                        <Loader />\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                            else {\r\n                                                return (\r\n                                                    <div className=\"box-body\">\r\n                                                        <ChartPie data={this.state.nacionalityList} />\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        })()}\r\n\r\n                                    </div>\r\n                                    {/* /.box */}\r\n\r\n                                </div>\r\n                                <div className=\"col-md-6\">\r\n                                    {/* general form elements */}\r\n                                    <div className=\"box box-primary\">\r\n                                        <div className=\"box-header with-border\">\r\n                                            <div style={{ textAlign: \"center\" }} >\r\n                                                <h3><FormattedMessage id=\"COMPETITION\" /></h3>\r\n                                            </div>\r\n                                        </div>\r\n                                        {/* /.box-header */}\r\n                                        {/* form start */}\r\n                                        {(() => {\r\n                                            //Gender\r\n                                            if (this.state.loadingCompetitions === false) {\r\n                                                return (\r\n                                                    <div style={{ textAlign: \"center\" }} className=\"box-body\">\r\n                                                        <Loader />\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                            else {\r\n                                                return (\r\n                                                    <div className=\"box-body\">\r\n                                                        <ChartBar data={this.state.competitionList} />\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        })()}\r\n\r\n                                    </div>\r\n                                    {/* /.box */}\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                        </section>\r\n                    </div>\r\n                    {/* /.content-wrapper */}\r\n                </div>\r\n                <Footer eventID={this.props.match.params.EventID} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Header from \"../structure/Header\";\r\nimport Footer from \"../structure/Footer\";\r\nimport Menu from \"../structure/Menu\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport Chartbar from \"../Chart/bar\"\r\nimport ChartGender from \"../Chart/GenderComp\"\r\nimport ChartGround from \"../Chart/Ground\"\r\nimport ChartCheckpoint from \"../Chart/Checkpoint\"\r\nimport { FormattedMessage } from 'react-intl';\r\nimport Map from \"../map/map\"\r\nconst API_KEY = `${process.env.REACT_APP_API_TRAIL_KEY}`;\r\nconst API_URL = `${process.env.REACT_APP_API_TRAIL_URL}`;\r\nconst TOKEN = API_KEY;\r\n\r\nexport default class StatsCompetition extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loadingCategory: false,\r\n            loadingCategoryStart: false,\r\n            loadingGender: false,\r\n            loadingGenderStart: false,\r\n            loadingGenderLast: false,\r\n            loadingCategoryLast: false,\r\n            loadingGround: false,\r\n            loadingCheckpoint: false,\r\n            loadingNacionality: false,\r\n            loadingNacionalityLast: false,\r\n            loadingNacionalityStart: false,\r\n            categoryList: [],\r\n            categoryListStart: [],\r\n            categoryListLast: [],\r\n            genderList: [],\r\n            genderListLast: [],\r\n            GroundList: [],\r\n            CheckpointTotalList: [],\r\n            NacionalityListLast: [],\r\n            NacionalityList: [],\r\n            genderListStart: [],\r\n            NacionalityListStart: [],\r\n\r\n        };\r\n        this.GetData();\r\n    }\r\n    GetData() {\r\n        this.GetCategory();\r\n        this.GetGender();\r\n        this.GetCategoryLast();\r\n        this.GetGenderLast();\r\n        this.GetGround();\r\n        this.GetCheckpointTotal();\r\n        this.GetNacionality();\r\n        this.GetNacionalityLast();\r\n        this.GetCategoryStart();\r\n        this.GetGenderStart();\r\n        this.GetNacionalityStart();\r\n\r\n    }\r\n    /*for the first time when page is loaded */\r\n    GetCategory = async e => {\r\n        const API_CALL = await fetch(`${API_URL}/competition/CategoryTotal/${this.props.match.params.CompID}/`, {\r\n            headers: new Headers({\r\n                Authorization: TOKEN\r\n            })\r\n        });\r\n        const data = await API_CALL.json();\r\n        this.setState({ categoryList: data, loadingCategory: true });\r\n\r\n    };\r\n    GetCategoryStart = async e => {\r\n        const API_CALL = await fetch(`${API_URL}/competition/CategoryTotalStart/${this.props.match.params.CompID}/`, {\r\n            headers: new Headers({\r\n                Authorization: TOKEN\r\n            })\r\n        });\r\n        const data = await API_CALL.json();\r\n        this.setState({ categoryListStart: data, loadingCategoryStart: true });\r\n\r\n    };\r\n    GetCategoryLast = async e => {\r\n        const API_CALL = await fetch(`${API_URL}/competition/CategoryTotalLast/${this.props.match.params.CompID}/`, {\r\n            headers: new Headers({\r\n                Authorization: TOKEN\r\n            })\r\n        });\r\n        const data = await API_CALL.json();\r\n        this.setState({ categoryListLast: data, loadingCategoryLast: true });\r\n\r\n    };\r\n    GetGender = async e => {\r\n        const API_CALL = await fetch(`${API_URL}/competition/GenderTotal/${this.props.match.params.CompID}/`, {\r\n            headers: new Headers({\r\n                Authorization: TOKEN\r\n            })\r\n        });\r\n        const data = await API_CALL.json();\r\n        this.setState({ genderList: data, loadingGender: true });\r\n\r\n    };\r\n    GetGenderStart = async e => {\r\n        const API_CALL = await fetch(`${API_URL}/competition/GenderTotalStart/${this.props.match.params.CompID}/`, {\r\n            headers: new Headers({\r\n                Authorization: TOKEN\r\n            })\r\n        });\r\n        const data = await API_CALL.json();\r\n        this.setState({ genderListStart: data, loadingGenderStart: true });\r\n\r\n    };\r\n    GetGenderLast = async e => {\r\n        const API_CALL = await fetch(`${API_URL}/competition/GenderTotalLast/${this.props.match.params.CompID}/`, {\r\n            headers: new Headers({\r\n                Authorization: TOKEN\r\n            })\r\n        });\r\n        const data = await API_CALL.json();\r\n        this.setState({ genderListLast: data, loadingGenderLast: true });\r\n\r\n    };\r\n    GetGround = async e => {\r\n        const API_CALL = await fetch(`${API_URL}/competition/Checkpoints/${this.props.match.params.CompID}/`, {\r\n            headers: new Headers({\r\n                Authorization: TOKEN\r\n            })\r\n        });\r\n\r\n        const data = await API_CALL.json();\r\n        this.setState({ GroundList: data, loadingGround: true });\r\n    };\r\n    GetCheckpointTotal = async e => {\r\n        const API_CALL = await fetch(`${API_URL}/results/AthTotalByCheckpoint/${this.props.match.params.CompID}/`, {\r\n            headers: new Headers({\r\n                Authorization: TOKEN\r\n            })\r\n        });\r\n\r\n        const data = await API_CALL.json();\r\n        this.setState({ CheckpointTotalList: data, loadingCheckpoint: true });\r\n    };\r\n    GetNacionality = async e => {\r\n        const API_CALL = await fetch(`${API_URL}/competition/NacionalityTotal/${this.props.match.params.CompID}/`, {\r\n            headers: new Headers({\r\n                Authorization: TOKEN\r\n            })\r\n        });\r\n        const data = await API_CALL.json();\r\n        this.setState({ NacionalityList: data, loadingNacionality: true });\r\n\r\n    };\r\n    GetNacionalityStart = async e => {\r\n        const API_CALL = await fetch(`${API_URL}/competition/NacionalityTotalStart/${this.props.match.params.CompID}/`, {\r\n            headers: new Headers({\r\n                Authorization: TOKEN\r\n            })\r\n        });\r\n        const data = await API_CALL.json();\r\n        this.setState({ NacionalityListStart: data, loadingNacionalityStart: true });\r\n\r\n    };\r\n    GetNacionalityLast = async e => {\r\n        const API_CALL = await fetch(`${API_URL}/competition/NacionalityTotalLast/${this.props.match.params.CompID}/`, {\r\n            headers: new Headers({\r\n                Authorization: TOKEN\r\n            })\r\n        });\r\n        const data = await API_CALL.json();\r\n        this.setState({ NacionalityListLast: data, loadingNacionalityLast: true });\r\n\r\n    };\r\n\r\n    /*when props change*/\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.match.params.CompID !== this.props.match.params.CompID) {\r\n            this.setState({\r\n                loadingCategory: false,\r\n                loadingCategoryStart: false,\r\n                loadingGender: false,\r\n                loadingGenderStart: false,\r\n                loadingGenderLast: false,\r\n                loadingCategoryLast: false,\r\n                loadingGround: false,\r\n                loadingGroundStart: false,\r\n\r\n            });\r\n            this.GetData();\r\n\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <Header eventID={this.props.match.params.EventID} />\r\n                    {/*Send the event id to the MENU, to get the competition list*/}\r\n                    <Menu eventID={this.props.match.params.EventID} competitionID={this.props.match.params.CompID} />\r\n                    {/*CONTENT*/}\r\n                    <div>\r\n                        {/* Content Wrapper. Contains page content */}\r\n                        <div className=\"content-wrapper\">\r\n\r\n                            {/* Content Header (Page header) */}\r\n                            <section className=\"content-header\">\r\n                                <h1>\r\n                                    <span >{this.props.match.params.CompName}</span>\r\n                                </h1>\r\n                            </section>\r\n                            {/* Main content */}\r\n                            {/*Check if data is loading*/}\r\n                            <section className=\"content\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-6\">\r\n                                        {/* general form elements */}\r\n                                        <div className=\"box box-primary\">\r\n                                            <div className=\"box-header with-border\">\r\n                                                <div style={{ textAlign: \"center\" }} >\r\n                                                    <h3><FormattedMessage id=\"CATEGORY\" /> </h3>\r\n                                                </div>\r\n                                            </div>\r\n                                            {/* /.box-header */}\r\n                                            {/* form start */}\r\n                                            {(() => {\r\n                                                //Category\r\n                                                if (this.state.loadingCategory === false && this.state.loadingCategoryLast === false && this.state.loadingCategoryStart === false) {\r\n                                                    return (\r\n                                                        <div style={{ textAlign: \"center\" }} className=\"box-body\">\r\n                                                            <Loader />\r\n                                                        </div>\r\n                                                    )\r\n                                                }\r\n                                                else {\r\n                                                    return (\r\n\r\n                                                        <div className=\"box-body\">\r\n                                                            <FormattedMessage id=\"STARTS\" >\r\n                                                                {Starts =>\r\n                                                                    <FormattedMessage id=\"INSCRIPTIONS\" >\r\n                                                                        {Inscriptions =>\r\n                                                                            <FormattedMessage id=\"ARRIVALS\" >\r\n                                                                                {Arrivals =>\r\n                                                                                    <Chartbar ISThree={true} Arrivals={Arrivals} Start={Starts} Inscription={Inscriptions} data={this.state.categoryList} dataStart={this.state.categoryListStart} dataLast={this.state.categoryListLast} />\r\n                                                                                }\r\n                                                                            </FormattedMessage>\r\n                                                                        }\r\n                                                                    </FormattedMessage>\r\n                                                                }\r\n                                                            </FormattedMessage>\r\n\r\n                                                        </div>\r\n                                                    )\r\n                                                }\r\n                                            })()}\r\n                                        </div>\r\n                                        {/* /.box */}\r\n\r\n                                    </div>\r\n\r\n                                    <div className=\"col-md-6\">\r\n                                        {/* general form elements */}\r\n                                        <div className=\"box box-primary\">\r\n                                            <div className=\"box-header with-border\">\r\n                                                <div style={{ textAlign: \"center\" }} >\r\n                                                    <h3><FormattedMessage id=\"GENDER\" /></h3>\r\n                                                </div>\r\n                                            </div>\r\n                                            {/* /.box-header */}\r\n                                            {/* form start */}\r\n                                            {(() => {\r\n                                                //Gender\r\n                                                if (this.state.loadingGenderStart ===false && this.state.loadingGender === false && this.state.loadingGenderLast === false) {\r\n                                                    return (\r\n                                                        <div style={{ textAlign: \"center\" }} className=\"box-body\">\r\n                                                            <Loader />\r\n                                                        </div>\r\n                                                    )\r\n                                                }\r\n                                                else {\r\n                                                    return (\r\n                                                        <div className=\"box-body\">\r\n                                                            <FormattedMessage id=\"STARTS\" >\r\n                                                                {Starts =>\r\n                                                                    <FormattedMessage id=\"INSCRIPTIONS\" >\r\n                                                                        {Inscriptions =>\r\n                                                                            <FormattedMessage id=\"ARRIVALS\" >\r\n                                                                                {Arrivals =>\r\n                                                                                    <ChartGender Arrivals={Arrivals} Start={Starts} Inscription={Inscriptions} data={this.state.genderList} dataStart={this.state.genderListStart} dataLast={this.state.genderListLast} />\r\n                                                                                }\r\n                                                                            </FormattedMessage>\r\n                                                                        }\r\n                                                                    </FormattedMessage>\r\n                                                                }\r\n                                                            </FormattedMessage>\r\n\r\n                                                        </div>\r\n                                                    )\r\n\r\n                                                }\r\n                                            })()}\r\n\r\n                                        </div>\r\n                                        {/* /.box */}\r\n\r\n                                    </div>\r\n                                    <div className=\"col-md-6\">\r\n                                        {/* general form elements */}\r\n                                        <div className=\"box box-primary\">\r\n                                            <div className=\"box-header with-border\">\r\n                                                <div style={{ textAlign: \"center\" }} >\r\n                                                    <h3><FormattedMessage id=\"HEIGHT\" /></h3>\r\n                                                </div>\r\n                                            </div>\r\n                                            {/* /.box-header */}\r\n                                            {/* form start */}\r\n                                            {(() => {\r\n                                                if (this.state.loadingGround === false) {\r\n                                                    return (\r\n                                                        <div style={{ textAlign: \"center\" }} className=\"box-body\">\r\n                                                            <Loader />\r\n                                                        </div>\r\n                                                    )\r\n                                                }\r\n                                                else {\r\n\r\n                                                    return (\r\n                                                        <div className=\"box-body\">\r\n                                                            <ChartGround data={this.state.GroundList} />\r\n                                                        </div>\r\n                                                    )\r\n\r\n                                                }\r\n                                            })()}\r\n\r\n                                        </div>\r\n                                        {/* /.box */}\r\n\r\n                                    </div>\r\n                                    <div className=\"col-md-6\">\r\n                                        {/* general form elements */}\r\n                                        <div className=\"box box-primary\">\r\n                                            <div className=\"box-header with-border\">\r\n                                                <div style={{ textAlign: \"center\" }} >\r\n                                                    <h3><FormattedMessage id=\"CHECKPOINT\" /></h3>\r\n                                                </div>\r\n                                            </div>\r\n                                            {/* /.box-header */}\r\n                                            {/* form start */}\r\n                                            {(() => {\r\n                                                //Gender\r\n\r\n                                                if (this.state.loadingCheckpoint === false) {\r\n                                                    return (\r\n                                                        <div style={{ textAlign: \"center\" }} className=\"box-body\">\r\n                                                            <Loader />\r\n                                                        </div>\r\n                                                    )\r\n                                                }\r\n                                                else {\r\n                                                    return (\r\n                                                        <div className=\"box-body\">\r\n                                                            <ChartCheckpoint data={this.state.CheckpointTotalList} />\r\n                                                        </div>\r\n                                                    )\r\n\r\n                                                }\r\n                                            })()}\r\n\r\n                                        </div>\r\n                                        {/* /.box */}\r\n\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        {/* general form elements */}\r\n                                        <div className=\"box box-primary\">\r\n                                            <div className=\"box-header with-border\">\r\n                                                <div style={{ textAlign: \"center\" }} >\r\n                                                    <h3><FormattedMessage id=\"COUNTRY\" /></h3>\r\n                                                </div>\r\n                                            </div>\r\n                                            {/* /.box-header */}\r\n                                            {/* form start */}\r\n                                            {(() => {\r\n                                                //Gender\r\n\r\n                                                if (this.state.loadingNacionality === false && this.state.loadingNacionalityLast === false && this.state.loadingNacionalityStart === false) {\r\n                                                    return (\r\n                                                        <div style={{ textAlign: \"center\" }} className=\"box-body\">\r\n                                                            <Loader />\r\n                                                        </div>\r\n                                                    )\r\n                                                }\r\n                                                else {\r\n                                                    return (\r\n                                                        <div className=\"box-body\">\r\n                                                            <FormattedMessage id=\"STARTS\" >\r\n                                                                {Starts =>\r\n                                                                    <FormattedMessage id=\"INSCRIPTIONS\" >\r\n                                                                        {Inscriptions =>\r\n                                                                            <FormattedMessage id=\"ARRIVALS\" >\r\n                                                                                {Arrivals =>\r\n                                                                                    <Chartbar ISThree={true} Arrivals={Arrivals} Start={Starts} Inscription={Inscriptions} data={this.state.NacionalityList} dataStart={this.state.NacionalityListStart} dataLast={this.state.NacionalityListLast} />\r\n                                                                                }\r\n                                                                            </FormattedMessage>\r\n                                                                        }\r\n                                                                    </FormattedMessage>\r\n                                                                }\r\n                                                            </FormattedMessage>\r\n                                                        </div>\r\n                                                    )\r\n\r\n                                                }\r\n                                            })()}\r\n\r\n                                        </div>\r\n                                        {/* /.box */}\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </section>\r\n                        </div>\r\n                        {/* /.content-wrapper */}\r\n                    </div>\r\n                    <Footer eventID={this.props.match.params.EventID} />\r\n                </div >\r\n\r\n            </div >\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Header from \"../structure/Header\";\r\nimport Footer from \"../structure/Footer\";\r\nimport Menu from \"../structure/Menu\";\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\n\r\nexport default class feedback extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          name: '',\r\n          email: '',\r\n          message: '',\r\n          subject: '',\r\n          isClicked: false,\r\n\r\n        };\r\n\r\n      }\r\n    onNameChange(event) {\r\n        this.setState({name: event.target.value})\r\n      }\r\n    \r\n      onEmailChange(event) {\r\n        this.setState({email: event.target.value})\r\n      }\r\n    \r\n      onMessageChange(event) {\r\n        this.setState({message: event.target.value})\r\n      }\r\n      onSubjecthange(event) {\r\n        this.setState({subject: event.target.value})\r\n      }\r\n      handleSubmit(event) {\r\n        this.setState({isClicked:true})\r\n        event.preventDefault();\r\n        console.log(this.state);\r\n    }\r\n    \r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <Header eventID={this.props.match.params.EventID} />\r\n                {/*Send the event id to the MENU, to get the competition list*/}\r\n                <Menu eventID={this.props.match.params.EventID} competitionID={0} />\r\n                {/*CONTENT*/}\r\n                <div>\r\n                    {/* Content Wrapper. Contains page content */}\r\n                    <div className=\"content-wrapper\">\r\n\r\n                        {/* Content Header (Page header) */}\r\n                        <section className=\"content-header\">\r\n                            <h1>\r\n                                < FormattedMessage id=\"FEEDBACK\" />\r\n                            </h1>\r\n                        </section>\r\n                        {/* Main content */}\r\n                        <section class=\"content\">\r\n                            <div class=\"box box-primary\">\r\n                                <div class=\"box-header with-border\">\r\n                                    <h3 class=\"box-title\"></h3>\r\n                                </div>\r\n                                {/* /.box-header */}\r\n                                {/* form start */}\r\n                                <form role=\"form\" onSubmit={this.handleSubmit.bind(this)} method=\"POST\" >\r\n                                    <div className=\"box-body\">\r\n                                        <div className=\"form-group\">\r\n                                            <label>< FormattedMessage id=\"NAME\" />:</label>\r\n                                            <input id=\"name\"  value={this.state.name} onChange={this.onNameChange.bind(this)} type=\"text\" required className=\"form-control\" placeholder=\"O seu nome\" autoComplete=\"off\" style={{ backgroundImage: 'url(\"data:image/png', backgroundRepeat: 'no-repeat', backgroundAttachment: 'scroll', backgroundSize: '16px 18px', backgroundPosition: '98% 50%', cursor: 'auto' }} />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"exampleInputEmail1\">< FormattedMessage id=\"EMAIL\" />:</label>\r\n                                            <input type=\"email\"  value={this.state.email} onChange={this.onEmailChange.bind(this)} required  value={this.state.email} className=\"form-control\" placeholder=\"O seu email\" autoComplete=\"off\" style={{ backgroundImage: 'url(\"data:image/png', backgroundRepeat: 'no-repeat', backgroundAttachment: 'scroll', backgroundSize: '16px 18px', backgroundPosition: '98% 50%', cursor: 'auto' }} />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label>< FormattedMessage id=\"SUBJECT\" />:</label>\r\n                                            <input type=\"text\" required value={this.state.subject} onChange={this.onSubjecthange.bind(this)}   className=\"form-control\" placeholder=\"Assunto desejado\" autoComplete=\"off\" style={{ backgroundImage: 'url(\"data:image/png', backgroundRepeat: 'no-repeat', backgroundAttachment: 'scroll', backgroundSize: '16px 18px', backgroundPosition: '98% 50%', cursor: 'auto' }} />\r\n                                        </div>\r\n                                         <div class=\"form-group\">\r\n                                            <label>< FormattedMessage id=\"MENSAGE\" />:</label>\r\n                                            <textarea class=\"form-control\" value={this.state.message} onChange={this.onMessageChange.bind(this)} required rows=\"5\" placeholder=\"Insira a sua mensagem\"></textarea>\r\n                                         </div>\r\n                                    </div>\r\n                                    {/* /.box-body */}\r\n                                    <div className=\"box-footer\">\r\n                                        <button type=\"submit\" disabled={this.state.isClicked===false?\"\":\"disabled\"} className=\"btn btn-primary\">{this.state.isClicked===false? < FormattedMessage id=\"SEND\" /> : <div> < FormattedMessage id=\"SEND\" /> <i class=\"fa fa-refresh fa-spin\"></i></div>}</button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </section>\r\n                    </div>\r\n                    {/* /.content-wrapper */}\r\n                </div>\r\n                <Footer eventID={this.props.match.params.EventID} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport App from \"../App\";\r\nimport PageSubscribers from \"./Pages/Participants\"\r\nimport PageGiveUp from \"./Pages/DontFinished\"\r\nimport PageSubscriversCompetiton from \"./Pages/ParicipantsCompetiton\"\r\nimport PageCheckpoints from \"./Pages/Checkpoints\"\r\nimport PageWinners from \"./Pages/Winners\"\r\nimport PageAthleteDetail from \"./Pages/AthleteDetail\"\r\nimport PageTeams from \"./Pages/Teams\"\r\nimport PageFavorites from \"./Pages/Favorites\"\r\nimport PageStatsGlobal from \"./Pages/StatsGlobal\"\r\nimport PageStatsComp from \"./Pages/StatsCompetition\"\r\nimport PageFeedback from \"./Pages/feedback\"\r\n\r\n\r\nconst Router = () => (\r\n  <BrowserRouter >\r\n    <Switch>\r\n      <Route path=\"/\" component={App} exact />\r\n      <Route path=\"/EventParticipants/:EventID\"   component={PageSubscribers} />   \r\n      <Route path=\"/AthleteDetail/:EventID/:CompID/:AthleteID\"  component={PageAthleteDetail} /> \r\n      <Route path=\"/EventGiveUp/:EventID/:CompID/:CompName\"  component={PageGiveUp} /> \r\n      <Route path=\"/ParticipantsCompetiton/:EventID/:CompID/:CompName\"  component={PageSubscriversCompetiton} /> \r\n      <Route path=\"/Checkpoints/:EventID/:CompID/:CompName\"  component={PageCheckpoints} /> \r\n      <Route path=\"/Teams/:EventID/:CompID/:CompName\"  component={PageTeams} /> \r\n      <Route path=\"/Winners/:EventID/:CompID/:CompName\"  component={PageWinners} /> \r\n      <Route path=\"/Favorites/:EventID\"  component={PageFavorites} /> \r\n      <Route path=\"/Stats/:EventID\"  component={PageStatsGlobal} /> \r\n      <Route path=\"/Feedback/:EventID\"  component={PageFeedback} /> \r\n      <Route path=\"/StatsComp/:EventID/:CompID/:CompName\"  component={PageStatsComp} /> \r\n    </Switch>\r\n  </BrowserRouter>\r\n);\r\n\r\nexport default Router","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\nwindow.self.addEventListener(\"push\", event => {\n  const data = event.data.json()\n  const { title } = data\n\n  const body = {\n    body: data.body,\n    icon: data.icon\n  }\n\n  event.waitUntil(window.self.registration.showNotification(title, body))\n})\nexport function register(config) {\n  window.self.addEventListener(\"push\", event => {\n    const data = event.data.json()\n    const { title } = data\n\n    const body = {\n      body: data.body,\n      icon: data.icon\n    }\n\n    event.waitUntil(window.self.registration.showNotification(title, body))\n  })\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Router from './components/router';\nimport registerServiceWorker from './registerServiceWorker';\nimport * as serviceWorker from './serviceWorker';\nimport {IntlProvider} from \"react-intl\"\nimport Wrapper from \"./languages/Wrapper\"\n\nReactDOM.render(<Wrapper><Router /></Wrapper> , document.getElementById('root'));\n\n\n//registerServiceWorker();\n//serviceWorker.register();\n//SEND the id of the new user\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nregisterServiceWorker();\nserviceWorker.register();\n\n","var map = {\n\t\"./ad.svg\": 143,\n\t\"./ae.svg\": 144,\n\t\"./af.svg\": 145,\n\t\"./ag.svg\": 146,\n\t\"./ai.svg\": 147,\n\t\"./al.svg\": 148,\n\t\"./am.svg\": 149,\n\t\"./ao.svg\": 150,\n\t\"./ar.svg\": 151,\n\t\"./as.svg\": 152,\n\t\"./at.svg\": 153,\n\t\"./au.svg\": 154,\n\t\"./aw.svg\": 155,\n\t\"./az.svg\": 156,\n\t\"./ba.svg\": 157,\n\t\"./bb.svg\": 158,\n\t\"./bd.svg\": 159,\n\t\"./be.svg\": 160,\n\t\"./bf.svg\": 161,\n\t\"./bg.svg\": 162,\n\t\"./bh.svg\": 163,\n\t\"./bi.svg\": 164,\n\t\"./bj.svg\": 165,\n\t\"./bm.svg\": 166,\n\t\"./bo.svg\": 167,\n\t\"./br.svg\": 168,\n\t\"./bs.svg\": 169,\n\t\"./bt.svg\": 170,\n\t\"./bw.svg\": 171,\n\t\"./by.svg\": 172,\n\t\"./bz.svg\": 173,\n\t\"./ca.svg\": 174,\n\t\"./cd.svg\": 175,\n\t\"./cf.svg\": 176,\n\t\"./cg.svg\": 177,\n\t\"./ch.svg\": 178,\n\t\"./ci.svg\": 179,\n\t\"./ck.svg\": 180,\n\t\"./cl.svg\": 181,\n\t\"./cm.svg\": 182,\n\t\"./cn.svg\": 183,\n\t\"./co.svg\": 184,\n\t\"./cr.svg\": 185,\n\t\"./cu.svg\": 186,\n\t\"./cv.svg\": 187,\n\t\"./cw.svg\": 188,\n\t\"./cy.svg\": 189,\n\t\"./cz.svg\": 190,\n\t\"./de.svg\": 191,\n\t\"./dj.svg\": 192,\n\t\"./dk.svg\": 193,\n\t\"./dm.svg\": 194,\n\t\"./do.svg\": 195,\n\t\"./dz.svg\": 196,\n\t\"./ec.svg\": 197,\n\t\"./ee.svg\": 198,\n\t\"./eg.svg\": 199,\n\t\"./er.svg\": 200,\n\t\"./es.svg\": 201,\n\t\"./et.svg\": 202,\n\t\"./fi.svg\": 203,\n\t\"./fj.svg\": 204,\n\t\"./fk.svg\": 205,\n\t\"./fm.svg\": 206,\n\t\"./fo.svg\": 207,\n\t\"./fr.svg\": 208,\n\t\"./ga.svg\": 209,\n\t\"./gb.svg\": 210,\n\t\"./gd.svg\": 211,\n\t\"./ge.svg\": 212,\n\t\"./gg.svg\": 213,\n\t\"./gh.svg\": 214,\n\t\"./gi.svg\": 215,\n\t\"./gl.svg\": 216,\n\t\"./gm.svg\": 217,\n\t\"./gn.svg\": 218,\n\t\"./gq.svg\": 219,\n\t\"./gr.svg\": 220,\n\t\"./gt.svg\": 221,\n\t\"./gu.svg\": 222,\n\t\"./gw.svg\": 223,\n\t\"./hk.svg\": 224,\n\t\"./hn.svg\": 225,\n\t\"./hr.svg\": 226,\n\t\"./ht.svg\": 227,\n\t\"./hu.svg\": 228,\n\t\"./id.svg\": 229,\n\t\"./ie.svg\": 230,\n\t\"./il.svg\": 231,\n\t\"./im.svg\": 232,\n\t\"./in.svg\": 233,\n\t\"./io.svg\": 234,\n\t\"./iq.svg\": 235,\n\t\"./ir.svg\": 236,\n\t\"./is.svg\": 237,\n\t\"./it.svg\": 238,\n\t\"./je.svg\": 239,\n\t\"./jm.svg\": 240,\n\t\"./jo.svg\": 241,\n\t\"./jp.svg\": 242,\n\t\"./ke.svg\": 243,\n\t\"./kg.svg\": 244,\n\t\"./kh.svg\": 245,\n\t\"./ki.svg\": 246,\n\t\"./km.svg\": 247,\n\t\"./kn.svg\": 248,\n\t\"./kp.svg\": 249,\n\t\"./kr.svg\": 250,\n\t\"./kw.svg\": 251,\n\t\"./ky.svg\": 252,\n\t\"./kz.svg\": 253,\n\t\"./la.svg\": 254,\n\t\"./lb.svg\": 255,\n\t\"./li.svg\": 256,\n\t\"./lk.svg\": 257,\n\t\"./lr.svg\": 258,\n\t\"./ls.svg\": 259,\n\t\"./lt.svg\": 260,\n\t\"./lu.svg\": 261,\n\t\"./lv.svg\": 262,\n\t\"./ly.svg\": 263,\n\t\"./ma.svg\": 264,\n\t\"./mc.svg\": 265,\n\t\"./md.svg\": 266,\n\t\"./me.svg\": 267,\n\t\"./mg.svg\": 268,\n\t\"./mh.svg\": 269,\n\t\"./mk.svg\": 270,\n\t\"./ml.svg\": 271,\n\t\"./mm.svg\": 272,\n\t\"./mn.svg\": 273,\n\t\"./mo.svg\": 274,\n\t\"./mp.svg\": 275,\n\t\"./mq.svg\": 276,\n\t\"./mr.svg\": 277,\n\t\"./ms.svg\": 278,\n\t\"./mt.svg\": 279,\n\t\"./mu.svg\": 280,\n\t\"./mv.svg\": 281,\n\t\"./mw.svg\": 282,\n\t\"./mx.svg\": 283,\n\t\"./my.svg\": 284,\n\t\"./mz.svg\": 285,\n\t\"./na.svg\": 286,\n\t\"./nato.svg\": 287,\n\t\"./ne.svg\": 288,\n\t\"./nf.svg\": 289,\n\t\"./ng.svg\": 290,\n\t\"./ni.svg\": 291,\n\t\"./nl.svg\": 292,\n\t\"./no.svg\": 293,\n\t\"./np.svg\": 294,\n\t\"./nr.svg\": 295,\n\t\"./nu.svg\": 296,\n\t\"./nz.svg\": 297,\n\t\"./om.svg\": 298,\n\t\"./pa.svg\": 299,\n\t\"./pe.svg\": 300,\n\t\"./pf.svg\": 301,\n\t\"./pg.svg\": 302,\n\t\"./ph.svg\": 303,\n\t\"./pk.svg\": 304,\n\t\"./pl.svg\": 305,\n\t\"./pn.svg\": 306,\n\t\"./pr.svg\": 307,\n\t\"./ps.svg\": 308,\n\t\"./pt.svg\": 309,\n\t\"./pw.svg\": 310,\n\t\"./py.svg\": 311,\n\t\"./qa.svg\": 312,\n\t\"./ro.svg\": 313,\n\t\"./rs.svg\": 314,\n\t\"./ru.svg\": 315,\n\t\"./rw.svg\": 316,\n\t\"./sa.svg\": 317,\n\t\"./sb.svg\": 318,\n\t\"./sc.svg\": 319,\n\t\"./sd.svg\": 320,\n\t\"./se.svg\": 321,\n\t\"./sg.svg\": 322,\n\t\"./si.svg\": 323,\n\t\"./sk.svg\": 324,\n\t\"./sl.svg\": 325,\n\t\"./sm.svg\": 326,\n\t\"./sn.svg\": 327,\n\t\"./so.svg\": 328,\n\t\"./sr.svg\": 329,\n\t\"./ss.svg\": 330,\n\t\"./st.svg\": 331,\n\t\"./sv.svg\": 332,\n\t\"./sx.svg\": 333,\n\t\"./sy.svg\": 334,\n\t\"./sz.svg\": 335,\n\t\"./tc.svg\": 336,\n\t\"./td.svg\": 337,\n\t\"./tg.svg\": 338,\n\t\"./th.svg\": 339,\n\t\"./tibet.svg\": 340,\n\t\"./tj.svg\": 341,\n\t\"./tk.svg\": 342,\n\t\"./tm.svg\": 343,\n\t\"./tn.svg\": 344,\n\t\"./to.svg\": 345,\n\t\"./tr.svg\": 346,\n\t\"./tt.svg\": 347,\n\t\"./tv.svg\": 348,\n\t\"./tw.svg\": 349,\n\t\"./tz.svg\": 350,\n\t\"./ua.svg\": 351,\n\t\"./ug.svg\": 352,\n\t\"./us.svg\": 353,\n\t\"./uy.svg\": 354,\n\t\"./uz.svg\": 355,\n\t\"./ve.svg\": 356,\n\t\"./vi.svg\": 357,\n\t\"./vn.svg\": 358,\n\t\"./vu.svg\": 359,\n\t\"./ws.svg\": 360,\n\t\"./ye.svg\": 361,\n\t\"./za.svg\": 362,\n\t\"./zm.svg\": 363,\n\t\"./zw.svg\": 364\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 77;"],"sourceRoot":""}